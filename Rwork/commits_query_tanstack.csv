"name_with_owner","sha","author","date","verified","message","num_issues","commit_month","has_ci"
"TanStack/query","d4a90bdfc7cf94a751d8e38bb8b4ee076c61c331","tannerlinsley","2019-11-07 19:23:04","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,2,0
"TanStack/query","3ef9c7cba1fd7c859e0897ee663a122f14afc5b8","tannerlinsley","2020-05-15 21:06:32","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",12,8,0
"TanStack/query","ebb749a5b66f7d52d09fd8b6add346c913837c2b","tannerlinsley","2020-03-05 17:25:29","false","Add force and throwOnError options to query.refetch, updated docs

Fixes #202",5,6,0
"TanStack/query","fe44466a694fcc641e9628dc6d5eb389df8e03e3","fizwidget","2020-07-09 23:33:20","true","docs: Better comparison info about Apollo (#727)

Apollo does a deep comparison of the variables object when deciding whether or not the query needs to be re-executed. 

I can’t find this in the documentation, but know it to be true from experience. A quick squiz at the source code seems to indicate this is where it’s implemented:

https://github.com/trojanowski/react-apollo-hooks/blob/master/src/useQuery.ts#L119

(‘objToKey’ serialises the variables object.)",7,10,0
"TanStack/query","285fa2822678abc51aed57acf5d707d23048011c","edvinerikson","2019-12-01 23:08:55","false","Fix setQueryData crash (#54)

* Add test infra

* Add basic test and fix for setQueryData",2,3,0
"TanStack/query","ea673770c00c0aa94428126dc7a2d358cba911de","TkDodo","2023-01-23 15:31:16","true","docs: add readme.md to react adapter",32,40,1
"TanStack/query","3b2c4088e103e4b4ca990662c03fd6e67330b477","TkDodo","2021-05-07 15:52:17","true","feat(useQuery) transform placeholder data with select (#2108)

* feat(useQuery): run placeholderData through select

* feat(useQuery): run placeholderData through select

add a test for placeholderDataFunction

* feat(useQuery): run placeholderData through select

fix structural sharing, in the options, we might also have the placeholderData function, but on the previous result, we have the correct result from the previous iteration, which we want to keep if possible",36,20,0
"TanStack/query","fd5c3f1f2d0ca68667d6b9731c652651ed9e39d9","TkDodo","2022-09-18 09:39:41","true","fix: force release

RELEASE_ALL",21,36,1
"TanStack/query","7bfecd634704276eb83ba25786ed4ef60402f439","marbemac","2023-07-25 15:04:03","true","fix(solid-query): hydrate preloaded data correctly (#5775)

* fix(solid-query): hydrate preloaded data correctly

Signed-off-by: marbemac <marbemac@gmail.com>

# Conflicts:
#	packages/solid-query/src/createBaseQuery.ts

* only include extra props on server

Signed-off-by: marbemac <marbemac@gmail.com>

# Conflicts:
#	packages/solid-query/src/createBaseQuery.ts

* fix test watch command

Signed-off-by: marbemac <marbemac@gmail.com>

* update solid-start-streaming example deps

Signed-off-by: marbemac <marbemac@gmail.com>

# Conflicts:
#	examples/solid/solid-start-streaming/package.json
#	pnpm-lock.yaml

* add prefetch example to solid-start-streaming

Signed-off-by: marbemac <marbemac@gmail.com>

* fix: always fall back to resolving

Signed-off-by: marbemac <marbemac@gmail.com>

---------

Signed-off-by: marbemac <marbemac@gmail.com>",23,46,1
"TanStack/query","c45c1bfc4c9fcf6864f33e4f3d372777ccc3e16c","zorzysty","2022-11-06 15:40:33","true","fix(query-core): make isRefetching false when fetching next/previous page in an infinite query (#4465)

* fix: make isRefetching false when fetching next/previous page in an infinite query

* Update packages/query-core/src/infiniteQueryObserver.ts

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* Apply suggestions from code review

* prettier

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",15,38,1
"TanStack/query","9fc79d6b6c9fb6300c37277cd6a47988a2a1374b","tannerlinsley","2022-10-29 08:07:50","false","release: v4.13.4",17,38,1
"TanStack/query","8e7194ce68cd615d0d13bf14199de046cb5e378a","tannerlinsley","2020-08-24 20:37:20","false","docs: update comparison",11,11,0
"TanStack/query","bfae71ca7ac3c681baba36799c19b160bf27299f","tannerlinsley","2022-07-18 20:27:05","false","examples: add devtools dep",22,34,1
"TanStack/query","794e8be3bb59963b57330220b1a9a75005c85945","meesvandongen","2020-05-13 13:39:04","true","chore: replace swapi.co with swapi.org (#487)

Co-authored-by: Mees van Dongen <mvandongen@ilionx.com>",11,8,0
"TanStack/query","3b181101e77c6e0dfd01eca4b0e12a2c6633b076","boschni","2020-09-12 15:10:29","true","test: add previous data test (#1003)",10,12,0
"TanStack/query","85907ec808d21486a5ad3815eb424dbd18d2665d","cherniavskii","2020-02-29 15:13:51","true","add test for usePaginatedQuery state (#174)",1,6,0
"TanStack/query","69a5d798fed3beb69f015c131b05074050677223","henribru","2021-10-30 19:30:12","true","docs: Fix typo in query cancellation docs (#2863)",21,26,0
"TanStack/query","3ed888f7f3d741e4e2d6a5a250bcbf4b6ba4b1ff","eblin","2020-03-10 01:41:31","true","fix: getQueryArgs object syntax queryKey bug (#219)

fixes bug where passing queryKey falsy values would use whole object as the queryKey

it also adds a check for required queryKey, queryFn keys as only config and variables keys get a default value.",1,6,0
"TanStack/query","02b991cbbff850b2e52a1988ea08323e061f4e52","dumb-programmer","2023-10-18 14:24:14","true","docs: Update updates-from-mutation-responses.md (#6173)

Remove extra word ""via"" from the sentence.",7,49,1
"TanStack/query","10629eb5e954c29dad1e3f7a058de8ef1923d487","CalebLovell","2021-02-11 13:00:37","true","docs: add data structure note and another example (#1748)",18,17,0
"TanStack/query","9495006ed74189f2023b74f7da6ab6079dfd41c0","TkDodo","2022-10-29 08:04:03","true","fix(queryObserver): always structurally share placeholderData (#4402)",18,38,1
"TanStack/query","7e38bd2e7a69ca415ea5bace47c4adae35298246","gargroh","2020-05-05 17:02:56","true","Semantic release support (#403)

* chore: Using semantic release for publishing and changelog generation

* sync master (#1)

sync master (#1)

* Semantic release support (#2)

chore: Using semantic release for publishing and changelog generation

* chore: Correcting action indentation

* build: test semantic release of react-query

* feat: A new feature

* fix: yarn install (#3)

* feat: renaming module for test

* feat: change pkg name

* chore: adding yarn install

* doc: revert vscode settings

* Update package.json",10,8,0
"TanStack/query","f7a9ea8caf5c0780cd52a835efc3b3b503d0c5e6","tannerlinsley","2019-11-04 21:42:22","false","Update README.md",0,2,0
"TanStack/query","9ed2ee2474c2aa57fcbffc82f05235afb6588699","Mini-ghost","2023-10-08 22:28:21","true","fix(vue-query): solve type error about `useQuery` (#6092)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",10,49,1
"TanStack/query","9b21609350d9ad41faf5c2fb0ac6c67e4324a637","tannerlinsley","2022-12-03 13:53:23","false","release: v4.19.1",17,39,1
"TanStack/query","29c9b18832bd6b65ecbfd638cb6e8117657bed24","Mini-ghost","2023-09-07 08:14:18","true","refactor(vue-query): reduce code duplication (#5908)

Co-authored-by: Lachlan Collins <1667261+lachlancollins@users.noreply.github.com>",15,48,1
"TanStack/query","c227b2c3e90ee5774e39e702a0b882e89ca1ab43","TuckerWhitehouse","2020-07-17 01:58:31","false","feat(queryCache): pass query to subscribers (#765)

Any cache update triggered by a query will pass the query as the second argument to subscribers.
This enables executing side-effects for specific query updates.",8,10,0
"TanStack/query","466321b9f0adfe0c7120d79bda434059df190fe9","tannerlinsley","2023-09-25 06:29:10","false","release: v5.0.0-beta.37",9,48,1
"TanStack/query","5663e67b8d452a0e4a883ce42f382c8936115857","tannerlinsley","2020-03-09 19:32:07","false","v1.0.23",1,6,0
"TanStack/query","81baae3088f3488d0c177beca48fdd643d191578","tannerlinsley","2023-01-22 16:01:51","false","release: v4.22.4",31,40,1
"TanStack/query","0b1fb4bf6b0b152ca830022e18e2a506de5b4395","tannerlinsley","2020-09-22 18:15:12","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",6,12,0
"TanStack/query","b369b6c9fd289b66646c53b793785c9c0899497d","tannerlinsley","2023-04-24 15:20:38","false","release: v4.29.5",18,43,1
"TanStack/query","d6a78d038a4a1a0f807ae50a2688112a0ecbb780","tannerlinsley","2020-07-08 22:21:58","false","docs: update comparisons",7,10,0
"TanStack/query","11f4ea99c09e0f8e46ee2b5a15150cd8091ea2ae","artysidorenko","2022-01-21 12:18:28","true","fix(useQueries): allow types to work with strongly typed QueryFunction + QueryKey (#3214)",27,28,0
"TanStack/query","b19ad1f97a4aecac9a35a12aa7a6733fe14cac29","TkDodo","2021-03-30 17:36:01","true","fix(devtools): only subscribe to the queryCache while the devtools are open (#2045)

this will stop unnecessary and sometimes costly updates while they are closed",29,19,0
"TanStack/query","6bbb3710e5fae3bd8c425048be3a2b7f14c29100","TkDodo","2021-08-10 09:33:11","true","fix(useQueries): make sure keepPreviousData is respected (#2340)",23,23,0
"TanStack/query","c7c32f160281c6203b286d8e513ec5b03b7d168d","ardeora","2023-10-13 05:56:18","true","feat(query-devtools): Add Light mode support (#6146)

* feat(query-devtools): Add Light mode support

* Update inactive query light mode styles",7,49,1
"TanStack/query","f89a43d52ee0b58e738a97001b95f2288ff79861","tannerlinsley","2020-08-27 22:42:13","true","Update index.js",11,11,0
"TanStack/query","f079297ff87fa485ff2de97e2e1aa1d8461f8db0","tannerlinsley","2022-11-11 11:57:38","false","release: v4.14.7",19,38,1
"TanStack/query","65841a6ec088956ddd8a54fb59edc5a96b62c738","tannerlinsley","2022-11-26 00:12:29","false","release: v4.17.1",17,38,1
"TanStack/query","dda61a52ff9874d86c0ca6ca58474212f78bd645","tannerlinsley","2020-01-10 15:30:54","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",3,4,0
"TanStack/query","2f8da6aeb34c828a8a5ae25e37dcc9d98f09b44b","tannerlinsley","2023-09-13 06:30:09","false","release: v4.35.3",19,48,1
"TanStack/query","7d6b9fb57ea9189a957b125b5af0ae0978d1efb1","tannerlinsley","2020-04-20 17:44:56","false","v1.2.9",3,7,0
"TanStack/query","5bd3fa973b29dda91921a88142f628f5bbf84e1b","boschni","2021-02-06 18:37:44","true","fix: make sure state is not updated when unmounted (#1758)",23,17,0
"TanStack/query","4307a80fbc38130a1a42dab5ee9e15c6c3827207","manudeli","2023-08-04 19:17:46","true","docs(react-query): update returning type (#5838)",17,47,1
"TanStack/query","2416e6a8bd2ba07b0b5861334d2a1d67f9e03ab8","adibfirman","2020-03-04 15:24:55","true","Reset failureCount to zero (#191)

* fix: reset failure count when window is visible

* fix: unnecessary code",2,6,0
"TanStack/query","8a6ec246deaef9f4a0c1b32298874e3e74dc93c5","aviaviavi","2020-04-17 05:15:26","true","Update @scarf/scarf version to ^1.0.0 (#363)",2,7,0
"TanStack/query","cf0eb6cf70dce2403629a8a57182e0dc9a8180c7","allansson","2022-10-12 17:37:10","true","docs(useQueries): duplicate query keys disclaimer (#4303)

* docs(useQueries): duplicate query keys disclaimer

Document the issue discussed in #4187.

* Update docs/reference/useQueries.md

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",17,37,1
"TanStack/query","765830c55ac1156e0c51200fa4bed5d42b64c7b5","jan-dh","2021-10-27 16:05:21","true","chore: Setup bundle size report (#2837)",22,26,0
"TanStack/query","2e8f38c1ffd9ab3bda8f37efe7fd2c26d795b2e7","bennettdams","2021-04-25 19:24:55","true","docs: Add curly brackets to mutation example for TS (#2193)",35,19,0
"TanStack/query","8c519ccef0d5ad47c0c9ac6115ad5234ce61906b","kentcdodds","2020-03-20 23:27:17","true","do not call dispatch on removed query (#272)",4,6,0
"TanStack/query","61d6eb1eccc83a795ea57cb4d33917a7803e53fb","fmnxl","2019-11-25 16:23:30","false","remove fast-async nodent runtime (#52)",5,2,0
"TanStack/query","18dbc0fa181a8ec2befffcf352bfb7c6a1574c68","tannerlinsley","2019-11-04 21:58:32","false","Update README.md",0,2,0
"TanStack/query","a214db6a959354391530d8bc8acc55f40507bc00","tannerlinsley","2019-09-11 18:21:44","true","Update README.md",0,0,0
"TanStack/query","741cc3f2e0e876af52846211d01989947007fc10","DamianOsipiuk","2022-10-02 20:07:30","true","feat: vue-query adapter (#4254)

* feat: vue-query adapter

* fix: umd build

* chore: add basic example

* docs: add vue adapter page

* docs: add readme

* fix: shields in readme, package ver, ts config

* docs: fix one more link

* fix: removed unused params

RELEASE_ALL",17,37,1
"TanStack/query","1d9c2120ce0bcee95a047e90dbaee66f56b01646","DamianOsipiuk","2022-08-10 06:58:37","true","chore: allow to dispatch publish with tag override (#4014)",32,35,1
"TanStack/query","0a66bab3482c14c9275bec102d98b46649546940","krasinedev","2020-04-26 15:29:49","true","fix: edge case when refetching infinite query (#409)",6,7,0
"TanStack/query","8c1f55e7854387d62b194a052b84d1e468cc3457","raoufswe","2020-07-08 15:39:58","true","refactor: show keyboard shortcuts in large screens only (#719)",7,10,0
"TanStack/query","bfe13ba79bd93b94d88e71609e54fc8eef026beb","raoufswe","2020-07-09 05:06:33","true","docs: wrap get started and repo buttons in small screens (#723)",7,10,0
"TanStack/query","2be67cafac85cd26be60d27db24642e9b2d20a50","tannerlinsley","2020-02-27 17:55:54","false","v1.0.3",1,5,0
"TanStack/query","e798950f51f159a5a69ab71386491bf64de12b34","tannerlinsley","2020-09-23 19:04:58","false","docs: add client state replacement page",8,12,0
"TanStack/query","4e2f42504ac7bfd20f5feaf483765dda0a55b0bf","TkDodo","2023-10-22 18:29:38","true","docs: repo-header",6,49,1
"TanStack/query","3981f5219a1e3d8f48d13108b55673dcaea46319","TkDodo","2021-12-17 11:54:54","true","fix(query): set error to null when going to loading state (#3106)

to be aligned with the types, as `loading` cannot have an `error` set.",20,27,0
"TanStack/query","1ce5616939bae1e1b9dd9af6d37cd05c4fb07bf7","TkDodo","2022-11-01 07:58:53","false","chore: fix test output in publish script",15,38,1
"TanStack/query","b99ae600ef4e2e39f5c7a9baa8e15cc16f987888","lukemorales","2023-04-15 20:28:12","true","docs: Update `query-key-factory` example (#5277)",21,43,1
"TanStack/query","ddbd755bf621d6ba87574b1b913eb43be67dd5f0","joeydotdev","2021-06-27 02:29:54","true","Add Uber (#2410)",26,21,0
"TanStack/query","73e339624b1f5aa797dffe0138806fb400ae1765","ardeora","2023-11-11 20:57:36","true","fix(query-core): Show correct placeholderData when request in cache (#6357)

* fix(query-core): Show correct placeholderData when reuest in cache

* Fix formatting

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",0,50,1
"TanStack/query","e3a00034bd7dd4ec20277b4930e9969963b19576","crisanmm","2023-11-07 21:57:00","true","docs(QueryClient.md): fix typo immuatable → immutable (#6330)

I made a [PR for this before] (https://github.com/TanStack/query/pull/6328) but turns out that change was for v4 only. This is for latest",0,50,1
"TanStack/query","0eccfbfeca1d2df2ecd4296978084fb0b852c95f","TkDodo","2023-11-10 09:39:12","false","docs: suspense api docs",0,50,1
"TanStack/query","634b6dac3267e524f4b681d11934bdd4d2203a5a","DamianOsipiuk","2023-11-07 08:41:53","true","feat(vue-query): component based vue devtools - Vue3 only (#6255)",0,50,1
"TanStack/query","9b19eaa9c9bbe69c8a2d8bc5dc9399a25474b741","tannerlinsley","2023-11-07 04:30:11","false","release: v5.7.4",0,50,1
"TanStack/query","2d42f2bbc4e7f7d22b8948b8f5dd688382b61642","Dhoni77","2023-11-11 15:19:53","true","docs: add in editor-docs for gcTime key (#6339)

* chore: add in editor-docs for gcTime key

* chore: add in editor-docs for gcTime key

* Update packages/query-core/src/types.ts

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",0,50,1
"TanStack/query","196cced55fdc6e91bc509894d377c7113edb318a","tannerlinsley","2023-11-04 11:35:45","false","release: v5.6.1",6,50,1
"TanStack/query","5b9be1e299257e32c4c294796711f5d82f968530","tannerlinsley","2023-11-08 08:05:09","false","release: v5.8.1",0,50,1
"TanStack/query","b384c4e26fecd9ae9853adf0265a5609434f157f","EmmanuelDemey","2023-11-07 09:12:37","true","docs: add missing useQueryClient to the documentation (#6322)",0,50,1
"TanStack/query","3f82dc858817516fea2869cc2b72730954fd3003","lachlancollins","2023-11-11 01:27:07","true","chore: Fix monorepo issues reported by Sherif (#6354)",0,50,1
"TanStack/query","b5c0d76ea010491b0ff336120afa45049d9a45f2","tannerlinsley","2023-11-07 08:45:42","false","release: v5.8.0",0,50,1
"TanStack/query","58573e9a1c9f6f2e9bd0327c62e1e5ff153fe1c7","TkDodo","2023-07-14 10:19:52","false","docs: fix typo",41,46,1
"TanStack/query","64b173ef7b86c5095a0756c5545359464d773106","tannerlinsley","2021-01-05 23:40:37","false","docs: use page title for seo",21,16,0
"TanStack/query","7948e7a2914be5a789cd41a35d4fa6df96efc5d2","TkDodo","2021-11-17 18:33:16","true","chore: remove trailing comma in all-contributorsrc",25,26,0
"TanStack/query","e3fb5668ccebd4c1ecac672dc7d299f6e2408dca","NiclasvanEyk","2021-10-28 14:31:03","true","docs: Fix typo (#2850)",21,26,0
"TanStack/query","0547e629520f72819edc655b7274d3949b3b80ab","alexanderson1993","2021-09-29 18:48:51","true","fix(devtools): Default ReactQueryDevtoolsPanel isOpen to true (#2746)

change the `isOpen` prop for the ReactQueryDevtoolsPanel component to default
to true. The subscriptions aren't set up when no isOpen prop is passed, which makes
the panel not show any updates when used without the isOpen prop.

Closes #2745",25,25,0
"TanStack/query","1896ca27abf46d14df7c6f463d98eb285b8d9492","TkDodo","2021-09-18 17:34:02","true","feat: add isRefetching flag (#2469)",25,24,0
"TanStack/query","04a1346e89bbce20786fb3ab551d38bebbbfca59","jgettings","2020-07-02 23:37:51","true","fix(types): queryCache.getQueries (#688)

* fix(types): queryCache.getQueries

* fix(formatting)

* fix(types): queryCache parameters

* fix(formatting)

* fix(formatting)

Co-authored-by: Jen Gettings <jgettings@campuslabs.com>",3,10,0
"TanStack/query","989c4cd310737ad6340fa9096fa5f0d1e43d8824","deodad","2020-07-02 18:08:20","true","Update global suspense configuration in example (#694)",3,10,0
"TanStack/query","4227830753e44ebe24a3dc9405ea4f0a386f4d7d","tannerlinsley","2020-07-01 14:35:56","false","chore: workflow changes",2,10,0
"TanStack/query","f5786b163703b1586f9cb0cd83b69f2976dbf1d7","tannerlinsley","2020-06-30 19:46:58","true","fix: remove scarf",3,10,0
"TanStack/query","54d549ec4c28d464d25d630d564d3c62effbe804","tannerlinsley","2020-06-28 19:46:02","false","Update test-and-publish.yml",2,9,0
"TanStack/query","4712c0d4d77a12005d2d6557a375f783e62a1fba","kentcdodds","2020-06-25 05:17:04","true","fix: prefetchQuery args check (#631)",0,9,0
"TanStack/query","ef5becbb154e0284ab46345adea639bef79be137","tannerlinsley","2020-06-24 22:51:16","false","Update README.md",0,9,0
"TanStack/query","a68dc28727ce9628ac8b40132c9a8a0433c88fb6","tannerlinsley","2020-06-24 23:17:43","false","fix: queryKeySerializer now in the right spot of the config",0,9,0
"TanStack/query","2de852896b708e4d7736aa907210e82609e5d90d","tannerlinsley","2020-06-26 16:03:45","false","chore: Reorganize code to core + react",2,9,0
"TanStack/query","ce25ffa5dac431ca4cf965b3f99c5efb519a97b2","tannerlinsley","2020-06-25 16:45:30","false","Update README.md",1,9,0
"TanStack/query","340e4adefb3ce656bb1912c2f59fe065d4fd78d4","kurtfurbush","2020-06-25 01:28:23","true","Typo (#630)",0,9,0
"TanStack/query","660ef1e73ccddf8d6f697b6937f3d8b7e2313796","tannerlinsley","2020-06-25 00:34:26","false","Update package.json",0,9,0
"TanStack/query","c9afbc9ddff7dc04038eb1e4325bb7d6303d0dc1","tannerlinsley","2020-06-24 22:40:44","false","fix: call onSuccess for all query instances",0,9,0
"TanStack/query","a5148284ffb0bf830b5fffff876c9481955f0534","tannerlinsley","2020-06-24 20:36:00","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",0,9,0
"TanStack/query","5ce7b1e8d191c0e9f632d8376e4004de186b5f41","tannerlinsley","2020-06-22 23:56:31","false","test: Add more query key tests",0,9,0
"TanStack/query","4a37d1b3c4963e571ef8e9cb6741a2e44eeb639f","PepijnSenders","2020-06-22 18:06:36","true","chore(queryCache): add config parameter to `setQueryData` call (#587)",12,9,0
"TanStack/query","ebbf1a849b4ccbc8beae2d3afa08ca1a7a3b1218","tannerlinsley","2020-06-23 02:01:21","true","fix: remove unused wasPrefetched",0,9,0
"TanStack/query","f383ae6f88f5d05f01fac00d90128260f7f4e43c","Ayc0","2020-06-10 16:48:17","true","avoid using externalHelpers in prod (#568)",18,9,0
"TanStack/query","68cf4e17e0498917472524a85cbefe5997f77269","cheapsteak","2020-04-13 04:51:27","true","fix instruction typo in readme (#340)

afaik this isn't an acceptable way to import something (my editor was complaining)
```
const { useQuery } from 'react-query'
```",4,7,0
"TanStack/query","9dd9998dbfb8783e9d8981eaaa9c5c22cf54a4af","tannerlinsley","2020-04-01 16:13:37","false","Update README.md",0,7,0
"TanStack/query","f53d31a2ec4594a93fde14032bfa167b306ca8d4","cliffordp","2020-04-08 23:47:53","true","fix typos (#333)",1,7,0
"TanStack/query","a0ef66f05c9a3530d590f517c04be6ae8c058520","strdr4605","2020-04-13 04:52:19","true","docs: add links to top with jump2header (#342)",4,7,0
"TanStack/query","c284c906c55b1c2d8f1cb17286bc37981dabcfd8","kamranayub","2020-04-03 20:18:17","true","Passthru force and add test (#312)

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",1,7,0
"TanStack/query","6a73e6a0a3da2ff44a8b26a5362883d424c69a94","tannerlinsley","2020-03-27 03:11:03","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,6,0
"TanStack/query","d6746c8c562ba9530c213c419606ee2c90ac16cd","tannerlinsley","2020-03-26 05:49:05","false","v1.1.4",0,6,0
"TanStack/query","f849d694b7daab6ebe2a88627da0ae07fab1f9d7","tannerlinsley","2020-03-27 03:05:58","false","Fix useMutation race condition",2,6,0
"TanStack/query","1f42d5801c0eb26718bc5229fabe985545bca4bb","tannerlinsley","2020-03-26 06:25:31","false","Update README.md",0,6,0
"TanStack/query","baf19d1de2fa0c9fa84b1c97cd768e2e72db2b50","tannerlinsley","2020-03-30 20:48:51","false","Update README.md",2,7,0
"TanStack/query","3773a620306161156109c4a8fd50267458a68829","joeynimu","2020-03-26 15:23:55","true","Fix add dependancies (#288)

* fix: add and save dependancies in some of the examples

* fix: add and save dependancies in some of the examples",1,6,0
"TanStack/query","09818d5b40f07c7efc2ee546e233665cd96e7696","tannerlinsley","2020-03-30 20:45:03","false","Update README.md",2,7,0
"TanStack/query","de94c1da8fcbbeb20c43a76bfc5d8ca46b92b6bb","tannerlinsley","2020-03-17 21:59:32","false","Fixes #258",3,6,0
"TanStack/query","ae2cb8d486d15e4077b6c72cb6bef443ad14fa97","franleplant","2020-03-23 00:01:48","true","feature: useMutation onSuccess, onError, onSettled now have access to variables (#274)",4,6,0
"TanStack/query","8332c70c913524daf3dd791c91fff5ce0dcbbc64","tannerlinsley","2020-03-24 18:14:02","false","Fixes #275",2,6,0
"TanStack/query","5f881a93ff43527e0e5113f719be6adb52c8a94f","warlo","2020-03-10 22:33:02","true","Output es module (#224)

Co-authored-by: Hans-Wilhelm Warlo <hanswilw@users.noreply.github.com>",0,6,0
"TanStack/query","5f0ce69fc9262fbea99732e747308943ecb6e49f","tannerlinsley","2020-03-02 19:12:41","false","Make paginated tests run faster",0,6,0
"TanStack/query","aea14b40062307bc79eaec3abfd98a523e9604f9","tannerlinsley","2020-03-02 18:47:34","false","v1.0.8",1,6,0
"TanStack/query","1f3c641e5330607e4c33441db4b5ac942034d46d","tannerlinsley","2020-02-26 18:41:05","false","Update gitignore and size plugin",0,5,0
"TanStack/query","64a03a7d480e78d1dcbc76220a4ea4bf94cede0e","cherniavskii","2020-02-26 20:44:23","true","add unit test for setConsole (#156)",0,5,0
"TanStack/query","af32dbc294db9830aeb719081e2bfda0f2f2d987","donavon","2020-02-26 22:19:25","true","fix some readme typos (#157)",0,5,0
"TanStack/query","b549992a8a53a1fbcfdfcb57a42c27950e30e393","cherniavskii","2020-02-26 20:35:53","true","export setConsole function (#154)",0,5,0
"TanStack/query","5bf8f9b15029b4ad8d2106a35f86511e68ec57db","tannerlinsley","2019-11-08 17:49:28","false","Fix config context assigning issue",0,2,0
"TanStack/query","4b5b324563fa28b3ad26efe02b59d1d0337952a1","tannerlinsley","2019-11-05 17:33:32","false","Update README.md",0,2,0
"TanStack/query","88c1c679ea915264ca9f4986dd20e9933f7071e7","tannerlinsley","2019-11-05 20:50:04","false","Update README.md",0,2,0
"TanStack/query","6e4a1167fd263a0facdbf588837c87332cda958d","tannerlinsley","2019-11-05 20:48:55","false","Update README.md",0,2,0
"TanStack/query","fffed32ea52617fb5b7c35f8fe1bf057e37a4995","tannerlinsley","2019-11-05 22:59:25","false","Update README.md",0,2,0
"TanStack/query","097e1ee2ba94347c89b3ec5cb92a7d1ecb01fec8","arku","2019-11-06 06:16:26","false","Fix typo it's -> its (#12)",0,2,0
"TanStack/query","d1b86db2bbc31acc082425a18ce6ca3ee31b9def","tannerlinsley","2019-11-05 15:58:19","false","v0.2.1",0,2,0
"TanStack/query","16ec0bdc11b3792afffae305b482a37c634a85f8","tannerlinsley","2019-11-05 15:57:52","false","Cleanup",0,2,0
"TanStack/query","845cd182ff7ff509efb0bd5c02f1a7ca3eb6e595","tannerlinsley","2019-11-05 15:57:56","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",0,2,0
"TanStack/query","f2ea2212e66f84e83275f449ce1842a4f313204a","tannerlinsley","2019-11-05 22:55:54","false","Add experimental queryKeySerializerFn",0,2,0
"TanStack/query","24087ad36101dca955b81d23f1bc2f33fde6cf05","tannerlinsley","2019-11-05 23:06:38","false","Update README.md",0,2,0
"TanStack/query","3d21a45963bc809066b8291c5d016b4ff5d2fef8","tannerlinsley","2019-11-05 23:15:03","true","Update README.md",0,2,0
"TanStack/query","8361ddc221875d2764660d7a1ea58cb49738a553","tannerlinsley","2019-11-05 23:16:05","true","Update README.md",0,2,0
"TanStack/query","017bdb110a447a8664f047039bcb5479069f8442","tannerlinsley","2019-11-05 20:51:09","false","Stop building on now",0,2,0
"TanStack/query","bb2e1c9d4a0fa80b61c84042e250bf85c8bb7f21","tannerlinsley","2019-11-03 17:15:06","false","Update README.md",0,2,0
"TanStack/query","06ef8ca5d8fc732f9e98a49723f93367e7a871ea","tannerlinsley","2019-10-31 00:17:15","true","Update README.md",2,2,0
"TanStack/query","dbc76cd18fa4a5344440b11c65bc5a7275dbb007","tannerlinsley","2019-09-27 04:15:18","false","Update header",0,1,0
"TanStack/query","ccf3043f843fd740e58f98ec10334afa1e84a326","tannerlinsley","2019-09-11 18:28:42","true","Update README.md",0,0,0
"TanStack/query","78408ffa77eab9ceb76664099515e0d3a2ef1661","tannerlinsley","2019-09-11 20:59:04","false","v0.0.14",0,0,0
"TanStack/query","72835bd3a4b358bd514cd15e009dcd6a3a0b5850","tannerlinsley","2019-09-11 18:29:56","true","Update README.md",0,0,0
"TanStack/query","95a2494e9c27ae21d19eda7b1f24ba1343e31908","tannerlinsley","2019-09-23 01:02:27","false","Better timeouts",1,0,0
"TanStack/query","e3566bdd02a6ee11f3e5d5ab5a71cc4f4934d73c","tannerlinsley","2019-09-23 01:08:16","true","Merge pull request #3 from tannerlinsley/dependabot/npm_and_yarn/mixin-deep-1.3.2

Bump mixin-deep from 1.3.1 to 1.3.2",1,0,0
"TanStack/query","ef6b796e98bc5cfe00ba60a8b8784ed2b737c987","tannerlinsley","2019-09-23 16:57:38","false","Update package.json",0,0,0
"TanStack/query","3d5dca7cf8980a747e7e2030b1ee58f316a1a26d","tannerlinsley","2019-09-23 01:15:41","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,0,0
"TanStack/query","616a096a04a858592959ea27f62268555c1fa033","tannerlinsley","2019-11-03 17:15:12","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",0,2,0
"TanStack/query","8d49dcf363772adcbaad007d3367cc4b9769501e","tannerlinsley","2019-11-03 17:08:20","false","Refactor",0,2,0
"TanStack/query","0f7a9f6177ba39542da0752934fc0bd8cb359ff5","tannerlinsley","2019-09-21 14:37:47","true","Merge pull request #5 from thislogancall/master

Fix typos in README",1,0,0
"TanStack/query","8f0077bd8e9da12f493d46fb8920ee121d8ab0c3","tannerlinsley","2019-11-03 17:10:20","true","Update README.md",0,2,0
"TanStack/query","ae0f15bf9541ecbe9217f90b522e75893455ac8d","painedpineapple","2019-09-21 04:07:32","true","Fix typo",1,0,0
"TanStack/query","90f12b57e862c236dfb954b45843ed01148a8ed6","tannerlinsley","2019-09-30 14:43:23","false","Update README.md",0,1,0
"TanStack/query","f08c78f3130fbeb467c0c122468dd712d66defcf","tannerlinsley","2019-11-03 17:14:04","false","v0.0.13",0,2,0
"TanStack/query","2bbde0adfaadb2b63a4cf9f7d0a5f46b2d7ddba6","tannerlinsley","2019-11-02 20:37:07","false","Pre-refactor",0,2,0
"TanStack/query","143c5b2a37280cf35c433db40d93eade4a652180","tannerlinsley","2019-09-12 16:14:37","false","v0.0.15",0,0,0
"TanStack/query","b01a6d41ec16892fbaaf0c3d6be72eecfc52bfdd","tannerlinsley","2019-09-27 04:13:15","false","Update Logo and Header",0,1,0
"TanStack/query","4d66f14ae199fcd45db36077bc253fc33069e7f8","tannerlinsley","2019-09-12 18:27:18","false","Update index.js",0,0,0
"TanStack/query","8756a14e8c496cf8f2fec5fb6383009f4d2a3e6c","tannerlinsley","2019-09-11 20:58:39","false","Remove stringify-dependency",0,0,0
"TanStack/query","ba5e1931e82cc8324b6c5ed407f5e74bb353ba77","tannerlinsley","2019-09-11 20:58:46","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",0,0,0
"TanStack/query","6f586ec16b2b003a63ae0f3c07166cab2e9ab5d8","tannerlinsley","2019-11-03 17:13:25","false","v0.0.12",0,2,0
"TanStack/query","744a81de7d84dd0324e47f61feed70ac6f32c773","tannerlinsley","2019-09-11 16:41:51","false","v0.0.12",0,0,0
"TanStack/query","2daeaa00cf00b8bbf467e3cd2b008d15a8f111ee","tannerlinsley","2019-09-10 23:29:13","false","Update Example",0,0,0
"TanStack/query","d462e2ebaa957bfe5c09d4c5c0cfdc1ac5ac025e","tannerlinsley","2019-09-10 20:44:21","false","v0.0.6",0,0,0
"TanStack/query","d807308dd371ed657b0cb959d3a46784fd52745d","tannerlinsley","2019-09-11 16:26:12","false","v0.0.11",0,0,0
"TanStack/query","68260c809db8f1842bc729fadfb6c8326f9a3e17","tannerlinsley","2019-09-10 22:00:38","false","v0.0.9",0,0,0
"TanStack/query","400b7a89a2ecefb41bc3a4be7b92323c8446e303","tannerlinsley","2019-09-10 21:34:30","false","v0.0.8",0,0,0
"TanStack/query","9c6de9436a9d835078e6c539b540bb7f2eb5ceed","tannerlinsley","2019-09-10 20:15:48","false","v0.0.3",0,0,0
"TanStack/query","92e18f777675a86f629c3feb53bb4a24726f6514","tannerlinsley","2019-11-04 21:44:23","false","Update README.md",0,2,0
"TanStack/query","27067fd2c714c23754250fed5e2fc242b6bb4388","aboqasem","2022-08-12 07:26:48","true","fix(react-query-devtools): add required `react` versions as peerDependency  (#4011)",33,35,1
"TanStack/query","5eb728f72f5fc9fa08f857c1009e1cd9f904847f","tannerlinsley","2020-07-08 05:09:57","false","Delete logo-square.png",7,10,0
"TanStack/query","fabb2ae57120021eb16138c579d141c1c713fafd","nicholasgriffintn","2022-08-26 11:32:50","true","fix(react-query-devtools): Adding screenreader text to offline mock button (#4087)",20,35,1
"TanStack/query","fd280eca7eb366d6002f2dde3871f20c09326c4e","tannerlinsley","2020-06-24 17:58:59","false","fix: query.state.isFetching defaults to the loading status, despite lack of data

Fixes #624",1,9,0
"TanStack/query","61e47913cf6c1fca236afd33d692863455458159","tannerlinsley","2022-09-10 10:11:28","false","release: v4.3.0",19,36,1
"TanStack/query","e3a5974ba2d70b29ba3f45cba8c4f82d50407f2f","lithdew","2023-10-30 13:29:10","true","feat: support nextjs v14 (#6259)",4,50,1
"TanStack/query","efb77d7c403b9fa24afa8749eaba55eef72432ae","arnaudbzn","2022-02-05 12:09:21","true","docs(cancellation): add graphql request v4 example (#3264)",23,29,0
"TanStack/query","88a8b30b7385723d97caf5764f35e634e79094b5","Andarist","2023-09-13 06:22:47","true","fix: avoid reverting state to a fetching one (#5997)

* fix: avoid reverting state to a fetching one

* Update packages/query-core/src/tests/query.test.tsx

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",20,48,1
"TanStack/query","f8932da3d4e0b937eef7c30f787ac1fc39fe27db","tannerlinsley","2020-04-15 02:13:26","false","v1.2.4",1,7,0
"TanStack/query","3e2679f2a655d348e400c9b66931fd5f65b1fddb","tannerlinsley","2023-06-30 22:15:46","false","release: v4.29.20",26,46,1
"TanStack/query","24f6e9186388ce5350bf4a466f9aa56526802d13","tannerlinsley","2020-07-08 14:36:41","false","docs: new algolia api keys, fix doc edit links",7,10,0
"TanStack/query","9b927b67572640bba072db061244fbecf45d950a","tannerlinsley","2019-12-02 00:03:43","true","Update .travis.yml",2,3,0
"TanStack/query","85b76b8789621e1ba3f0b3f9e755f8fac48c8edf","tannerlinsley","2023-10-01 14:52:41","false","release: v4.36.0",9,49,1
"TanStack/query","bfef84c0661c68732b76e513a1940f1f4395b603","prateek3255","2021-11-06 14:53:11","true","chore: Add code coverage report (#2894)",22,26,0
"TanStack/query","43e223ac1fe88282e6a78883fdd5897f349aec89","cherniavskii","2020-05-01 03:16:11","true","Fix refetchInterval infinite loop (#404)

* use queryRef to avoid infinite loop in refetch interval effect

* fix original config being mutated by config from another hook instance

* store refetchIntervalId and fix refetchInterval comparison

* clear query.currentRefetchInterval on cleanup",7,8,0
"TanStack/query","cbba1a763f42522daa34fcaf5642ef43a2483df2","fmnxl","2019-11-15 17:30:43","false","guard against missing `document` on React Native (#38)",3,2,0
"TanStack/query","bd0d4de3c27ef4e31d6a5355717e8fdce4238c10","dkobierski","2021-03-30 17:34:12","true","docs: Correct typo which could mislead someone (#1832)",29,19,0
"TanStack/query","d97e2461a031a109f8c4b5dfe4865a3f9bef2996","tannerlinsley","2023-10-10 19:19:22","false","release: v5.0.0-rc.8",8,49,1
"TanStack/query","07b9f2ce97bc94907c66564190f83166994995d5","bviebahn","2021-03-18 21:51:34","true","feat: add useIsMutating hook (#1971)

* feat: add find/findAll functions to mutationCache, add useIsMutating hook

* docs: add useIsMutating reference

* fix import cycle

* use mutationCache in useIsMutating

* add useIsMutating test and document MutationFilters

* fix broken links",27,18,0
"TanStack/query","fefb9518e53bce40ceb83a9cfcbb8c4228bb9327","Newbie012","2022-11-05 18:29:22","true","fix(eslint-plugin): omit generics/types from dependencies (#4462)

* remove test only

* omit type identifiers from check",15,38,1
"TanStack/query","5b59446b8cb82369b8d8ba26d1319c0695dd14a6","DamianOsipiuk","2023-02-21 23:49:43","true","fix(vue-query): prevent memory leak in server environment (#5015)",28,41,1
"TanStack/query","4e30c3132b99537d7e2ce62f1e771484f707208f","tannerlinsley","2020-09-18 18:48:58","false","docs: update comparison",14,12,0
"TanStack/query","83ced962550f405efc81c0183ef5cb1e053f0e33","tannerlinsley","2020-05-11 14:04:02","false","fix(suspense): Suspense instances now unmount properly",15,8,0
"TanStack/query","c8799df563b1425dfd8d712d5d5f583ef38f295b","tannerlinsley","2023-04-28 15:08:05","false","release: v4.29.6",23,43,1
"TanStack/query","d25ab3ef8260ea1c02b52b7082c3ce4120596b31","tannerlinsley","2021-01-03 17:20:48","false","chore: remove some unused code",17,16,0
"TanStack/query","cbb90f37e2927d13d2158e0522769ec300fbdb6d","JonathanStoye","2020-07-31 21:05:02","true","chore: missing colons in issue template (#800)",14,11,0
"TanStack/query","4dfcf8989f6092ac8c0d555f5f3feb2c5b913abf","tannerlinsley","2021-03-26 22:17:30","false","docs: fix carbonads",30,18,0
"TanStack/query","8a9a80295a0e7335abd7d53d85054e7574cb4206","tannerlinsley","2019-11-19 20:01:57","true","Update README.md",5,2,0
"TanStack/query","35f23929a827ccd6808e0cc8c395f00ac81f06fc","tannerlinsley","2023-08-29 08:59:34","false","release: v4.34.2",14,47,1
"TanStack/query","df4c7554e3dcc9397e2dbdf9e68891b6ffd52606","tannerlinsley","2020-10-12 02:22:18","false","docs(examples): fix sandbox version",6,13,0
"TanStack/query","bae03c00b44817bce1017f0ca7a1106799711594","tannerlinsley","2023-01-21 14:59:00","false","release: v4.22.3",31,40,1
"TanStack/query","e42cbc32dfcd9add24cadd06135e42af1dbbc8ad","TkDodo","2021-03-31 14:20:42","true","fix(useQuery): let type of queryKey for the QueryContext be inferred from the key passed to useQuery (#2047)

* fix(useQuery): let type of queryKey for the QueryContext be inferred from the key passed to useQuery

* fix(useInfiniteQuery): let type of queryKey for the QueryContext be inferred from the key passed to useInfiniteQuery

* fix(useQuery): pass TQueryKey down to queryObserver

for more type safety and to make queryKeyHashFn generic as well",24,19,0
"TanStack/query","1d6bbb8cf824b2e09b8fb6eb283d0743b3a4d30b","tannerlinsley","2019-12-09 20:35:03","false","v0.3.22",3,3,0
"TanStack/query","93747709aca107517f2adfcb39da0ccb617d5c07","owinter86","2020-01-14 17:50:42","false","Fix cancelQueries is not a function error (#107)

This closes issue https://github.com/tannerlinsley/react-query/issues/103, and maintains the ability to cancel queries.",7,4,0
"TanStack/query","9626c1b732b657fa7feeffb2f4c019f203461708","gabrielbull","2021-04-28 17:47:46","true","feat(persist): Added hydrate and dehydrate options to the persistQueryClient function (#2131)",34,19,0
"TanStack/query","20b653f6d253128256ab11be52de44fa79b218ef","ikhattab","2021-02-16 06:39:30","true","docs: Update persistQueryClient.md (#1791)",13,17,0
"TanStack/query","0c7f63dc5eb245989dfb83a50a546e873ad9c7f7","tannerlinsley","2020-09-16 21:07:54","false","docs: update graphql docs",11,12,0
"TanStack/query","4df81f8a4294bf549747969f6e319784546063c9","tannerlinsley","2020-09-04 03:42:32","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",8,12,0
"TanStack/query","c30f4241fb0d3b39f4659f892c3586adc8fe1653","tannerlinsley","2020-07-10 15:34:25","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",7,10,0
"TanStack/query","21ace4c49d20be295e8ee16756c90b5cb68fd050","tannerlinsley","2020-05-01 17:48:33","false","Update CHANGELOG.md",6,8,0
"TanStack/query","92a79ee38e41b29478dfd60df704748ba776ecef","tannerlinsley","2019-11-20 19:24:07","false","v0.3.15",3,2,0
"TanStack/query","512813a61d2c8e066b4acd9a933a78462e3cb6c1","tannerlinsley","2020-03-06 15:04:47","false","v1.0.17",1,6,0
"TanStack/query","14c7b1efdd3539bd55b73f6f8cabfef077d3c6a7","lachlancollins","2023-06-12 08:26:44","true","chore: Merge more workspace changes from alpha (#5564)",23,45,1
"TanStack/query","2a370abc8c5e43b8d56101d3a7a06116f59380e4","TkDodo","2022-12-11 10:54:49","true","docs(examples): prefer object syntax for examples (#4621)

* docs: make useQuery use the object syntax

* docs(examples): useTransition doesn't have a timeout option anymore

* docs(examples): prefer object syntax for queryClient methods

* docs(examples): prefer object syntax for solid examples

* docs(examples): prefer object syntax for vue examples

* docs(examples): prefer object syntax for mutation examples",17,39,1
"TanStack/query","8065a7e8ed81f1d06520e0e638a1ab3329370ca4","emzoumpo","2021-11-10 19:43:07","true","docs: Typo fixes in Markdown files (#2910)",20,26,0
"TanStack/query","ef1d0d512f3de769b71487650c98a3d56881ce3c","tannerlinsley","2020-07-01 02:05:21","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,10,0
"TanStack/query","31d43d98949efc57e3c083d69ebe3f4f5dc48909","tannerlinsley","2023-07-24 12:09:49","false","release: v5.0.0-beta.1",23,46,1
"TanStack/query","3c91dbdf3bfb6ce1ba38e1ddab7b7e4888f09222","tannerlinsley","2022-12-25 12:32:36","false","release: v4.20.6",40,39,1
"TanStack/query","37560d3b85d72a23d0f794203f33d74a9ac7e1b2","tannerlinsley","2020-03-04 17:21:32","false","v1.0.11",2,6,0
"TanStack/query","7d9c9f872fff408e24656b4fd7f74890f01c3ff8","adebiyial","2021-04-29 19:15:32","true","docs: Fix typo in Mutations guide (#2210)",34,20,0
"TanStack/query","224125afe8d38db7337978b2bfff05ff05fdb21f","TimoVink","2020-12-14 23:10:11","true","docs: Fix broken links (#1419)

Co-authored-by: Timo Vink <timo.vink@orbis.com>",8,15,0
"TanStack/query","f6eeab079d88df811fd827767db1457083e85b01","nabilridhwan","2022-07-24 18:00:11","true","docs: Update documentation to point to the new CDN link (latest v4) (#3906)",22,34,1
"TanStack/query","2fdecb1d728eb1d90461b1f9d861e2da27108cb4","tannerlinsley","2020-09-16 21:09:24","false","docs: add graphql example",11,12,0
"TanStack/query","b95b86567dc5f448112d6be6ce5c08b4bf9e8769","ICodeMyOwnLife","2021-07-25 19:08:31","true","fix(MutationOptions): improve the type of onMutate (#2494)

set the return type of onMutate as Promise<TContext | undefined> instead of Promise<TContext> | Promise<undefined> to make it work with async functions",23,22,0
"TanStack/query","8c967c73d66200790e8a4aeb153ac629d3e4be4c","meatnordrink","2023-07-18 15:00:23","true","docs: fix visible comment in query-keys.md (#5736)

* Docs: fix visible comment in query-keys.md

* Docs: (minor) Remove unnecessary parentheses from query-keys.md",22,46,1
"TanStack/query","1d7ef5a165a4317e27555cad34e4b403a42ec21d","Newbie012","2022-12-25 15:29:26","true","fix(eslint-plugin): allow query key factory style (#4704)

* allow query key factory style

* fix conflict",41,39,1
"TanStack/query","6e6ccfc4809d9e81b563df380be557e3834403ea","Domino987","2020-07-02 14:20:51","true","fix: Enable partial makeQueryCache configs (#693)",3,10,0
"TanStack/query","e60e38ae0b9218f9e93bf1928117431716964a12","henribru","2022-11-26 15:51:05","true","docs: update some things referring to old react-query (#4557)

* docs: update some things referring to old react-query

* Update overview of other TanStack libraries

* Use query-core for downloads badge",16,38,1
"TanStack/query","a56a5b59a2bd0feb882f559b0f0b847d89e4e954","nanaeasiedu","2020-11-16 14:30:28","true","docs: fix typo for options used in querycache (#1291)",7,14,0
"TanStack/query","a2d81acf6a9130bafe447ed99daf295adb1dc110","lachlancollins","2023-07-28 12:59:46","true","fix(eslint-plugin-query): Update build entry files (#5798)",24,46,1
"TanStack/query","fa3a41020f0d3bb55f57490b7771f76eb58cace9","tannerlinsley","2019-11-19 22:48:11","false","Update README.md",5,2,0
"TanStack/query","bd3dc8be954b2eec17e4cf2752146a55253e9ed4","ee0pdt","2020-08-05 15:24:25","true","docs: Adds TS version requirement (#836)

* Adds TS version requirement

* Typo",5,11,0
"TanStack/query","e5786715c6ce3c9e15feac98ce0b5c6ac8242a9d","zorzysty","2022-11-29 19:29:39","true","docs: fix the example for `queryClient.ensureQueryData` (#4572)",16,39,1
"TanStack/query","d85f79bdf194f55498bef5e77c37d1af722ef104","Ephem","2020-08-29 18:47:56","true","Add queryCache de/rehydration (#728)

* chore(hydration): set up separate hydration entry point

* feat(hydration): add support for de/rehydrating queryCaches

- Add dehydrate(queryCache, config)
- Add hydrate(queryCache, dehydratedQueries, config)
- Add useHydrate(dehydratedQueries, config)

* test(hydration): fix broken type in test

* rename scheduleTimeoutsManually to activateTimeoutsManually

* docs(hydration): add API-docs for hydration and update comparison

* docs(ssr): update ssr-docs with new approach based on de/rehydration

* remove activateTimeoutsManually

* add default shouldDehydrate

* add hydration/ReactQueryCacheProvider

* use unknown for initialData in dehydration

* rename initialQueries  and dehydratedQueries to dehydratedState

* include queryKey instead of queryHash in dehydration

* update initialQueries to dehydratedState in ssr guide docs

* remove shouldHydrate-option",13,11,0
"TanStack/query","89d16947145fa4a21bc2a34cf51e51dbbcc6ff16","tannerlinsley","2020-09-02 13:53:25","false","docs: update comparison

Closes #920",7,12,0
"TanStack/query","fa7a6ace542f1101bad690c24ecbabca1450d04f","tannerlinsley","2022-07-19 00:56:15","false","release: v4.0.3",24,34,1
"TanStack/query","b943d79183bcac4e981b9897e81404c4aac060c9","tannerlinsley","2023-07-15 09:49:13","false","release: v4.29.24",25,46,1
"TanStack/query","8dd21dd61832bbdfa7b902a798743b06b64cd883","tannerlinsley","2023-10-24 04:29:13","false","release: v5.2.0",6,49,1
"TanStack/query","2d41d98854b919168b4ac158983a59e2176efa67","tannerlinsley","2023-09-14 05:29:47","false","release: v5.0.0-beta.27",20,48,1
"TanStack/query","243af3ece9d2c7602dcb5c5b500f6fd4a1dd68c2","Newbie012","2022-12-30 08:33:31","true","fix(eslint-plugin-query): exhaustive-deps false positives (#4725)",38,40,1
"TanStack/query","9584a6a6a6d8b41f5c7ae6448e639a0eecc0a7b5","Naymi","2022-11-13 18:12:44","true","fix(vue-query): useQueries options allow empty array (#4505)",17,38,1
"TanStack/query","1ec2c143912dacd0b3d21363ade35970c0a9e203","TkDodo","2023-02-26 16:37:04","true","chore: extract package validation to an extra script (#5039)

* chore: extract package validation to an extra script

and run it during CI

* chore: add missing `build:types` script to solid-query",27,41,1
"TanStack/query","46ad29a57163a768fdc05f1a12ae2cc5c69b2470","TkDodo","2022-09-30 06:32:10","true","feat(queryObserver): add isInitialLoading derived flag (#4244)

* feat(queryObserver): add isInitialLoading derived flag

this flag describes isLoading && isFetching and can be used to show a loading spinner for lazy or disabled queries

* chore(ci): fix caching

apparently, v3 has a fix: https://github.com/actions/setup-node/issues/543

* chore(ci): properly fix token issue

as described here: https://stackoverflow.com/questions/52015748/npm-failed-to-replace-env-in-config-npm-token

he extra warn output made the caching fail

* chore: fix bundlewatch glob

* docs: add a section about isInitialLoading to the migration guide",15,37,1
"TanStack/query","6adb0e18586e50089c7bb8c8e47108462b76815e","tannerlinsley","2023-08-01 19:56:18","false","release: v4.32.3",19,47,1
"TanStack/query","923c740ee2415e0806855381a6454603d23b7e6c","DamianOsipiuk","2022-10-04 12:50:23","true","fix: add proper rollup config for superjson (#4263)",16,37,1
"TanStack/query","1ab13dc22efeb9270e38269efaa346e24e3fc0f6","always-maap","2022-04-15 19:31:04","true","fix(devtools): adjust QueryKey height (#3497)",18,31,0
"TanStack/query","976e19d601838adcc172e5ae8edfe2e3a62def9d","tannerlinsley","2020-12-16 06:26:42","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",14,15,0
"TanStack/query","69d88cca55915a1830d66465289ecc2a6e83329f","nandorojo","2021-03-23 20:15:23","true","docs: fix typo (#2012)",31,18,0
"TanStack/query","78d473db42c12da11a23c3bb0fefb776d1b732d4","peter-mouland","2023-08-25 12:11:09","true","docs(use-queries): fix documented examples (#5902)",23,47,1
"TanStack/query","ee2735d84cc8e9926aa62e67776213383aca5291","ruisaraiva19","2020-08-20 16:29:17","true","chore(actions): revert semantic release action code (#895)",17,11,0
"TanStack/query","ba283fda80b91b03271abd6cb7110745951ed022","tannerlinsley","2019-11-25 16:54:01","false","v0.3.17",3,2,0
"TanStack/query","01c5b296749f676c7aca1a34997595f6ad4c75e4","boschni","2020-08-03 15:48:12","true","test: prevent queries from interfering with each other (#821)",5,11,0
"TanStack/query","9e414e8b4f3118b571cf83121881804c0b58a814","TkDodo","2021-10-02 16:16:20","true","feat(useQuery): make refetchInterval accept a function (#2622)",26,25,0
"TanStack/query","4083c1ef8a8734d2680a4e5f031c7958c18ee176","TkDodo","2021-04-29 20:17:38","true","fix(useQuery): make sure queryKeys are always an array at runtime when passed to the queryFn (#2200)",34,20,0
"TanStack/query","d4c9f420b338bbc2d288ad4c9f0cc9ee21045618","balazsmatepetro","2023-10-31 10:25:40","true","feat: `placeholderData` codemod (#6196)

* feat(codemod): add initial implementation of the `placeholderData` codemod

* chore(codemod): remove the parameter from the `placeholderData` function examples

It was a request by @TkDodo, since in `v4` the `placeholderData` function didn't have a parameter.

For further details see: https://github.com/TanStack/query/pull/6196#discussion_r1366618334

* chore(codemod): add an example where the `placeholderData` property is not a function

It was a request by @TkDodo, see: https://github.com/TanStack/query/pull/6196#discussion_r1366618334

* refactor(codemod): transform the usage only when the `keepPreviousData` has value `true`

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",3,50,1
"TanStack/query","ce53e07369e26344ea2fdc03db2c5033cf10174d","tannerlinsley","2020-07-09 20:43:48","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",7,10,0
"TanStack/query","9e9e2917655d6e59cf99b374cf04487a209e0365","tannerlinsley","2019-11-08 15:26:04","false","v0.3.5",1,2,0
"TanStack/query","39328662c40af700ce3c3c9ddcbfdc605a6887b2","tannerlinsley","2022-09-19 06:30:50","false","release: v4.3.9",17,36,1
"TanStack/query","bf76f7c087f0dc67ef227c5e9b0892aef3a1d357","tannerlinsley","2021-03-26 21:38:50","false","docs: add carbonads",30,18,0
"TanStack/query","a7cff10ffce4e35e18a7acd6a9169c620c388a76","tannerlinsley","2020-10-12 02:17:38","false","docs(examples): fix sandbox version",6,13,0
"TanStack/query","b832b0693af94b83ea855bd452a3793a4b881abe","ardeora","2023-10-10 22:11:57","true","feat(solid-query-devtools): Add Devtools (#6130)

* feat(solid-query-devtools): Add Devtools

Adds the devtools for @tanstack/solid-query package",5,49,1
"TanStack/query","09384925532c2f5437dfc2b51bc7d5547ceb1a8d","tannerlinsley","2023-10-25 23:03:29","false","release: v5.4.2",5,49,1
"TanStack/query","88f144c2733c0dd67aa4baf88ec0efa2bed8407c","Newbie012","2023-04-02 09:29:54","true","test(eslint-plugin): add test (#5218)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",21,43,1
"TanStack/query","76eea1db6a649af8e3766c3bb3c5c19b0b120698","juanprq","2020-04-15 01:16:39","true","add rick and morty example (#354)

* add rick and morty example

this is a very similar example to the star wars, since the star wars api
is going to be deprecated and is currently down, my proposal is to use
the rick and morty example to replace the star wars example that is not
working right now.

* add rick and morty example to README",2,7,0
"TanStack/query","6c3abf7cec758b73272b90eaa30785a0c72007a5","lachlancollins","2023-05-27 03:54:37","true","chore: Update to pnpm v8 (#5476)",25,44,1
"TanStack/query","98dd91f188db2d6ffe686d86eae4a0df98165db5","dotansimha","2021-06-09 06:46:38","true","docs: Added graphql-codegen plugin to the docs (#2356)",25,21,0
"TanStack/query","270fa0f4233fba6b4f7d0c48d2e5e21ca82be7df","AndersDJohnson","2020-07-21 22:35:21","true","docs: fix typo for initialData API (#788)",12,10,0
"TanStack/query","2861488ee467a4da9ac295bb4925d6502709b917","spiftire","2023-01-30 09:20:29","true","docs(createAsyncStoragePersister): Update documentation to match type (#4900)

* Update documentation to match type

There was a mismatch between the type declaration and the documentation.

* fix formating",32,41,1
"TanStack/query","24f17b96be388060721a44b7db062a889299f484","xJkit","2019-11-23 17:02:52","false","Fix prefetch function typo in readme (#50)",4,2,0
"TanStack/query","9077bb96422df056d63383a98c9b72858d482a99","GLabat","2023-06-25 14:28:11","true","refactor(query): add more context to ""Missing queryFn"" error (#5620)

* refactor(query): add more context to ""Missing queryFn"" error

* refactor(query): use queryHash in error message for serialisation concern

---------

Co-authored-by: Guillaume Labat <guillaume.labat+git@imagino.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",24,45,1
"TanStack/query","cd89dc2907228a79992be31f52be6cc43cf8fdc5","TkDodo","2022-08-26 12:05:31","false","chore(publish): restrict change detection to src directory

since package.json is updated a lot by the cipublish script itself, that basically means every release releases all packages. Changes to non-src directories not yielding releases should be fine. For false-negatives, we can still trigger manually.",20,35,1
"TanStack/query","7f69223e9ff97cf65157344ada0f9b0581d300ad","TkDodo","2023-08-15 07:37:09","false","test: silence error console in tests where known errors are thrown",21,47,1
"TanStack/query","880f971176ac77a7577000ffb1dace3597cfe728","bviebahn","2020-08-03 18:54:17","true","fix: fetch query when any instance is enabled (#827)",5,11,0
"TanStack/query","d157a456b952af1431402e1c992029db7d3d93fe","ottomated","2023-10-24 20:02:50","true","feat(svelte-query): Add `queryOptions` (#6211)

* Add queryOptions

* remove datatag

* move StoreOrVal to the outermost layer

* fix fails

---------

Co-authored-by: Ottomated <otto@ludwigstreampc>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>
Co-authored-by: Lachlan Collins <1667261+lachlancollins@users.noreply.github.com>",6,49,1
"TanStack/query","81edf3b2824344c1886452cf94390e59375c333d","ardeora","2023-10-24 15:11:29","true","fix(solid-query): Export `useMutationState` hook (#6233)",6,49,1
"TanStack/query","515803f5fa7ebc35ecb0504e60df9fe7e3bf057f","Mini-ghost","2023-09-07 08:20:05","true","perf(vue-query): avoid unnecessary deep watch in suspense (#5919)

Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",15,48,1
"TanStack/query","a41f0bfdeeb197017a0837b4a23f4a54309ac5bb","DamianOsipiuk","2023-08-19 21:15:07","true","docs(vue-query): update typescript page examples and playgrounds, add link to custom-client page (#5890)

* docs(vue-query): update typescript page examples and playgrounds

* docs(vue-query): add link to custom-client page",22,47,1
"TanStack/query","078114254d7c22cffa74283bf818914439840884","JaeYeopHan","2021-12-14 12:07:29","true","fix(core): remove enabled condition in queryObserver for suspense (#3093)

* fix(core): remove enabled condition in queryObserver

https://github.com/tannerlinsley/react-query/issues/2434

* chore: add missing test case

* chore: fix format",21,27,0
"TanStack/query","d40f2bbb5309f7ca077743a2b59d485a56f633a3","cherniavskii","2019-12-08 21:38:52","false","reset `query.error` only after data is fetched (#67)",3,3,0
"TanStack/query","7c2fe9ee13afb75a9572fa248b2a57268a3257e4","tannerlinsley","2020-07-09 16:15:29","false","docs: typo",7,10,0
"TanStack/query","67ba20d39ead7b1653f938008b4d95593f842659","bbigras","2020-12-14 21:53:12","true","fix: remove unneeded bracket in README (#1418)",8,15,0
"TanStack/query","a7972eb733fd14dcabbabd09c6515d6641d48b04","matthewhausman","2022-10-23 09:44:11","true","fix(vue-query): properly unref useMutation parameters (#4363)

* update

* Update useMutation.test.ts

* Update useMutation.ts

* Update useMutation.test.ts

* Update utils.ts

* Update useMutation.test.ts

* Update useMutation.test.ts

* Update useMutation.test.ts

* Update useMutation.test.ts",18,37,1
"TanStack/query","7e29579c60e2b309e0c1fa9dc58a649c9c9fcc6a","tannerlinsley","2021-01-01 19:30:02","false","fix: improve devtools styles",17,16,0
"TanStack/query","55249fd244eb825bcce596d0c3e70cf309090676","tannerlinsley","2022-08-16 08:24:23","false","release: v4.2.0",21,35,1
"TanStack/query","14dba5c6b099538f10b8cb197309ca709e5e9760","tannerlinsley","2020-09-16 20:52:44","false","docs: Add graphql docs",11,12,0
"TanStack/query","627560ff8b17c7d50c7184bf2a66fafa86b76bec","tannerlinsley","2021-02-12 22:57:37","false","fix: useEffect is now defined

Fixes #1787",14,17,0
"TanStack/query","4f98462b95b85d1a94092f18245f0c50a7eb6725","tannerlinsley","2020-07-08 15:24:06","false","docs: better site footer",7,10,0
"TanStack/query","ff830db831f89ba7cebe66cf8c23ca218bdb3643","prateek3255","2021-06-05 08:53:00","true","fix(devtools): fix devtools crash on rejected promises on refetch (#2344)

Catch the error using noop when refetching the query via devtools

fixes #2014",24,21,0
"TanStack/query","a85d822e24e64713d16b412a05cb2b26efcc7744","shihfu","2021-10-04 06:45:25","true","fix(devtools): replace all instances of rem with em. (#2760)",25,25,0
"TanStack/query","afdd554d643df238f2b096bd82195235197922b8","nicolaslen","2022-08-11 15:35:36","true","docs: Fixed some broken links (#3998)",34,35,1
"TanStack/query","caf841ae933a2733b6a1ac5a865b556331b3eec4","mauriciosoares","2021-07-16 08:54:35","true","docs: Update testing with disabled retries (#2460)",29,22,0
"TanStack/query","5d56cf5c28f3e8a55183d45e31d3e5bc88a36f57","tannerlinsley","2020-11-02 16:34:34","false","docs: update sponsors",14,14,0
"TanStack/query","c921585fd79bce7cb5133714d2490510863b4e21","boschni","2021-02-09 08:12:07","true","fix: handle select errors (#1760)",17,17,0
"TanStack/query","6af7b9a1cad177ab68f0913b29233d663e640483","TkDodo","2022-09-11 09:34:58","false","fix(publish): make sure we can release transitive dependency packages

RELEASE_ALL",19,36,1
"TanStack/query","c6748fba7bd7695b851f8c4dd457f7ac99b63d0d","TkDodo","2023-08-05 06:32:35","false","Merge remote-tracking branch 'origin/main' into beta

# Conflicts:
#	packages/query-async-storage-persister/package.json
#	packages/query-broadcast-client-experimental/package.json
#	packages/query-core/package.json
#	packages/query-persist-client-core/package.json
#	packages/query-sync-storage-persister/package.json
#	packages/react-query-devtools/package.json
#	packages/react-query-persist-client/package.json
#	packages/react-query/package.json
#	packages/solid-query/package.json
#	packages/svelte-query/package.json
#	packages/vue-query/package.json",16,47,1
"TanStack/query","fc743a99ca901309e707896ef2795569b4c3fab9","TkDodo","2022-11-05 08:36:00","true","docs: link angular query (#4461)",15,38,1
"TanStack/query","813d70f659db73cc484fc0f465ed5a760f470853","babycourageous","2021-01-22 17:41:38","true","docs: add v2 docs links (#1676)

* docs: add v2 docs links

* revert (partial): docs: add v2 docs links

This partially reverts commit 48c40e387a18476d13f323b3c40c655e41b4d5d6 - reverting docs Nav only.

* docs: add v2 docs link to home page banner.",25,16,0
"TanStack/query","1117a516854361657c24105897631edf63263a1e","AlexKMarshall","2020-09-04 16:11:24","true","docs: typo in useQuery.test (#965)",8,12,0
"TanStack/query","46fae940e1acdfaab2b8d0480dd32cd8a8257192","DamianOsipiuk","2022-12-29 08:24:43","true","docs(vue-query): migrate vue-query docs (#4710)

* docs: vue guides

* docs: vue query docs part 2

* docs: vue-query docs part 3

* docs: vue-query docs part 4

* docs: vue-query api reference

* docs: vue-query examples

* docs: fix TanStack casing",37,40,1
"TanStack/query","e4efc3993903a825fa84ccca5a0cca679c14c401","MichaelDeBoey","2020-06-29 23:30:17","true","Use funding key in package.json instead of postinstall script (#666)

* Delete postinstall.js

* Update package.json",4,9,0
"TanStack/query","b3c335d16d79b0179ddaab3d7433ef1bb69681b0","tannerlinsley","2020-03-18 18:29:44","false","Fixes #11",1,6,0
"TanStack/query","fa7f13c41b8f9fd6e7e78cdb66b2d0b73ae5435b","zorzysty","2022-08-11 15:55:48","true","docs(examples): Migrate star wars example to vite (#3957)

* docs(examples): migrate examples/react/star-wars to vite - adjust file structure

* docs(examples): migrate examples/react/star-wars to vite",34,35,1
"TanStack/query","4f515dec96c763633a2a35b7918c3ab323d2d0aa","lachlancollins","2023-01-21 14:53:42","true","fix(svelte-query): Fix createMutation for functions that take no arguments (#4847)

* Update createMutation test function name

* Default TVariables = void

* Fix createMutation test

* Fix prettier",31,40,1
"TanStack/query","9aed040364796cdd5cab0f53123e02a6c6f769de","IanVS","2021-06-17 09:02:28","true","fix(devtools): Hide devtools when closed, prevent focus (#2376)",29,21,0
"TanStack/query","684c07f29d33b375d7ffe250873b7617798fbbf7","tannerlinsley","2020-07-09 20:43:42","false","Update logo.sketch",7,10,0
"TanStack/query","734f1b39b69dabc41b254067eb5aeb60aee002e7","maangs","2023-02-21 07:55:23","true","docs: Update overview.md (#5011)

Remove unnecessary word _doing_",28,41,1
"TanStack/query","f0e8db86985a9d14eb27ac777efa96b773141361","tannerlinsley","2020-03-06 18:03:19","false","v1.0.20",1,6,0
"TanStack/query","f4eb19421c6c76506cad3c0c1f6891f2d4feb46a","fishmandev","2021-12-31 10:29:15","true","docs: Fix a typo in tkdodos-blog.md (#3152)",22,28,0
"TanStack/query","473af3d5aed3e21cf80ae67027461311d2fd386d","boschni","2020-08-24 19:42:36","true","feat: add refetch on reconnect functionality (#919)",11,11,0
"TanStack/query","1299ad6c4ccd4f07128f7cada49dc7b962cdba5d","meesvandongen","2021-01-05 08:53:48","true","fix: make sure queries which have dataUpdatedAt of 0 will be run (#1556)",19,16,0
"TanStack/query","cf9bd9c1671274903879945f4802ca23b5a25bbd","Avi98","2020-06-08 18:58:20","true","fix: remove shouldContinueRetryOnFocus on success (#563)

Co-authored-by: Avinash <aviesdfsdfsdnash.kumar@instarem.com>",19,9,0
"TanStack/query","bd04c70d8a5aeb246e43fca9a37572c379b58ef8","Quodline","2023-10-09 13:30:47","true","docs: fix typos (#6121)

* docs(typo): fix typo in word ""semi-colon""

remove hyphen from word. Now ""semicolon""

* docs(typo): fix grammar error

Replace ""it's"" with ""its""

* docs(typo): fix grammar error

Replace ""along side"" with ""alongside""

* docs(typo): fix spelling error

Replace ""fallback"" with ""fall back"". Fallback can only be used as a noun",9,49,1
"TanStack/query","326c6e56463f30d969f8b74378fee6f35bbd15d0","TkDodo","2022-09-26 15:42:59","true","feat(query-persist-client-core): split persist-client into a separate core package (#4222)

* feat(query-persist-client-core): split persist-client into a separate core package

* feat(query-persist-client-core): revert depending on the new package

because it doesn't exist yet on npm

* feat(query-persist-client-core): revert unintentional changes to test files",16,37,1
"TanStack/query","e09f78de0b5bf487edf66f2183f3578a1a6ebf62","tannerlinsley","2019-11-04 21:32:18","false","Update README.md",0,2,0
"TanStack/query","2cb94ad467b4b0fe043a68afaa1f18ad5b94a60e","MitchelSt","2021-04-10 13:48:14","true","docs: fix typo (#2082)",26,19,0
"TanStack/query","60452ef307dd6402632c7444f0948645baaf12c7","tannerlinsley","2020-02-17 06:37:53","false","Add setConsole utility

Fixes #125",3,5,0
"TanStack/query","10aaac02dce9a314b164e33c3e7e54ed39c1d89a","MichaelDeBoey","2020-07-03 01:52:49","true","Update test-and-publish.yml (#700)",2,10,0
"TanStack/query","1beedf9516c64bbcdd38afcc241276733fb2cd1d","TkDodo","2021-09-19 06:11:34","true","fix(core): make sure erroneous queries refetch when query keys change (#2686)",24,24,0
"TanStack/query","f000af174d627a0cd19115c3e568310897efcdb0","TkDodo","2021-03-31 20:20:39","true","chore: codesandbox auto builds (#2062)

* chore: try out codesandbox auto builds

* commit something to trigger deployments

* chore: codesandbox auto builds

set node to v14 because: [!] TypeError: inputSrcs.map(...).flat is not a function

* chore: codesandbox auto builds

use the root directory for publishing, because it contains the package.json

* chore: codesandbox auto builds

let's see if codesandbox picks up the basic example with a leading slash like shown in the docs

* chore: codesandbox auto builds

revert the test commit

* chore: codesandbox auto builds

add basic-typescript example

* chore: codesandbox auto builds

add basic-typescript example to codesandbox builds

* chore: codesandbox auto builds

no-use-before-define

* chore: codesandbox auto builds

don't use exact versions for examples, otherwise, we won't have the latest version when trying them out",24,19,0
"TanStack/query","b575e910e7e4ee8a64351c10432bc45c0fddfa9a","Julius-Rapp","2020-09-18 17:31:01","true","docs: fix `user.id` access in case user is null (#1056)",14,12,0
"TanStack/query","0f00cda954e8d5bdd1ea968f793cce2f8640ad58","incleaf","2021-12-10 12:14:30","true","docs: Make react-native example up-to-date #3057",23,27,0
"TanStack/query","57be6e602dc2e3f716e4a06cbda62a0c1e517126","thebergamo","2021-01-07 07:58:33","true","docs: fix misleading code example (#1567)",22,16,0
"TanStack/query","34ad882746f807d203a077f8c93845499a0933e0","aadito123","2023-09-13 07:46:10","true","feat: Svelte implementation of client persistence (#5928)

Co-authored-by: Lachlan Collins <1667261+lachlancollins@users.noreply.github.com>",19,48,1
"TanStack/query","af8b3968513d480deeaf2f9717eda35c960d5fa9","iaurg","2020-09-24 13:20:45","true","Adjust link into overview page (#1089)

* Adjust link into overview page

I've adjusted the link to the installation page, I think that's the right page.

* Better separation in text",11,12,0
"TanStack/query","4266f0b77c939bdfd0d4a37285af63240b280b7a","danielroe","2023-11-07 23:41:47","true","docs(vue-query): import nuxt composables from #imports (#6329)

* fix: import nuxt composables from #imports

* chore: also import `defineNuxtPlugin`",1,50,1
"TanStack/query","7db5da560e56647d019c0500e04dc1573c6e7f6b","tannerlinsley","2022-08-26 09:52:08","false","release: v4.2.2",20,35,1
"TanStack/query","8906dac48847404c9ab84fd975052f70062048d7","tannerlinsley","2023-10-24 15:15:57","false","release: v5.2.1",6,49,1
"TanStack/query","bb7dcf0b71c624b753e7bd4ea4e08b516150c175","tannerlinsley","2019-11-07 19:22:57","false","v0.3.3",2,2,0
"TanStack/query","c7d1326ce75de4b584b74d116f01dd7df865e65e","tannerlinsley","2020-07-08 17:38:02","false","docs: better sponsor bubbles",7,10,0
"TanStack/query","de45e772f84685e687d10d2ed57a7c742bff8042","tannerlinsley","2023-01-30 14:48:07","false","release: v4.24.3",30,41,1
"TanStack/query","adf38ea7ddfe2f73164a391c953570d4951d0548","tannerlinsley","2020-07-08 17:01:28","false","docs: examples now show devtools by default",7,10,0
"TanStack/query","fe7df40289ad78eba542194dc15501c52073a0f3","manudeli","2023-08-01 13:04:34","true","chore(.eslintignore): add eslint ignoring rule (#5813)

* chore(.eslintignore): add ignoring rule

* chore(ignore): ignore build excluding top level

* chore: fix prettier

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",18,47,1
"TanStack/query","fa681126f9b6c94d6c12428df8d9edbd73c66f29","minami-minami","2022-11-09 14:59:53","true","docs(guides/prefetching): prefer object syntax (#4492)",20,38,1
"TanStack/query","c21095798c9876e408c4f955b9794a23e00e39b0","lachlancollins","2023-01-10 08:20:54","true","docs(svelte-query): Add SSR and SvelteKit guide (#4786)

* Add SSR docs

* Remove semicolons to match project style",37,40,1
"TanStack/query","12e128bd76f9b1d230bd3aba41d8c5b99272688f","br0p0p","2021-06-25 17:42:23","true","docs: update query function usage examples (#2394)",30,21,0
"TanStack/query","c3434575a1221a33ed9684f87ef961f7df5adeb4","kachkaev","2021-04-17 09:40:48","true","fix: Add TQueryKey to QueryFunction generic type in QueryOptions, remove ensureArray from Query (#2074)

* Add TQueryKey to QueryFunction generic type in QueryOptions

* Fix typing in souurce

* Fix inner typings, add test

* Avoid ""as unknown"" hack

* Remove ensureArray",28,19,0
"TanStack/query","6fc51ddfe2d466842ed9b0ba03f2f1b767621d7c","TkDodo","2023-03-14 08:37:39","true","chore: fix missing dependencies (#5127)

* chore: include scripts directory in linting

and fix issues

* chore: add missing dependencies chalk and semver",27,42,1
"TanStack/query","2ff6041b0fad1c2b829d497801411659de74ac03","Garbanas","2020-08-23 14:12:02","true","feat(useQuery): enable the `throwOnError` option of `useQuery.refetch` (#907)

* feat(useQuery): allow useQuery.refetch to throw an error when the fetch fails

Enables the `throwOnError` configuration option for `useQuery.refetch` that has
as of yet only been present in the documentation but not in the code.

Relates to: #903 #843

* refactor(useQuery): move ""useQuery.refetch"" options to dedicated type",10,11,0
"TanStack/query","6fcfc9bfba0b56d580952c2c22e91ca45c45cd17","TkDodo","2023-07-29 08:36:20","true","feat: no retries on the server (#5802)

* feat: zero retries on the server

* test: no retry on the server

* docs: no retry on the server",24,46,1
"TanStack/query","a7780444bb0bdd0e7a768c6ebc57e04aea5f7c51","TkDodo","2021-06-26 19:42:28","true","fix(useQuery): don't inform observers about CancelledErrors (#2409)",27,21,0
"TanStack/query","4aed54eb880e937376b236d551b303d4e61ee502","CalebLovell","2021-02-11 13:02:07","true","docs: update useInfiniteQuery (#1746)",18,17,0
"TanStack/query","2b0fc956aa8dee842d7096ad701a5c08d5f175b4","TkDodo","2023-10-07 07:07:18","true","fix: fix release

RELEASE_ALL",11,49,1
"TanStack/query","ead2e5dd5237f3d004b66316b5f36af718286d2d","TkDodo","2021-01-17 20:43:28","true","fix(query): transition to error state when keepPreviousData is true (#1665)

closes #1659",22,16,0
"TanStack/query","13b17ee45de3299dd3d3a2dfc3d23ad2f024882a","TkDodo","2023-08-22 12:18:01","true","chore(eslint): set array-type lint rule to generic (#5899)

* chore(eslint): set array-type lint rule to generic

* chore: fix prettier",23,47,1
"TanStack/query","79632e3d2febb1f88447550ed1c46bc2c6df2bd4","DamianOsipiuk","2023-09-07 09:37:32","true","Merge remote-tracking branch 'origin/main' into beta",15,48,1
"TanStack/query","5f806e38bd19a920d76e5db49785e04d40e7773b","tannerlinsley","2020-02-17 04:46:56","false","Default data value is now undefined instead of null",15,5,0
"TanStack/query","53204fead507bf685a53436dadd107f1d3196268","tannerlinsley","2023-01-24 10:58:19","false","release: v4.23.0",33,40,1
"TanStack/query","73390a1dbace9988aa036b296b7e9cfa3dd8834b","tannerlinsley","2023-10-08 22:31:21","false","release: v4.36.2",9,49,1
"TanStack/query","c82a82869ae056a48172f08d1e82522451c133d1","tannerlinsley","2020-05-11 16:26:11","false","fix(suspense): reset query status when error is thrown in suspense

Fixes #468",12,8,0
"TanStack/query","73add4bc35d37f7c49920935dc2ae4654f899089","tannerlinsley","2021-01-05 23:43:56","false","docs: cleanup",21,16,0
"TanStack/query","c5c7fe39d4d55d9099ffbc83616a6bc993ae2e9f","tannerlinsley","2020-03-05 20:40:20","true","useQuery should use prefetched data for dependent query (#205)",1,6,0
"TanStack/query","15dceab3322301181cfccacd99d1c36d0f5d256d","incepter","2023-07-14 14:29:37","true","fix(core): Assign observer's current Result when optimistic read occurs (#5573)

* [Fix-5538]: Assign observer's current Result when an optimistic reading occurs

* move the condition outside so would make making decision about v4 and v5 easier & remove fake timers

* Flip test on currentResult with placeholderData's order & add test for placeholderData

* Fix tests using the same queryKey

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",34,46,1
"TanStack/query","bb3030ce2112c8c1d3f3e45003399a811e7f8344","ejirocodes","2022-10-03 16:13:33","true","docs: changed import path -> vue-query to @tanstack/vue-query (#4261)",17,37,1
"TanStack/query","9a68feda5947ba828adf4b96f33cd285af48df9b","MarceloAlves","2020-07-02 23:38:20","true","fix(types): add clear to QueryResultBase (#696)",3,10,0
"TanStack/query","6020706169aee8d2175bc944ea93a383286996c5","otaciliolacerda","2020-07-16 15:02:26","true","fix:(prefetchQuery): override default retry behaviour to false (#760)",10,10,0
"TanStack/query","35efec795a6d47a8a3ccf12784b7b06e0463add4","sazzer","2020-11-03 21:39:53","true","docs: Guide page for testing - (#1244)

* Guide page for testing - first draft

* Update docs/src/pages/docs/guides/testing.md

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",8,14,0
"TanStack/query","213a85fec559cc001b8678d272468b3dbcf44765","TkDodo","2022-08-18 19:42:33","true","chore: fix release script (#4053)

* chore: remove testing from ci-publish pipeline

because the cipublish script does it internally, so we have been doing twice the tests now

* chore: fix release script

any change in package should result in a package release - not just the `src` directory

* fix: publish script

the Package that's defined in config does not have dependencies / peerDependencies, so we need to iterate over the object we find package.json",22,35,1
"TanStack/query","6dc8d2ef092ef266262d9df06da9796e5481dc58","tannerlinsley","2023-06-25 14:22:00","false","release: v4.29.16",24,45,1
"TanStack/query","1c4e005eccc9f5f2f813a4717a76b18a5dc40062","Songkeys","2022-07-21 09:49:54","true","fix(react-query-devtool): correct the noop entry for cjs (#3893)

RELEASE_ALL",24,34,1
"TanStack/query","9b5d18cd47a4c1454d6c8dd0f38280641c1dd5dd","artemean","2022-02-12 19:15:33","true","fix(devtools): add code element's background (#3287)

Prevent code element's backround from being overwritten",20,29,0
"TanStack/query","a280d34bac0c9ce160becc11a04e383120ec1826","tannerlinsley","2020-05-12 01:12:38","true","chore: Test strange test output in CI",11,8,0
"TanStack/query","1158bd1ecbca390d673edf36a0b72b455a1501a2","tannerlinsley","2020-04-15 02:10:31","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,7,0
"TanStack/query","66c9d6419af3ada712a2ab45c89334c4dc5764a8","tannerlinsley","2020-03-18 18:35:08","false","v1.0.29",1,6,0
"TanStack/query","f76c8601a3c30ab279082a94ec1b51ed4920b52c","jackmellis","2020-05-17 00:48:55","true","fix: clear cache timeouts (#495)

* fix: clear cache timeouts

calling queryCache.clear() was empting the queries object but not tearing any of them down
this commit adds a clear method to the individual queries, which cancels timeouts and promises
queryCache.clear now loops through the queries and clears each one
I've also update the return type of queryCache.clear as it doesn't actually return anything

* fixup! fix: clear cache timeouts

Co-authored-by: Jack Ellis <jack.ellis@godaddy.com>",8,8,0
"TanStack/query","a2fc30a29b93c26cb782c4d4826f62de7012b78a","jhonlly","2022-10-03 12:46:51","true","docs: Changed vue-query into @tanstack/vue-query (#4259)",17,37,1
"TanStack/query","c932d00322c0a437569a408ddaa759b3e0608fad","gornyyvladimir","2021-05-07 15:51:26","true","docs(useQuery): change isFetching default to false (#2071)

* docs(useQuery): change isFetching default to false

* Update docs/src/pages/reference/useQuery.md

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",36,20,0
"TanStack/query","fe02f751ee82b49f9bcf54c98199e058545de96c","coryhouse","2020-05-26 13:32:51","true","docs: Grammer fixes (#518)",12,8,0
"TanStack/query","db2874250ee0544008f0d8633867721de341296c","tannerlinsley","2020-05-12 20:02:18","false","Update README.md",13,8,0
"TanStack/query","953463a15da9b05bc85d002cfb3beb2ded7f3b22","tannerlinsley","2019-11-11 17:15:59","false","v0.3.8",2,2,0
"TanStack/query","d0388a92dcf600c139d0164f5d1372a446ffd99c","tannerlinsley","2023-06-27 07:06:10","false","release: v4.29.18",23,45,1
"TanStack/query","7101bf3c0e78e4946e6274582984612e73d53f50","artem-malko","2023-01-05 13:34:35","true","fix(eslint-plugin-query): update eslint-exhaustive-deps rule description (#4760)",35,40,1
"TanStack/query","9537fe961c786604f09ca3ed8d24d93eeb7eedf3","TkDodo","2022-07-19 14:26:43","true","chore: speedup pr runs in ci (#3864)

only run compile, lint and prettier checks once; tests still run twice against react17",24,34,1
"TanStack/query","91db133daf395b6cbdefcc610e9c387bf0236d5b","TkDodo","2023-07-28 08:59:19","false","Merge remote-tracking branch 'origin/main' into beta",24,46,1
"TanStack/query","1dc5758518594c82f5399deeb30e393b27d0a91a","TkDodo","2023-10-10 06:39:53","true","feat: typed query key (#6119)

* feat: tag the queryKey returned from queryOptions so that it knows about types of the queryFn

* feat: overloads for getQueryData / setQueryData

to infer types from queryOptions

* test: type-tests for queryClient to avoid regressions

* refactor: rename

* refactor(types): simplify options

interestingly, this also solves other types issues we had 🤯

* test: more tests for queryOptions

* fix(types): fetchInfiniteQuery should work when getNextPageParam is passed even if pages isn't

* feat(types): infiniteQueryOptions

* test: this should work

* fix(types): fix typing for setQueryData when only a value is passed

by making sure TS doesn't infer types from there

also, move from overloads to conditional return types

* refactor: re-use Updater type

* chore: fix tests

* chore: do an actual assertion

* refactor: remove ValidateQueryOptions

as it's not used anymore

* docs: queryOptions",8,49,1
"TanStack/query","dbf452e99b30dd8e2c01d944877a47d404ecd04c","ZackDeRose","2023-04-01 08:50:07","true","chore: adding nx cloud access token to ci workflow files (#5213)",25,43,1
"TanStack/query","ac11bdca0ee7cf6b06c489cb2a9763f6667451d1","wolverineks","2020-06-28 20:27:01","true","style: prettier formatting (#647)

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",2,9,0
"TanStack/query","558878c90e90aed66e1cb402751bfe78fcdfa789","OmerCohenAviv","2022-04-22 07:47:55","true","feat: expose errorUpdateCount on useQuery (#3532)

* expose errorUpdateCount on useQuery

* refactored test slightly

* Update docs/src/pages/reference/useQuery.md

as  suggested

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* removed the first click as we fetch on default,

* prettier

* added errorUpdateCount to failed tests.

* prettier

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",20,31,0
"TanStack/query","390e47bd3eb9c449f48964744b713635563019fd","mjlyons","2023-06-27 13:02:31","true","fix(types): Add pageParam type to QueryFunction generic types (#5623)

Although QueryFunctionContext allows setting the pageParam type
through generics, QueryFunction uses QueryFunctionContext without
exposing this typing functionality. This forces any queryFn
typed as a QueryFunction to have an `any` pageParam. This change adds
TPageParam to QueryFunction type, which is passed through to
QueryFunctionContext.

This should be backward compatible and only affects typing (not runtime code).

Co-authored-by: Mike Lyons <mike@dropbox.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",23,45,1
"TanStack/query","b8fb0653e96cefd7b8348effa7f2447c5c30b358","alexyoung","2020-07-17 16:22:07","false","docs: Update overview.md (#771)

Some small grammatical fixes",9,10,0
"TanStack/query","1e13e8ef31a90064d0c2245fe389d44adc21dd3f","nelsonprsousa","2020-12-18 17:12:56","true","docs: typo on react-native doc page (#1481)",10,15,0
"TanStack/query","9d437c25752203ca8f3d3fda9a4e6d2b78830632","tannerlinsley","2023-04-21 11:26:19","false","release: v4.29.4",22,43,1
"TanStack/query","4a907932aeb6cf00013d4a7b4e8c6c732bb4f642","tannerlinsley","2023-08-20 06:45:25","false","release: v5.0.0-beta.18",22,47,1
"TanStack/query","ff20232cdc1345b2a60ea9a80e81e65930b1c8a4","tannerlinsley","2020-07-17 15:44:19","false","docs(examples): fix infinite scroll example to stop loading when it should

Closes #766",10,10,0
"TanStack/query","fe6f161009fce20bd1e63923acd7a65232e0b398","tannerlinsley","2020-05-18 21:35:50","true","Update README.md",7,8,0
"TanStack/query","d7faf86005052654451dd7d5b3665bf6c971b66e","TkDodo","2021-12-28 17:34:17","true","fix(queryObserver): memoized select functions should not return outdated values (#3140)

not all runs to createResult are saved on `this.currentResult` (optimistically created updates do not - we just create the result again later). With the fix from #3098, we made sure that memoized select does not run again in those cases by storing every run. However, that now means that we cannot rely on `prevResult.data` because it might still contain outdated data.

The solution is to store a pair of previous selectFn + data and return the exact data that was computed from the previous select fn if we get the exact same function passed",21,28,0
"TanStack/query","140515d44b0361af08a9aed7e27615d975a2c268","boschni","2020-08-04 02:52:17","true","fix: make sure all callbacks are called in suspense mode (#828)",4,11,0
"TanStack/query","7c227912a8e85eaf480dc6901f7a124951d442b9","boschni","2020-09-02 20:22:55","true","feat: add forceFetchOnMount flag (#954)",6,12,0
"TanStack/query","f14590b88b6b689c1437dddeacc681a2ea3c432e","tannerlinsley","2023-02-18 11:10:50","false","release: v4.24.9",31,41,1
"TanStack/query","07350ec5a443f39c289b215e0c4b1719ac8e577d","zorzysty","2020-07-10 12:38:43","true","docs: Update links to useQuery hook anchor (#729)

`useQuery` hook links in `usePaginatedQuery` and `useInfiniteQuery` are pointing to `#options` and such anchor doesn't even exist. This PR fixes that.",7,10,0
"TanStack/query","f2137dc4e4553256c4ebc1891b548fe35efe9231","pluma","2021-03-02 06:05:11","true","fix (types): Prefer ReadonlyArray for query keys (#1854)

* Prefer ReadonlyArray for 
Since keys are treated as readonly anway, this allows users to use `as const` without nasty surprises.

* Fix type error

* Prefer readonly X[] over ReadonlyArray<X>",23,18,0
"TanStack/query","2e9d2a9b37a4f8b1fe5888b3aa445f677792615f","lachlancollins","2023-01-09 14:59:48","true","docs(svelte-query): Add installation and examples (#4781)",35,40,1
"TanStack/query","faabbd5362d97afe8405b5e17ae4e94ea402475c","tannerlinsley","2022-11-01 11:32:23","false","release: v4.14.1",14,38,1
"TanStack/query","f6023ff0fb2acaa82d7877c4f8e8367bfc93e9a6","zorzysty","2022-10-28 09:53:40","true","test: stabilize some flaky tests (#4395)

* test: stabilize a flaky test for CancelledError

* test: stabilize a flaky test for batching re-renders",18,38,1
"TanStack/query","8bbb03c823d9eced97a774392265269bb60e9123","tannerlinsley","2022-10-14 06:23:52","false","release: v4.12.0",17,37,1
"TanStack/query","9f48dffaf506a4730162a7490f00394c0c39f7c6","tannerlinsley","2022-09-30 06:36:22","false","release: v4.8.0",15,37,1
"TanStack/query","dbfe8a00ef517c0ec73430bdefcd0e581976cf27","ardeora","2023-10-11 00:17:47","true","chore(solid-query): Add devtools to examples (#6132)",5,49,1
"TanStack/query","b756f563cbf77d8e235b911b253118299d0e7fc7","tannerlinsley","2021-01-06 20:28:55","false","docs: update comparison",21,16,0
"TanStack/query","b79f45806c506fdb31870ae9a44d5b88f87eaaa4","zorzysty","2022-11-20 14:55:14","true","test: stabilize some useQuery and useInfiniteQuery tests (#4526)

* test: stabilize the test for overriding the cursor in the fetchNextPage callback

* test: stabilize the test for error when a selector throws

* style: apply formatting

* test: stabilize the test for variables in a query function",16,38,1
"TanStack/query","365fdf3bb377b38be26f58d50aa35472850c34b4","zorzysty","2023-01-15 10:17:44","true","chore: fix duplicated example package name (#4823)",32,40,1
"TanStack/query","a320b4301078ea0bbf190e3f5c0e032f1c602e1b","agilan1","2023-10-30 13:44:51","true","chore: Update GitHub Actions workflows (#6203)

* chore: clean up github action workflows

* chore: remove ci-v3.yml

* fix: add rc branch back to branches list in ci.yml

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",4,50,1
"TanStack/query","8991d7c0193c91fb17a97998bdbcda4363943f35","TkDodo","2023-01-30 14:42:36","true","fix(core): make sure pausedMutations always execute in serial (#4902)

* fix: make sure pausedMutations always execute in serial

when resumePausedMutations is called multiple times, we are starting the second paused mutation even though the first one has not yet finished. This can happen when a focus event and an online event happen in short succession

* fix: always return the same Promise when resumePausedMutations is called",30,41,1
"TanStack/query","3bf51686855f49113852b05f5df79dfa7245bd47","TkDodo","2022-10-14 06:16:46","false","chore: do not collectCoverage during build

this should speed-up CI and make log output visible",17,37,1
"TanStack/query","bafb1518ace3a518177dc2fc53b5c6d9d4420bcb","TkDodo","2022-09-24 08:44:44","true","docs: solid adapter",17,36,1
"TanStack/query","e9d62f4e125a9773559e5ed82f32fec5bd48a15e","spiftire","2022-07-23 09:03:37","true","docs: Fix a typo and add install command (#3876)",23,34,1
"TanStack/query","71a550d33671cf44e2962715b1d637013f9c0019","tannerlinsley","2019-11-04 21:41:49","false","Update README.md",0,2,0
"TanStack/query","3a16867a12f30a9e8399b5fbb18670c5c3539bb9","TkDodo","2023-08-15 07:18:14","true","fix(types): initialData function that returns undefined should still discriminate after isSuccess check (#5869)",22,47,1
"TanStack/query","dcf6d7b5eb442317c3ed42feac5add9bcbb86f39","dhrjarun","2022-09-12 08:22:23","true","fix(devtools): not subscribing to queryCache if devtool is closed (#4146)

* fix(devtools): not subscribing to queryCache if devtool is closed

This will stop unnecessary rerender of devtools when they are closed.

* style(devtools): fix linting issue in devtools.tsx file",19,36,1
"TanStack/query","050237112a2f2c4cfc4f1cc70cbc763e2bbd783b","Mini-ghost","2023-08-01 19:20:40","true","perf(vue-query): avoid unnecessary deep watch  (#5764)",19,47,1
"TanStack/query","b3c7dbae48fda9ba57853aad0692a4ab178566ee","balazsmatepetro","2023-11-03 16:01:41","true","fix(codemod): improve the keep previous data codemod (#6283)

* chore(codemod): add named examples to the `keep-previous-data` codemod, because these were missing

* chore(codemod): remove the unnecessary `return` statement

* feat(codemod): cover the `setQueryDefaults` method usages on the `QueryClient` instance with the codemod

For further details see: https://github.com/TanStack/query/pull/6196#discussion_r1377371519

* chore(codemod): rename the `isKeepPreviousDataInUse` to `shouldAddKeepPreviousDataImport`

The new name describes better the purpose of this variable.

* feat(codemod): cover the `QueryClient` class instantiations with the codemod

For further details see: https://github.com/TanStack/query/pull/6196#discussion_r1377371519

* chore(codemod): fix `eslint` issues within the `keep-previous-data` codemod

* chore(codemod): fix the `prettier` issues within the `keep-previous-data` codemod README file

* chore(codemod): turn off the `sort-imports` ESLint rule in case of the codemods

Since the codemods might not respect the import order, it's easier to turn off the `sort-imports` ESLint rule.

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",8,50,1
"TanStack/query","7fe6e30bc1ab3f981582b190883893bd21a63f27","DamianOsipiuk","2021-04-12 09:35:12","true","refactor(devtools): remove redundant isStale utility (#2111)",25,19,0
"TanStack/query","e0ece4263c9c073a8b1921e3b605bfd63a6bc8ee","DamianOsipiuk","2023-10-20 23:02:11","true","fix(vue-query): fix type inference (#6210)",9,49,1
"TanStack/query","d4fa2b98cf1b6a1f8a2722f5983e71a199c80c85","Newbie012","2023-01-27 19:05:54","true","feat(eslint-plugin): prefer-object-syntax support useMutation and createMutation (#4893)

* support useMutation and createMutation

* fix tests

* format",34,41,1
"TanStack/query","bbdf720e3f4b2e1a8a6e924fa31369aca1440a85","tannerlinsley","2023-07-14 14:51:22","false","release: v4.29.23",30,46,1
"TanStack/query","c2dcfe75781e213cc22fd6662af7437e4f67e24d","tannerlinsley","2020-07-10 15:34:23","false","docs: fix slide up newsletter form",7,10,0
"TanStack/query","68d072a4c72e88340bd42d615698256731923f32","tannerlinsley","2019-11-14 17:00:42","false","Fix sandbox example",1,2,0
"TanStack/query","1c12533c3f855de9bfa2381295773296593f8b3d","tannerlinsley","2023-07-25 10:14:00","false","release: v5.0.0-beta.3",23,46,1
"TanStack/query","059f5220d8c2e74cc6c7c60ff82b3175adb5796b","tannerlinsley","2021-01-05 23:40:40","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",21,16,0
"TanStack/query","cdb801f22cd175bb3b04a7c8f84d2226b3dfdbc8","tannerlinsley","2021-03-26 21:43:23","false","docs: carbonads",30,18,0
"TanStack/query","dec9ed34da3ea23b9d109d860ac4e6048339c70c","tannerlinsley","2023-03-20 08:34:37","false","release: v4.28.0",22,42,1
"TanStack/query","da2953656ed8683f4ca3ba1c7ee3d3f17cbf5eff","tannerlinsley","2020-07-08 06:40:59","false","docs: embed videos",7,10,0
"TanStack/query","0a9edb99f98247e6a87dd608cf9b491a8d0ee586","tannerlinsley","2020-07-08 22:45:43","false","docs: rename comparisons to comparison",7,10,0
"TanStack/query","13917e59912234fcd2de255fa9017349caeb204c","tannerlinsley","2020-07-08 14:52:06","false","docs: update nav sizing",7,10,0
"TanStack/query","fe0ae802d8e7521ba6d55239e7daf03ec0dd20fa","tannerlinsley","2023-03-17 16:50:51","false","release: v4.27.1",22,42,1
"TanStack/query","943b3fc5d134ef2c7f5d54fcfc1075a9328a928a","tannerlinsley","2020-03-04 17:20:13","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,6,0
"TanStack/query","8dcbc9cffd9e4e327c041787040d23e6b8d8b78a","tannerlinsley","2019-09-19 05:28:28","false","Update README.md",1,0,0
"TanStack/query","389b4900d28a170ed287b6cda97eac218ccb44f0","tannerlinsley","2020-03-13 19:53:40","false","v1.0.27",3,6,0
"TanStack/query","e66a2850a7d4db5611f352fa5eae9897625f4ea5","AEmad01","2023-04-15 09:07:22","true","perf(useQueries): optimize excessive invocations of getQueries in useQueries (#5255)

Co-authored-by: aemad01 <ahmedeamd199824@gmail.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",22,43,1
"TanStack/query","a0299841ee57e832066d14751db9f043c9ce2035","Mini-ghost","2023-10-11 18:58:18","true","feat(vue-query): `enabled` accepts getter function (#6004)

* feat(vue-query): `useBaseQuery` accepts `enabled` as a getter function

* feat(vue-query): `useQueries` accepts `enabled` as a getter function

---------

Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",6,49,1
"TanStack/query","17661f6e37484cd3ebbf8452fa5ca27d1ec28504","danawoodman","2023-11-01 01:03:16","true","Simplify load method, fix syntax highlighting (#5844)

* Simplify load method, fix syntax highlighting

SvelteKit now automatically infers the type of an exported load method, so no need to manually define it.

Also, Github has an ongoing issue with the Svelte syntax highlighting so using `html` is a good fallback.

* Change back to using svelte for code blocks

---------

Co-authored-by: Lachlan Collins <1667261+lachlancollins@users.noreply.github.com>",2,50,1
"TanStack/query","a9ba13503ab200aaec756a898c73e8d9148da5ca","TkDodo","2023-01-30 07:54:18","false","chore: fix broken package.json",32,41,1
"TanStack/query","b7a07c2b6f3c5d0f72c5da17b5140bf9957471b7","NewFuture","2022-04-21 12:18:47","true","feat: add nonce for devtools style tag (#3506)",22,31,0
"TanStack/query","a9a7bc7c627dc28fa1ebce53ec01f8f1ce3224b0","DennisOluoch","2020-05-05 17:02:30","true","Fixed automatic call of onIntersect function in infite-scroll example (#449)",10,8,0
"TanStack/query","201bd516743155f671eab3706aa1948e3d87343a","tannerlinsley","2020-12-18 23:07:59","false","docs: update comparison title",10,15,0
"TanStack/query","cbac04f35f388788636e83c6a357c072d3c98cd0","tannerlinsley","2020-05-05 17:25:59","false","chore: Test Semantic Release!",10,8,0
"TanStack/query","f484d7e708d5ce091a0d932a551e39a0a64e0038","tannerlinsley","2023-11-05 11:04:58","false","release: v5.7.1",4,50,1
"TanStack/query","f7037d08cc0fda3b37ad90d0c8df05fb5e6da9dc","tannerlinsley","2020-07-08 15:54:24","false","docs: all examples now have devtools",7,10,0
"TanStack/query","953c8696a47d3ab92a43c1d39437a56d207e7c76","tannerlinsley","2020-07-28 16:03:42","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",11,10,0
"TanStack/query","2552c4bbf452d319bd0e4d9c111b761dfd175934","nicholasgriffintn","2023-04-30 11:12:03","true","docs(a11y): adding titles to the video iframes (#5346)

* fix: a11y - adding titles to the video iframes

* chore: removing quotes

* Update docs/react/videos.md

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",22,44,1
"TanStack/query","5a05c9a9a2a8da8b8d86a10d392ad52d88027409","timrbula","2019-12-09 19:05:21","false","Update README.md (#72)",3,3,0
"TanStack/query","0f44956575c679276ff6b97bfc2af48c8b513ca9","tannerlinsley","2020-07-08 15:13:56","false","docs: fix videos page & render-as-you-fetch phrasing,",7,10,0
"TanStack/query","fb9538c12b4cf895bdada0138ee168bf3b1d05dd","tannerlinsley","2020-02-28 21:03:44","false","Fix: Falsey query keys properly initialize to a success status and not a loading status

Closes #170",3,6,0
"TanStack/query","08dedf5220c45b3c9ce8dd20f4a61e37c785e7d8","lukemorales","2022-09-11 17:33:08","true","docs(community): add query key factory community contribution (#4126)",21,36,1
"TanStack/query","af838abb301d71d9eb60a3360c309d0391226dab","keichinger","2020-07-08 22:42:23","true","docs(examples): Import ReactQueryDevtools from correct package (#721)",7,10,0
"TanStack/query","d9478e000c002985311a1b82f31f202707c8214a","juliusmarminge","2022-09-28 18:53:23","true","chore(ci): filter out examples (#4239)

* filter out examples

* typo

* update docs and gitignore to account for pnpm switch",15,37,1
"TanStack/query","f9164ed1b406af0974bff4346f932f28cff069cf","tannerlinsley","2023-10-11 19:06:30","false","release: v5.0.0-rc.11",6,49,1
"TanStack/query","a53f6325e9761b1435b85cfbd337ea1a75584dde","noor-codes","2021-09-24 07:59:48","true","docs: Return Statement (#2713)",20,24,0
"TanStack/query","69f1eafca0804875f39a1ef1801013979b6c9bbd","JaeYeopHan","2021-08-11 20:52:57","true","fix(core): change `shouldFetchOptionally` condition (#2556)",25,23,0
"TanStack/query","8026f4badf590b8ac44b0cf2d9c006eff9c179f9","adebiyial","2021-05-04 20:38:23","true","docs:  (#2218)

* Fix typo in Mutations guide

* Update docs/src/pages/guides/mutations.md

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* Fix typo in Placeholder Query Data guide

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",36,20,0
"TanStack/query","e327e5b82c72fb9bdb0d64cfd384f3fbf25032e5","painedpineapple","2019-09-21 04:11:15","true","Fix typos",1,0,0
"TanStack/query","0a8745402e09c216aad4eec56c172dd2b941f8a8","tannerlinsley","2023-08-05 06:43:13","false","release: v5.0.0-beta.15",16,47,1
"TanStack/query","ce4de31c620774172a8ffd0a99a461ad1f4823cd","tannerlinsley","2023-02-27 11:10:13","false","release: v4.24.12",24,41,1
"TanStack/query","7c13e0fa51df3ddb77aad3d6911c73eaa8b66f4d","tannerlinsley","2019-11-19 22:37:21","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",5,2,0
"TanStack/query","e5ba8bb77ee5df8acf98768430c9a4d506c73b60","donysukardi","2021-06-28 11:18:39","true","fix: update matchQuery logic to cater for all permutations (#2275)",25,21,0
"TanStack/query","d5bf345d981a634a4f58cf6f61190354709882d3","minami-minami","2022-11-11 20:09:12","true","fix(react-query-devtools): unset padding for resetting after closed (#4477)

* fix(devtools): unset padding for resetting after closed

* fix(devtools): restore inline padding styles after closed

* fix(devtools): undo unnecessary style tag

* fix(devtools): add test",19,38,1
"TanStack/query","ac41f240173c3b33a5db6ef7a35645d9da71a3ff","brenelz","2023-10-24 04:25:11","true","feat(solid-query): Add useMutationState (#6230)

Adds `useMutationState` hook to `@tanstack/solid-query`. Will enable users to perform optimistic updates in a more intuitive fashion!",6,49,1
"TanStack/query","22f7253abac02452d5337a8739c72fcb82f94c7d","tannerlinsley","2022-10-22 23:20:26","false","release: v4.13.1",18,37,1
"TanStack/query","d5126828df75e71991cfef8e9b2d4eb99a5f3593","lachlancollins","2023-01-10 07:09:33","true","chore: Restructure package scripts (#4779)

* Use rimraf for clean script

Supported on windows

* Restructure jest tests, types test, and building types

* Relative eslint and jest paths are not needed

Now works on windows too, and tested to make sure it doesn't break linux

* Run codemod tests from main jest.config.ts

--collectCoverage false breaks when passed in to the union of these

* Remove unused test:lib scripts

* Add prettier-plugin-svelte

* Call test:types in github workflow

* Add missing build:types to query-async-storage-persister

* Simplify build script

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",37,40,1
"TanStack/query","c05bb9104c5d7fde04e54c15bfd12c041529a762","lachlancollins","2023-01-13 08:08:49","true","docs(svelte-query): Expand SSR docs (#4809)

* docs(svelte-query): Expand SSR docs

* Expand wording

* Run prettier",34,40,1
"TanStack/query","1615509973fc4850890f8da028c21b22ba28b829","TkDodo","2023-01-30 09:43:11","true","fix(core): make sure queries that never fetched can be garbage collected (#4898)

* fix(core): make sure queries that never fetched can ge garbage collected

This is important if data comes into the cache via a non-fetching method (like setQueryData or hydration) AND there is no active observer for them. Without this, they would never be gc'ed, but they should be after the default cacheTime

* tests: simplify svelte test",32,41,1
"TanStack/query","c1be9bfc75422924b76078aac202628d5197ab0c","erfanium","2021-05-09 11:26:24","true","docs: Fix example (#2254)",26,20,0
"TanStack/query","3a13b3e761a99a33c5a195c938e3d078a9430c63","arihantverma","2021-04-25 18:38:49","true","docs(Query Filters): Correct/Make More Exact: Query Filter Object Code Snippet Comments (#2190)

1. Make comment in the code snippet for `removeQueries` more exact
2. correct comment for `refetchQueries` used for `posts` query key, to use 'posts' instead of 'post'.",35,19,0
"TanStack/query","43a5bac737b3676cc224abc41847d31c4e0d0c5d","tannerlinsley","2022-11-26 16:38:30","false","release: v4.18.0",16,38,1
"TanStack/query","17898a6f22ab6357f3c32262b77d8e8e57b4140b","DamianOsipiuk","2022-09-11 17:58:46","true","fix(devtools): bring back auto-treeshakeable devtools (#4145)

RELEASE_ALL",19,36,1
"TanStack/query","57da15ed6ecfead7df980887fe013bde2640b230","jxbaker-sep","2022-08-11 18:03:11","true","docs: Updating testing docs for React 18. (#4023)",34,35,1
"TanStack/query","6458c506ca9e96283f8a021c17e4eaa4e5a8ef83","mikelunn","2021-01-05 22:51:42","true","fix(devtools): Added type attribute to all button elements (#1581)

Adding type attribute tells browser what type of button it is. For most browsers the default type of button is submit. This causes a full page post back in older legacy server rendered frameworks like asp.net webfo",21,16,0
"TanStack/query","ac329ec99a40a699621d8d57f33a456bc5791768","tannerlinsley","2019-12-09 20:34:29","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",3,3,0
"TanStack/query","0b31e1bcc27266666e13654363403eb3638741cc","gamtiq","2019-12-06 15:28:08","false","Fix several typos in README (#65)",4,3,0
"TanStack/query","8c890b708967f97c7f9ecc5b8a4bd0f5af45bb1c","benmonro","2020-03-01 20:34:27","true","chore: add tests.yml build action to run tests on PR / master. (#177)

* Create test.yml

* Update test.yml

* added jest config

* fixed typo

* covg threshold

* consolidating package.json

* frozen lockfile

* rename tests for badge",1,6,0
"TanStack/query","f0ce8336cbaeaa8d87d94cddacc02f0b63eeac81","thebergamo","2021-01-07 07:59:05","true","docs: fix misleading code example (#1566)",22,16,0
"TanStack/query","638d12d413edb9ae3d2cf37d8b1abc44cad9a0dd","tannerlinsley","2020-03-04 21:07:01","false","Update rollup.config.js",2,6,0
"TanStack/query","9b0244cc6bff0bedc6ad72651335762d4a1bcb43","tannerlinsley","2023-09-18 07:12:54","false","release: v5.0.0-beta.32",13,48,1
"TanStack/query","9259866750bceb24de4f02d83e0be2ce59e25957","tannerlinsley","2023-08-01 02:37:31","false","release: v5.0.0-beta.10",19,47,1
"TanStack/query","f0338ae0031abc207f006aa9b0811e3771ae82f5","tannerlinsley","2020-07-08 05:50:11","false","docs: fix updates-from-mutation-responses",7,10,0
"TanStack/query","10f3d7b8aba8f095d9b9a73f777cb94f49f911da","mhmdAljefri","2021-09-22 19:21:51","true","docs: Update persistQueryClient link (#2700)",19,24,0
"TanStack/query","24413b72825c99e1e5bda075db4766dbc2b31be5","tannerlinsley","2020-12-23 23:16:45","false","fix(devtools): guard against window in useMediaQuery

Fixes #1515",11,15,0
"TanStack/query","5d0546426ca90775ea38314e0110537afdddeaaa","boschni","2020-09-18 19:00:33","true","feat: add QueryCache.watchQuery (#1058)",14,12,0
"TanStack/query","ca335dec7b898592bea49734c4d121d1fd125cdf","TkDodo","2021-12-10 12:47:00","true","fix(useInfiniteQuery): fix infinite re-renders when select produced a new result (#3081)

* fix(useInfiniteQuery): fix infinite re-renders when select produced a new result

by correctly forwarding notifyOptions

* fix(useInfiniteQuery): fix suspense test

asserting the length of 3 seems wrong here and was likely only necessary because we triggered one too many re-renders before this fix :)",23,27,0
"TanStack/query","1f441b1427db13ff8b6f736bb24ec003d5376945","TkDodo","2022-11-08 11:07:27","true","docs: immutability",19,38,1
"TanStack/query","da8c29ebf5dc582e66f35498560bba23ec7934e3","tannerlinsley","2020-02-26 20:35:07","false","Update setFocusHandler.js

Fixes #155",1,5,0
"TanStack/query","b75000e4cadea9fa210a3cc7f3640b7a3a623c6f","tannerlinsley","2021-01-05 19:48:30","false","docs: do not adblock sponsors",20,16,0
"TanStack/query","7597c1fbfa8fb743dceee8ae335560c5208b5755","justincy","2020-07-02 23:38:03","true","New MutationResultPair type (#663)",3,10,0
"TanStack/query","4261a65fe748d1216cd88ba1e95ef49c83d2315c","jackmellis","2020-06-04 12:54:47","true","fix(types): default TError type (#547)

after adding the TError generic throughout the codebase, there are now several places where typescript gets cross. QueryOptions<string> for example used to work fine, but now demands that you provide an error type. In other places it's defaulted to Error.
It seems like a logical solution to just add this default everywhere. This means we're being consistent as well as not causing a breaking change.

Co-authored-by: Jack Ellis <jack.ellis@godaddy.com>",18,9,0
"TanStack/query","959e19e193ddb90eeb4d1835d44149248b62e992","boschni","2020-09-14 22:40:35","true","feat: add always option to refetch options (#1011)",9,12,0
"TanStack/query","260ec62983377e82b4d9f0b441764f4f793f68d7","boschni","2020-12-16 11:00:26","true","fix: always render the latest observer state (#1449)",14,15,0
"TanStack/query","1f05a3bc9d22ab2494059bc58cadf8162f5057fc","CreativeTechGuy","2021-02-11 08:46:51","true","docs(useQuery): add retryOnMount option (#1777)

* docs(useQuery): add retryOnMount option

* docs(useQuery): add missing comma",17,17,0
"TanStack/query","7f21366e42954815aebc9ad794c009d04d19c2d8","tannerlinsley","2019-11-04 21:34:22","false","Update README.md",0,2,0
"TanStack/query","da79651c76f94db8a288386ca2aa70349593248c","Mini-ghost","2023-09-27 12:56:40","true","fix(vue-query): avoid use sync watchers that cause frequent requests (#6043)

* fix(vue-query): avoid use sync watchers that cause frequent requests

* fix: remove unnecessary import

---------

Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",9,49,1
"TanStack/query","f231f8ca6f384d1b4350b616b0d2fb565e2c07bb","maddhruv","2022-09-09 10:57:46","true","docs: fix comment in comparison doc (#4137)",22,36,1
"TanStack/query","837c6fd313cb26d1495758ee8265a7d839fa6b6c","TimoVink","2020-12-14 20:52:24","true","docs: fix example in defaultQueryFn guide page (#1416)",8,15,0
"TanStack/query","52042e95d2b23cc43a566b427d2f34d5019a4a01","tannerlinsley","2020-05-11 16:59:10","false","feat(queryCache): add queryCache.cancelQueries method",11,8,0
"TanStack/query","0c465fb1451e376fdd798dbe5473247656198d0f","tannerlinsley","2020-03-26 05:46:50","false","Fix: fetchMore does nothing if canFetchMore is falsy",0,6,0
"TanStack/query","9f3b2e99dfcb1c8e13260fa2e677e3b160d32695","tannerlinsley","2020-02-17 06:58:20","false","Update README.md",1,5,0
"TanStack/query","cbe295ae03f1146ae5eab60f593423ff33ed586d","donavon","2019-11-09 17:06:28","false","A few typos + function cleanup (#26)

* remove extra comma in readme

* typo in comment

* remove unnecessary sort function

Array#sort defaults to sort alphabetically

* simplify utility functions",2,2,0
"TanStack/query","07ce2a5732d144a830346cc9f0affe3bc6c29458","fmauquie","2021-04-24 07:43:04","true","fix: focus handler typings (#2152)

Typings did not allow passing a function taking `setFocused` to addEventListener

Fixing by using the same typings as in `onlineManager.ts`, same behavior as set in #2053",37,19,0
"TanStack/query","b793659dd07a9b37888db4efbdac9fbd995aa957","tannerlinsley","2020-02-26 19:54:15","false","No size tracking",1,5,0
"TanStack/query","7c4501b076db841c0c02a015f0c4b70bb799a22b","tannerlinsley","2020-12-23 22:34:05","false","fix(devtools): Better panel resizing, scrollbars and styles",10,15,0
"TanStack/query","b75fa039dd1d4de85b91bea753eea3df0a0d05a3","tannerlinsley","2019-11-06 13:53:29","true","Update README.md",1,2,0
"TanStack/query","1248954916f37680e9859e7dcba234904450af40","tannerlinsley","2023-09-13 07:57:14","false","release: v5.0.0-beta.26",19,48,1
"TanStack/query","cae78030ac8f002d5f7704fc9a9045ed3777a9b4","tannerlinsley","2020-03-04 19:34:48","false","Update package.json",2,6,0
"TanStack/query","47449b73c6519d92b5ec563e8431971cea7978c9","ProjectFlinn","2023-11-04 06:38:33","true","docs: Update eslint-plugin-query.md (#6306)

TK Mentioned that the docs would be easier to change if the recommended config was above the alternative config.",8,50,1
"TanStack/query","520f421831f06cd6242044ee9a1646eef73487dd","LeshaTat","2023-09-17 14:43:08","true","docs(useInfiniteQuery): add warning about fetchNextPage disrupting default refetch behaviour (#6024)",12,48,1
"TanStack/query","f6aaa857489b8def572512214a04504fa580c8eb","Wipster","2021-02-11 13:50:33","true","docs: fixes fetch example which throws error (#1742)",18,17,0
"TanStack/query","bdeb1da7c79600dee2009f73a95f3050c66dd663","TkDodo","2023-08-04 13:44:29","false","Merge branch 'main' into beta

# Conflicts:
#	.github/workflows/ci.yml
#	.github/workflows/pr.yml
#	packages/eslint-plugin-query/package.json
#	packages/query-async-storage-persister/package.json
#	packages/query-broadcast-client-experimental/package.json
#	packages/query-core/package.json
#	packages/query-persist-client-core/package.json
#	packages/query-sync-storage-persister/package.json
#	packages/react-query-devtools/package.json
#	packages/react-query-persist-client/package.json
#	packages/react-query/package.json
#	packages/solid-query/package.json
#	packages/svelte-query/package.json
#	packages/vue-query/package.json
#	packages/vue-query/src/__tests__/useMutation.test.ts
#	packages/vue-query/src/__tests__/useQuery.test.ts
#	packages/vue-query/src/useBaseQuery.ts
#	packages/vue-query/src/useIsFetching.ts
#	packages/vue-query/src/useIsMutating.ts
#	packages/vue-query/src/useMutation.ts
#	packages/vue-query/src/useQueries.ts
#	packages/vue-query/src/utils.ts
#	scripts/publish.js
#	scripts/validate-packages.ts

RELEASE_ALL",16,47,1
"TanStack/query","1614c31f84744c62b5bee8f2ff97fc15a1652e86","TkDodo","2022-11-01 10:57:53","true","fix(core): initialData should take precedence over keepPreviousData (#4422)

previousData is data that we want to show from a previous observer if we don't have any good data in the cache already. InitialData is always considered good data, just as if it were data that has been fetched. It might be potentially stale, but that's something that can be controlled via staleTime and initialDataUpdatedAt.

So that means we shouldn't show previousData if we also have initialData",15,38,1
"TanStack/query","ff798fc26ab41530ff818901aa829f7d868b5826","TkDodo","2023-07-29 08:47:15","true","fix(types): useQuery types (#5803)

* fix: add extra overload for the part that's handled by the implementation

* refactor: remove generics from overload implementation

so that we can easily see that this is the implementation that doesn't contribute to the types interface at all

* feat: export types",24,46,1
"TanStack/query","ec4ef9b7533c3bf0f7560fc5c811da337a0972c4","naghtigal","2022-04-11 19:17:57","true","docs: add a link to the v4 beta doc (#3496)

add a link in README.md pointing to the v4 beta doc

Co-authored-by: artem.golubenko <FbKA8CnEB8hrs5mt>",18,31,0
"TanStack/query","67723337f3a0ea632ad823e9ba55562c01af2ee9","josephmarkus","2023-01-13 12:06:21","true","docs: Update devtools.md with note that mutations are not tracked (#4810)

This can save others some time browsing around trying to get it to work",33,40,1
"TanStack/query","41742cd0b0153b21cdbdc381fcee8585420b1585","TkDodo","2022-08-16 08:05:27","false","chore(query-broadcast-client-experimental): fix build

main pointed to a non-existing file",21,35,1
"TanStack/query","9bf81197b7aea670d74461914ca777993a8394b1","donysukardi","2019-11-05 15:00:43","false","Fix incorrect react-query version in example (#11)",0,2,0
"TanStack/query","33f7e0a4be6cf7424f8223fb6d81ccb992d1963b","tannerlinsley","2019-11-04 05:52:13","false","v0.0.15",0,2,0
"TanStack/query","ce1305c27e7ac7988656d171d882a665a286cc6a","tannerlinsley","2023-10-24 20:06:35","false","release: v5.3.0",5,49,1
"TanStack/query","9b8b5f0a81bc68552bbafbc3991e7e89a893ecbe","tannerlinsley","2023-08-04 07:47:59","false","release: v4.32.5",17,47,1
"TanStack/query","70c7b004794db35e73bef35a309a2e21aa733ff4","tannerlinsley","2020-04-16 15:17:56","false","Fix issue where isLoading === true when falsey query key supplied

Fixes #360",3,7,0
"TanStack/query","46ae973fcfc2f883b3885edb78bf6d0f966865ff","tannerlinsley","2020-02-17 05:12:38","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",14,5,0
"TanStack/query","e8834aaff81da47b93899543ff478f539237d87a","cherniavskii","2020-02-26 19:19:34","true","Use doctoc to generate ToC in readme (#152)

* use doctoc to generate ToC in readme

* limit toc level",1,5,0
"TanStack/query","f3b2fe05b693628729f7791538bc0226acd80b2b","boschni","2020-08-31 16:18:45","true","feat: determine staleness locally instead of globally (#933)",11,12,0
"TanStack/query","460ab339c7b8fb3396f63067e6c2d1d249041f8c","boschni","2020-09-13 22:17:42","true","fix: make sure initial data always uses initial stale (#1010)",10,12,0
"TanStack/query","fa42ae98ab560360a591815f28beb5da59202cc7","franleplant","2020-06-28 03:33:12","true","fix(setQueryData). When there is no previous instance of the query it tries to create a new one but the type signature was incorrect (#644)",2,9,0
"TanStack/query","d9cf5dcfae9971ccf076e1cf4f5cd0c579283739","tannerlinsley","2020-02-27 16:13:06","false","Fix: All try/catch block return promises are now awaited",1,5,0
"TanStack/query","b44a33c01d03a0a41da76d61423ba295f6f4bd07","tannerlinsley","2020-07-15 19:51:02","false","fix: make query info object stable",9,10,0
"TanStack/query","478fb1e58266c7ea80d65936b06e5be891486395","tannerlinsley","2020-07-09 04:22:49","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",7,10,0
"TanStack/query","69236d3e0bce712376767a86eac9246b304f6be6","tannerlinsley","2020-10-29 19:40:25","false","docs: update videos",14,14,0
"TanStack/query","1aa6051b164617f7a1c02c1e1ec8eaf71a809b6f","tannerlinsley","2020-03-06 17:36:47","false","Fix paginated and infinite queries now work in suspense mode",1,6,0
"TanStack/query","fd4938ec65df3b988d914b761dae339bab9d8c10","Newbie012","2022-11-04 14:35:46","true","fix(eslint-plugin-query): get identifiers from unary, chain, and ts-non-null expressions (#4448)

* fix unary expression

* fix chain expression

* fix ts non null expression

* format

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",16,38,1
"TanStack/query","af086e05f3e506f5142503e0e4e217d4a4d5e9b4","Newbie012","2023-04-02 08:04:43","true","fix(eslint-plugin): ignore nodes outside of scope (#5217)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",24,43,1
"TanStack/query","7730feeb9b1c9d4bbb6c6937664615b6745f8087","Ephem","2020-09-06 20:45:33","true","fix(hydration): overwrite the existing data in the cache if hydrated data is newer (#976)",8,12,0
"TanStack/query","c45a2ea285ac02f03fef2043553e67c77f55eb8c","binayachaudari","2022-07-22 11:42:39","true","docs: fix codesandbox link of overview example code (#3897)",24,34,1
"TanStack/query","6678d84c0701579d4ea3d002ec8eeb38e0fe99ed","boschni","2020-09-06 18:03:12","true","refactor: cleanup to reduce file size and add tests (#969)",9,12,0
"TanStack/query","77f434c10af803d3d871ea138eefb20a91b3e360","boschni","2020-12-22 17:58:50","true","feat: add error callback for queries and mutations (#1504)",10,15,0
"TanStack/query","92435c77b8b62351724375ae3d10ab01154e0034","TkDodo","2021-04-24 07:43:37","true","fix(types): add mutationFn to UseMutationOptions (#2182)",37,19,0
"TanStack/query","1858966fb9fffeb44f0cc98e6eec59e839177b08","Mini-ghost","2023-08-23 07:40:53","true","feat(vue-query): support invoke in vue `runWithContext()` (#5703)

* feat: support invoke in vue `runWithContext()`

* chore: run prettier

* feat(vue-qury): add a second parameter to inject to avoid vue warning

* test: update test

* fix: add warning about potential memory leak

---------

Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",24,47,1
"TanStack/query","d77d9d852ab129e19854d703f94319a127f57172","alan910127","2023-11-04 08:29:48","true","feat(eslint-plugin): add no-rest-destructuring rule (#6265) (#6302)

* feat(eslint-plugin): add no-rest-destructuring rule (#6265)

* chore: format test case code

* test: add null array element testcase

* test: add non-tanstack-query hooks testcase

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",8,50,1
"TanStack/query","3545717b95ea4de9837930221c399f40ec3c94cb","UXnomaan","2020-08-13 21:57:09","true","fix: readme header image (#863)",9,11,0
"TanStack/query","c566c3c19402535904cc2348d2f1634fdb60bd9f","TkDodo","2022-09-28 18:57:03","false","chore(ci): add quotes",15,37,1
"TanStack/query","2e03a615f84dc297bb00004ae0f7cfe99dd5fef0","TkDodo","2021-04-28 22:16:51","true","fix(types): allow returning of any promise in the mutation callbacks (#2189)",35,19,0
"TanStack/query","251fb6fe960bfb6f8c9f0986ec7d52468ce0ffdf","tannerlinsley","2023-07-28 13:03:19","false","release: v5.0.0-beta.5",24,46,1
"TanStack/query","ff5595b98f918205b536863fae791dec1143f462","tannerlinsley","2020-05-01 17:50:15","false","v1.3.0",6,8,0
"TanStack/query","90fb8a471c1798fbacb173385690492e0c525dd6","tannerlinsley","2020-08-24 16:22:50","false","fix: force release of refactor (for bundle size)",11,11,0
"TanStack/query","712e06a2705c9cc2a956d48f69af10f3f6915536","tannerlinsley","2022-07-20 15:03:15","false","release: v4.0.6",23,34,1
"TanStack/query","fbdeb176004650e91b3af53c2aef995f13ef946c","tannerlinsley","2023-10-20 23:05:29","false","release: v5.0.4",9,49,1
"TanStack/query","7868c9ea70845046db0730d196402ee6f9682748","tannerlinsley","2020-05-12 20:04:15","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",13,8,0
"TanStack/query","5d99f7e92ec790362c225c0c601c2743dfd06683","dwilt","2022-07-15 15:39:03","true","fix(core): added in timer and interval id checks before clearing (#3762)",26,34,1
"TanStack/query","52bddb67f1d41047e80f291f9253bbc4c7c3eda6","TkDodo","2021-03-08 17:03:49","true","fix: disable context sharing per default (#1912)",27,18,0
"TanStack/query","357ec041a6fcc4a550f3df02c12ecc7bcdefbc05","TkDodo","2022-07-18 18:08:12","true","v4 release (#3842)

* v4 alpha (#3060)

* feat(hydration): remove hydration package (#2936)

* V4: streamline cancel refetch (#2937)

* feat: streamline cancelRefetch

the following functions now default to true for cancelRefetch:

- refetchQueries (+invalidateQueries, + resetQueries)
- query.refetch
- fetchNextPage (unchanged)
- fetchPreviousPage (unchanged)

* feat: streamline cancelRefetch

make sure that refetchOnReconnect and refetchOnWindowFocus do not cancel already running requests

* feat: streamline cancelRefetch

update tests

refetch and invalidate now both cancel previous queries, which is intended, so we get more calls to the queryFn in these cases

* feat: streamline cancelRefetch

add more tests for cancelRefetch behavior

* feat: streamline cancelRefetch

update docs and migration guide

* feat: streamline cancelRefetch

simplify conditions by moving the ?? true default down to fetch on observer level; all 3 callers (fetchNextPage, fetchPreviousPage and refetch) just pass their options down and adhere to this default; refetch also only has 3 callers:
- refetch from useQuery, where we want the default
- onOnline and onFocus, where we now explicitly pass false to keep the previous behavior

and add more tests

* feat: streamline cancelRefetch

we always call this.fetch() with options, so we can just as well make the mandatory

also, streamline signatures by destructing values that can't be forwarded (and use empty object as default value) in options and just spread the rest

* feat: streamline cancelRefetch

fix types for refetch

it was accidentally made too wide and allowed all refetchFilters, like `predicate`; but with `refetch` on an obserserver, there is nothing to filter for, except the page, so that is what we need to accept via `RefetchPageFilters`

* feat: streamline cancelRefetch

refetch never took a queryKey as param - it is always bound to the observer

* feat: better query filters (#2938)

* fix: rename react directory to reactjs (#2884)

* fix: rename react directory to reactjs

the directory being named ""react"" causes an error with the moduleDirectories option from jest

* fix: update package.json files to match the updated reactjs directory name

* fix: change react test utils imports to match new directory name

* docs(v4): add renamed reactjs details to migration guide

Co-authored-by: Eddy Vinck <eddy.vinck@isaac.nl>

* feat: mutation cache duration (#2963)

* feat: mutation cachetime

stramline queryCache / mutationCache events by combining them into notifiable.ts

* feat: mutation cachetime

removable

* feat: mutation cachetime

add gc to mutations

* feat: mutation cachetime

streamline event types between queries and mutations

* feat: mutation cachetime

tests, and I forgot to implement optionalRemove, so make it abstract

* feat: mutation cachetime

replicate gc behavior from https://github.com/tannerlinsley/react-query/pull/2950 and add more tests

* feat: mutation cachetime

get test coverage back to 100%

* feat: mutation cachetime

docs

* feat: mutation cachetime

try to make tests more resilient

* feat: mutation cachetime

fix imports after merge conflict

* refactor(persistQueryClient): Make persistQueryClient stable (#2961)

* :truck: Remove experimental from persist-query-client

* :truck: Rename persistor -> persister

* ✏️  Fix Persistor -> Persister in imports

* :truck: Update name in rollup config

* :truck: Move createAsyncStoragePersister and createWebStoragePersister to stable version and rename persistor -> persister

* 📝  Update documentation

* 📝   Add migrating to v4 docs

* Apply suggestions from code review

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* 2964 changes to on success callback (#2969)

* feat(useQuery): onSuccess callback

do not call onSuccess if update was done manually from setQueryData

* feat(useQuery): onSuccess callback

test that onSuccess is not called when setQueryData is used

* feat(useQuery): onSuccess callback

docs changes

* feat(useQuery): onSuccess callback

options spread is wrong - `updatedAt` is actually `dataUpdatedAt`. Oddly we didn't have a test, so I added one

* 2919 query key array (#2988)

* feat: query key array

remove code that internally ensures that we get an Array, because it is now the expected interface, ensured by TypeScript

* feat: query key array

update tests to the new syntax

* feat: query key array

fix assertions, because there is no array wrapping happening internally anymore. The key you receive from the context is exactly the key you passed in

* feat: query key array

this test doesn't make much sense anymore

* feat: query key array

 wrapping in an extra array doesn't yield the same results anymore since v4 because keys need to be an array

* feat: query key array

make docs adhere to new array key syntax

* feat: query key array

migration docs

* feat(QueryObserver): track queries as default (#2987)

* feat(Query Options): remove notifyOnChangePropsExclusion

- remove related code from queryObserver
- remove type def
- remove related tests

* docs(Query Options): update notifyOnChangePropsExclusion sections

- remove from api references
- add to v4 migration guide

* feat(QueryObserver): ""tracked"" as default behavior

- remove ""tracked"" completely if notifyOnChangeProps is not defined, behave as v3 ""tracked""
- add `notifyOnChangeProps: 'all' to opt out of the smart tracking

TODO: Now that default behavior has changed, work out the failed tests. Which parts to change for current ones and possibly write new ones.

* test(useQuery): adjust tests to pass for notifyOnChangeProps udpate

* test(useInfiniteQuery): adjust tests to pass for notifyOnChangeProps udpate

* test(QueryResetErrorBoundary): adjust tests to pass for notifyOnChangeProps udpate

* refactor(QueryObserver): use nullish coalescing operator

much cleaner than the negated if I started with

* test(QueryResetErrorBoundary): remove ""tracked"" from test

* revert: test(QueryResetErrorBoundary): adjust tests to pass for notifyOnChaneProps udpate

This reverts commit a34b4720675dad5ee6ebde401639f328c0c83122.

The changes are not necessary after PR #2993 fix.

* refactor(QueryObserver): combine prop checks

* docs(notifyOnChangeProps): update docs to reflect new api

* refactor: Remove deprecated promise cancel (#2996)

* :fire: Remove the cancel method on promise for cancelling promise

* ✅  Fix query client tests

* ✅   Update query and useQuery tests

* ✅   Update use infinite query tests

* 📝   Update migartion guide

* :bug: Fix linking in documentation

* :pencil: Fix grammatical errors in docs

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* :refactor: Use abortSignal for query cancellation in InfiniteQueryBehavior

* 🚨  Fix lint errors

* :recycle: Move define signal property to a separate function

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* remove test that doesn't make sense anymore - we don't allow different falsy query keys now

* 2927 offline queries (#3006)

* feat(useQuery): offline queries

remove defaultQueryObserverOptions because it is the same as defaultQueryOptions and we can just use that

* feat(useQuery): offline queries

setup dependent default values, to make it easier to work with them

* feat(useQuery): offline queries

basic changes to retryer:
- pause the query before fetching depending upon networkMode
- pause retries depending upon networkRetry

* feat(useQuery): offline queries

move networkRetry and networkMode defaults to the retryer creation, because we need the same for mutations

* feat(useQuery): offline queries

decouple focus and online manager: we're now informing caches of a focus when we're focussed, and about an online event if we come online; if the retryer continues, it can then decide to not fetch depending on our networkMode

* feat(useQuery): offline queries

expose isPaused on the queryResult and make sure isFetching is false when we are paused

* feat(useQuery): offline queries

knowing if we can fetch depends on if we are paused or not, as other conditions should apply

also, rename options (not sure if that will stick though)

* feat(useQuery): offline queries

adjust existing tests for isPaused being exposed

* feat(useQuery): offline queries

fix existing test by setting options to emulate the previous behaviour, otherwise, with `mockNavigatorOnline` being set to false right from the start, the mutation would never fire off

* feat(useQuery): offline queries

adapt onOnline, onFocus tests to new behavior: they are now decoupled, and onOnline is always called even when not focused and vice versa. The retryer should make sure to not continue fetching if necessary

* feat(useQuery): offline queries

first test for networkMode

* feat(useQuery): offline queries

isFetching and isPaused are now derived and stored together in a fetchingState enum (idle, fetching, paused)

* feat(useQuery): offline queries

better networkMode api: online, always, offlineFirst (basically always but with paused retries)

* feat(useQuery): offline queries

more tests for networkMode: online

* feat(useQuery): offline queries

more tests for networkMode: online

* feat(useQuery): offline queries

tests for networkMode: always

* feat(useQuery): offline queries

fix tests that were influencing each other by using proper jest mocks for online and visibility state

* add paused queries to the devtools.tsx

* feat(useQuery): offline queries

never stop pausing when continueFn is called. Initially, I only had this guard for when it's called from the outside, e.g. for onWindowFocus while still being offline, but we need this always because otherwise query cancellation can potentially continue a paused query

* feat(useQuery): offline queries

okay, pausing multiple times was a bad idea, continueFn() will be called eventually anyways

* feat(useQuery): offline queries

attempt at offline toggle button

* feat(useQuery): offline queries

different icons, padding, color

* feat(useQuery): offline queries

i messed up the icon order

* feat(useQuery): offline queries

guard against illegal state transitions: paused queries can unmount or get cancelled, in which case we shouldn't continue them, even if we dispatch the continue event

* feat(useQuery): offline queries

fix devtools tests, account for paused queries

* Revert ""feat(useQuery): offline queries""

This reverts commit a647f64a051ca4c02a872e7871b4b2ce49aeda2c.

* feat(useQuery): offline queries

keep the do-not-start logic out of the run function, and thus out of promiseOrValue. if the promise has already been resolved in the meantime, e.g. because of a `cancel`, the run method will just do nothing, while the previous logic would've started to fetch

* feat(useQuery): offline queries

show inactive as higher priority than paused

* feat(useQuery): offline queries

make sure that optimistic results don't show an intermediate fetching state, but go opmistically to paused instead

* feat(useQuery): offline queries

real result needs to match optimistic result

* feat(useQuery): offline queries

stupid mistake

* feat(useQuery): offline queries

keep status color and status label in sync

* feat(useQuery): offline queries

make networkMode param mandatory for canFetch (and default to online internally) so that we can't screw that up again

* feat(useQuery): offline queries

make sure test ""finishes"" to avoid prints to the console if another test goes online again

* feat(useQuery): offline queries

move cancel function to the top, as it's no longer dependent on the promise since the `.cancel` function is gone; all we need is to abort the signal and reject the promise of the retryer

* feat(useQuery): offline queries

inline canContinue, because it's now only called if the query is in paused state anyways

* feat(useQuery): offline queries

avoid the impossible state by not calling config.onContinue for already resolved queries, as that would put them right into fetching state again, without actually fetching

* feat(useQuery): offline queries

let resolved querie continue, but don't put them in fetching state

* feat(useQuery): offline queries

fix merge conflict and invert condition because no-negated-condition

* feat(useQuery): offline queries

add test for abort signal consumed - different results expected for node < 15 where we don't have AbortController, thus can't consume the signal

* feat(useQuery): offline queries

online queries should not fetch if paused and we go online when cancelled and no refetchOnReconnect

* feat(useQuery): offline queries

gc test

* feat(useQuery): offline queries

offlineFirst test

* feat(useQuery): offline queries

mock useMediaQuery to get rid of unnecessary check in devtools - if window is defined, `matchMedia` is also defined

* feat(useQuery): offline queries

use a higher retryDelay to make test more stable, otherwise, it might start retrying before we ""go offline""

* feat(useQuery): offline queries

improve devtools test: check if onClick props are being called

* feat(useQuery): offline queries

add devtools test for offline mock

* feat(useQuery): offline queries

offline mutations test

* feat(useQuery): offline queries

network mode docs (unfinished)

* feat(useQuery): offline queries

network mode docs

* feat(useQuery): offline queries

fix merge conflicts

* refactor(queryClient): remove undocumented methods

* fix: offline mutations fixes (#3051)

* feat: offline mutations

move reducer into Mutation class to avoid passing state (and options) around

* feat: offline mutations

optimistically set paused state depending on if we can fetch or not to avoid an intermediate state where we are loading but not paused

* examples: fix query keys in basic examples

because we need those for preview builds

* fix(useMutation): make sure cacheCallbacks are always called

even if the useMutation component unmounts and we have a cacheTime of 0; the fix was cherry-picked from the react-18 branch, where we also introduced this behavior

* Feature/cachetime zero (#3054)

* refactor: cacheTime-zero

remove special handling for cacheTime: 0 and schedule a normal garbage collection for those queries. They will be eligible for gc after a setTimeout(0), but then they will only be optionally removed. This makes sure that paused queries are NOT gc'ed

* refactor: cacheTime-zero

remove special test ""about online queries with cacheTime:0 should not fetch if paused and then unmounted"". paused queries will now be kept until they continue, just like with every other query, unless query cancellation or abort signal was involved

* refactor: cacheTime-zero

adapt ""remounting"" test: if the same query with cacheTime 0 unmounts and remounts in the same cycle, the query will now be picked up and will not go to loading state again. I think this is okay

* refactor: cacheTime-zero

re-add instant query removal after fetching, because fetching via `queryClient.fetchQuery` will not remove the query otherwise, because the normal gc-mechanism now checks for `hadObservers` due to a suspense issue :/

* refactor: cacheTime-zero

weird edge case: the previous logic was instantly removing the query _while_ it was still fetching, which is something we likely don't want. The data will stay in the currentQuery of the observer if the observer unsubscribes but still exists, and a new subscription will pick it up, unless the query was explicitly cancelled or the abort signal was consumed.

* refactor: cacheTime-zero

we need to wait a tick because even cacheTime 0 now waits at least a setTimeout(0) to be eligible for gc

* refactor: cacheTime-zero

schedule a new garbage collection after each new fetch; this won't do anything  when you still have observers, but it fixes an edge case where prefetching took longer than the cacheTime, in which case the query was again never removed

test needed adaption because we don't instantly remove, but deferred by a tick

* refactor: cacheTime-zero

stabilize test

* refactor: cacheTime-zero

apply a different suspense ""workaround"": do not garbage collect when fetching optimistically (done only by suspense) - gc will kick in once an observer subscribes; this will make sure we can still gc other fetches that don't have an observer consistently, like prefetching when the fetch takes longer than the gc time (which was leaking with the old workaround)

* refactor: cacheTime-zero

remove leftover

* refactor: cacheTime-zero

since every fetch triggers a new gc cycle, we don't need to do this in a loop anymore
also, reset isFetchingOptimistic after every fetch

* add publishing capabilities for alpha branch

* fix(queryFilters): fetchStatus to queryFilters (#3061)

Co-authored-by: Eddy <eddyvinck95@gmail.com>
Co-authored-by: Eddy Vinck <eddy.vinck@isaac.nl>
Co-authored-by: Prateek Surana <prateeksurana3255@gmail.com>
Co-authored-by: Rene Dellefont <renedellefont@gmail.com>

BREAKING CHANGE: new query filters, query key must be an array

* refactor(core): refactor internals from classes to a functions (#3066)

* refactor(core): refactor retryer from a class to a function

* refactor(core): refactor notifyManager from a class to a function

* refactor(core): refactor notifyManager from a class to a function

remove outdated comment

* feat(useQueries): v4 api to take an object as input (#3071)

* feat(useQueries): update API to use object syntax

New v4 API - instead of taking an array of queries, `useQueries` now accepts an object with a `queries` key. The value of this key is an array of queries (this array is unchanged from v3).

* test(useQueries): update tests for new API

* docs(useQueries): update docs for v4 API

* refactor(tests): adapt useInfiniteQuery test

copied over from the react-18 branch, because that impl is less flaky

* refactor(tests): adapt useInfiniteQuery test

another one copied over from the react-18 branch, because that impl is less flaky

* refactor: use a set for tracked props (#3085)

* refactor: make listeners required

because the only place where we pass no listener in is in tests

* refactor: make notifyOnChangeProps a Set

* chore: update tooling (#3086)

* chore: update caniuselite

* chore: remove const-enum babel plugin

because we don't use const-enums anymore

* chore: require ts 4.1

* chore: update rollup and plugins

* chore: update typescript and ts-eslint

* refactor: remove notifiable base class

this abstraction costs more than the simple duplication, and we also have other notify functions which were not unified

* fix(queryObserver): defer tracking of error prop when useErrorBoundary is on (#3087)

adding ""error"" to the list of tracked properties will result in us _only_ tracking error if we want to track all properties implicitly by _not_ observing any properties (because we check for trackedProps.size). Moving the adding of ""error"" to _after_ the size check fixes this

* docs: Update migrating-to-react-query-4.md (#3096)

* refactor: remove logging in prod mode (#3103)

to not log to the console per default; to access process.ENV, we need to enable node typings, which screws with setTimeout / setInterval, as typings are different for node and the browser; I tried to keep the changes to type-level only

* refactor: remove cancel method as it no longer exists (#3142)

* refactor: remove cancel method as it no longer exists

it wasn't doing anything in that test

* refactor: remove cancel method as it no longer exists

use signal in playground example instead of cancel fn

* refactor: remove unused query.setDefaultOptions

* feat(persistQueryClient): improve persist controls (#3141)

* feat(persistQueryClient): improve persist controls

add restore/save/subscribe

* docs: update persistQueryClient and hydration

* docs: describe new persist features

* docs(persistQueryClient): correct option defaults

* feat(persistQueryClient): enable unsubscribe

* docs(persistQueryClient): clarify restoration

* docs(persistQueryClient): enable unsubscribe note

* fix(persistQueryClient): subscribe awaits restore

* docs: clarify caching behavior (#3221)

The example contains at least one inacurate statement,

> It will then cache the data using `'todos'` and `fetchTodos` as the unique identifiers for that cache.

and could benefit from more precise language.

* fix(core): do not refetch disabled queries (#3223)

* fix(core): do not refetch disabled queries

with refetchQueries or invalidateQueries + refetchType ""inactive""

disabled queries (=queries that have observers which are all enabled:false) are matched as ""inactive""; this is okay when searching for them via findAll or for removeQueries, but the docs clearly state that refetchQueries / invalidateQueries do not refetch disabled queries, and that the only way to refetch them is via refetch returned from useQuery; this is important when using enabled to signal that some dependencies are not yet ready

some tests needed to be adapted because we used disabled observer + refetchQueries a lot. The easiest way to emulate the observers we wanted here was mostly with initialData + staleTime, and to get a real inactive query, we just need to subscribe + unsubscribe immediately

* fix(core): do not refetch disabled queries

add tests for refetchQueries + disabled

* fix(core): do not refetch disabled queries

update test to make more sense - title said disabled queries, but we had no disabled query; test now does the opposite of what it did before, but that's what this PR does :)

* refactor(mutation): remove mutation.cancel (#3225)

as it wasn't really aborting the request - there is no AbortSignal for Mutations atm.

* refactor(queryClient): add dev warning with queryDefaults (#3249)

* refactor(QueryClient): add dev warning

Warn when several query defaults match a given key.
Could be error prone if the returned defaults are not the expected ones.
The order of registration does matter.

* test(QueryClient): warning with defaults options

Highlight how query defaults registration order matters.

* doc(QueryClient): add notes about query defaults

In `getQueryDefaults`, the **first** matching default is returned.
In `setQueryDefaults`, highlight how the registration order is important.

* doc(QueryClient): fix link to documentation

* test(QueryClient): better test

* refactor(QueryClient): use internal logger

* doc(QueryClient): fix markup

* doc(QueryClient): remove extra entry

* refacto(QueryClient): warn about several query defaults

Warning must be displayed any time a conflict is detected, not just for dev build.
The warning is aimed at helping developers *using* react-query, not those *developping* react-query.

* Update src/core/queryClient.ts

Remove useless optional chaining.

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* feat(utils): add assert helper

* refactor(QueryClient): add dev warning for mutation defaults

* Revert ""feat(utils): add assert helper""

This reverts commit 05c3fe19cd3277bd99740564c2e771412b7cf109.

* refactor(QueryClient): error when several defaults

Review how the check for multiple defaults  on a key is raised.
Ensure it remains fast in release build.

* refactor(QueryClient): inline code

Co-authored-by: Guillaume Labat <guillaume.labat+git@imagino.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* chore: fix silent merge conflicts

* feat: Bail out if query data undefined (#3271)

* Bail out if query data undefined

* Fix failing test

* docs: migration guide for undefined data

* docs: update setQueryData reference

* Update docs/src/pages/guides/migrating-to-react-query-4.md

Co-authored-by: Louis Law <louiscklaw@users.noreply.github.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* chore: add a test to ensure that callback on .mutate are only called for the last observer

* docs: Document compression use case for `createWebStoragePersister` (#3285)

Add an example on how to `compress`/`decompress` data from local storage in case you need to cache large payloads.

Context: https://github.com/tannerlinsley/react-query/pull/2864#issuecomment-1034604428

* refactor: inline / remove some functions for size improvements (#3289)

* refactor: size

inline reducers in query and mutation because they are only used from dispatch

* refactor: remove default case in reducers

actions are only produced by our own code, which is in TypeScript, so we'll get a type error if there is an action not handled. Unknown actions can't exist, as the tests show: we'd need a ts-expects-error to go this way

* refactor: inline executeMutation

because it's only used once

* refactor: inline getObserver and updateObservers in useQueries

because it's only used once

* refactor: extract getDefaultState

getDefaultState is a pure function, with no access to `this`, so we can extract it. This is in-line with what `mutation` is doing

* refactor: remove getNextResult

it was only used in tests, and it's also not documented

* refactor: inline clearTimers

because it's only used once

* refactor: inline shouldNotifyListeners

because it's only used once

* refactor: inline resumePausedMutations

* refactor: tests

every stubbed queryFn needs a mock implementation to avoid console errors:

Error: Query data cannot be undefined

* refactor: do not log undefined query data warning to the console

* feat: Version 4 codemods (#3195)

* chore: add `jscodeshift` library to dev-dependencies

We're planning to deliver codemods for the next release, so we will
need this package to write codemods.

* chore: add `@types/jscodeshift` library to dev-dependencies

* chore: add an empty `jest` config file under the `codemods` directory

For some reason the `moduleNameMapper` causes an error when running the
codemod tests, it results in a `transformer is a not function` type
error. In order to avoid this now, I add an empty config file and will
investigate the root cause of the issue later.

* chore: add a very basic codemod implementation and tests

The current codemod is able to change the usages of `useQuery`
according to the new API, so it will put the existing parameters into
an object and pass it as the only parameter, but that's all. More
changes coming soon.

* chore: fix `prettier` errors in `use_query` codemod

* chore: add missing `export` keywords to test suites in case of `use_query` codemod

I just want to avoid `eslint` errors in the IDE.

* feat(codemod): add basic codemods for query client methods

* feat(codemod): add basic `useQueries` codemods

* refactor(codemod): rework `useQuery` related codemods

* feat(codemod): move files under `v4` directory

We decided to move the version 4 related codemods under a separate
directory.

* chore(codemod): move `jscodeshift` library from `dependencies` to `devDependencies`

Accidentally I added this package under `dependencies` but it should be
placed under `devDependencies`.

* chore(codemod): pick up codemods test by `npm test`

From now the `npm test` command will execute the codemod tests as well.

* refactor(codemod): remove `without-parameter` test case in case of `queryClient` related codemods

This test case is not useful at all, it just adds extra code.

* chore(codemod): remove duplications from `queryClient` codemod testfixtures

The number of duplications was just simply too much. It doesn't make
any sense to maintain repetitive boilerplate code.

* chore(codemod): rename `first-parameter-is-identifier` and `object-expression-parameter` test case

* chore(codemod): rework `first-parameter-is-identifier` and `object-expression-parameter` test suites

In these two test cases, we should try to collect as many test cases
as possible.

* chore(codemod): remove duplications from `useQuery` codemod testfixtures

The number of duplications was just simply too much. It doesn't make
any sense to maintain repetitive boilerplate code.

* chore(codemod): add missing methods to the object syntax aware query client codemods

The following methods were missing:
- fetchInfiniteQuery
- fetchQuery
- prefetchInfiniteQuery
- prefetchQuery

* chore(codemod): add some more test cases to the `parameter-is-object` test suite

* feat(codemod): add basic `useMutation` codemods

* refactor(codemod): rename `queryKey` replacer and error, because now the key name can be parameterized

* feat(codemod): add support for template literals

* refactor(codemod): rename `object-syntax-aware` test to `query-client-methods`

I want to combine two tests into a single one.

* refactor(codemod): move testfixtures to the root level of `__testfixtures__` directory

* refactor(codemod): combine the two `queryClient` codemods and test suites into a single one

* refactor(codemod): move `useMutation` related parts and testfixutes to `useQuery` codemod

The plan is to combine all existing codemods into a single one.

* refactor(codemod): remove the whole `use_mutation` library

Regarding the necessary parts that were moved to the `useQuery`
codemod, we don't need the leftover code anymore.

* feat(codemod): add support for the following hook calls:

- `useIsFetching`
- `useIsMutating`

* refactor(codemod): move `useQueries` related parts and testfixutes to `useQuery` codemod

The plan is to combine all existing codemods into a single one.

* refactor(codemod): remove the whole `use_queries` library

Regarding the necessary parts that were moved to the `useQuery`
codemod, we don't need the leftover code anymore.

* refactor(codemod): introduce `transformUseQueryLikeUsages` function

Maybe this change will make the code read easier a bit.

* refactor(codemod): do some refinements on the following tests:

- `parameter-is-identifier`
- `parameter-is-object-expression`

* fix(codemod): in the case of JS, the string literal might be interpreted as `Literal`

So without the additional `Literal` check, the codemod wouldn't be
applied.

* fix(codemod): remove `type` filter from import declarations

This filter seems to be too strict because the codemods were not
applied to the `examples` directory.

* refactor(codemod): move `QueryClient` related parts and testfixutes to `useQuery` codemod

The plan is to combine all existing codemods into a single one.

* refactor(codemod): remove the whole `query_client_methods` library

Regarding the necessary parts that were moved to the `useQuery`
codemod, we don't need the leftover code anymore.

* refactor(codemod): simplify entry point of the codemod

It makes the code a bit slower, but on the other hand, it makes the
code easier to read and understand.

* feat(codemod): add basic `QueryCache` codemods

* fix(codemod): do not transform array expression query keys

We want arrays as query keys, so when the current query key is an
array, we don't need to transform it.

* fix(examples/playground): fix invalid usage of `invalidateQueries`

* feat(codemod): show file path in console warnings

* refactor(codemod): remove `use_query` directory

We decided to group the codemods by major version numbers instead of
types. The reason is simple: we will bundle all necessary
transformations into a single file, so the consumers will have to
apply only one codemod. Hopefully, it will make the DX better.

* refactor(codemod): rename `use-query` to `key-transformation`

The original `use-query` name is not valid anymore, because the
codemod changes the signature of other function/method calls as well.

* refactor(codemod): replace the transformer name in `key-transformation` codemod

I renamed the transformer with the test, so the transformer name also
needs to be updated in the test file.

* chore(codemod): add codemod and utilities to the bundle

We want the code mod to be part of the bundle. If it's part of the
bundle, the consumers can directly access it through the `node_modules`
directory and run it. We just simply would like to increase the DX.

* refactor(codemod): rename function

I shouldn't have committed this. :')

* fix(codemod): keep `typeArguments` of the node

It will prevent the removal of type annotations on a function/method
call.

* refactor(codemod): move `query-cache` test cases to `default-import`

We want to cover the default, named, and namespaced imports in the
case of `QueryCache` as well.

* feat(codemod): add support for named imports in case of `QueryCache` and `useQueryCache`

The codemod must be able to transform usages in the case of named
imports as well.

* fix(codemod): always return `Identifier` instance in case of `findImportIdentifier` of function

Previously it returned a string as a default value and it could lead
to errors in the code.

* feat(codemod): add support for namespaced imports in case of `QueryCache` and `useQueryCache`

The codemod must be able to transform usages in the case of namespaced
imports as well.

* refactor(codemod): re-use the previously written utility functions in the hook call transformer

By this, we can achieve the same functionality with less code
repetition.

* refactor(codemod): re-use the previously written utility functions in the query-client transformer

By this, we can achieve the same functionality with less code
repetition.

* refactor(codemod): rename `hook-call-transformer` to `use-query-like` transformer

I think this name describes better the purpose of this transformer.

* chore(codemod): add todo about the `react-query` import check

We shouldn't transform files that don't contain `react-query` imports.

* refactor(codemod): make the `use-query-like-transformer` to look the same as other transformers

I just want to follow the structure of other transformers.

* fix(codemod): do not log warnings in the test environment

Warning the user about the unprocessable query keys is useful in
production, but in the test environment, it just makes it more
difficult to read the output.

* docs(codemod): add instructions how to apply codemods

* chore(examples): apply codemod on the `examples` directory

* docs(codemod): update `Codemod` section

The suggested text sounds better. :)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* feat: remove idle state (#3302)

* feat: remove idle state

in favor of status: loading & fetchStatus: idle

* feat: remove idle state

remove isIdle boolean

* feat: remove idle state

documentation around the removed idle state and the new fetchingStatus

* feat: remove idle state

add missing ' to docs

* feat(*): add optional logger prop to QueryClient config (#3246)

- remove setLogger
- add optional `logger` prop to QueryClientConfig
- add getLogger public method to QueryClient
- add optional `logger` prop to QueryConfig and MutationConfig
- add getDefaultLogger function which returns a default logger based on
environment, which is used by everything that takes an optional logger
in their config
- add createQueryClient test util function that uses a mock logger
- replace all `new QueryClient` calls with createQueryClient calls
- remove mockConsoleError and usages from tests, which are not necessary anymore

BREAKING CHANGE: remove setLogger

* refactor: turn off error logging in tests

the global `clearMocks: true` should make sure that this gets reset after every test

* docs(examples): fix optimistic-updates-typescript example

* chore(bundling): bundle for modern browsers (#3342)

* chore(bundling): update babel dependencies

* chore(bundling): remove babel-plugin-transform-async-to-promises

we don't use async functions, and we also want to target envs that support async functions

* chore(bundling): update supported browsers

for a more modern output

* chore(bundling): tweak browserslist

and exclude transform-parameters plugin, which comes in because of any safari version, even though it should not be needed according to caniuse. This plugin transforms ES2015 parameters to ES5, this includes: Destructuring parameters, Default parameters and Rest parameters, all of which are supported by Safari

* chore(bundling): update terser

* chore(bundling): fix tests

ReferenceError: Cannot access 'promiseResolve' before initialization

* chore(bundling): docs about supported browsers

* chore(bundling): small docs fixes

* chore: eslint no-unnecessary-condition (#3344)

* chore(eslint): turn on no-unnecessary-condition rule

* chore(eslint): turn on no-unnecessary-condition rule

remove unnecessary optional chainings in tests

* chore(eslint): keep the matchMedia check

even though it can never be undefined, except in tests, and I couldn't figure out how to mock that properly

* chore(eslint): remove unnecessary checks in devtools

* chore(eslint): addEventListener should exist on window

if window is defined, which is checked by isServer

* chore(eslint): assign default object to options

instead of re-assigning it. In any case, the optional chaining is unnecessary

* chore(eslint): action.type should always be defined

* chore(eslint): keep the fallback for console

* chore(eslint): one rule always complains

so up-casting false to boolean

* chore(eslint): if we have a behaviour, we also have na onFetch

* chore(eslint): parseFilters always returns an object

as it falls back to an empty object internally, so the falsy check didn't do anything

* chore(eslint): upcast previous result to be potentially undefined

to make the optinal chains necessary

* fix issues after updating to alpha

* fix(mutations): avoid infinite loading states if callbacks return an error (#3343)

* fix(mutations): avoid infinite loading states if callbacks return an error

add failing test cases

* fix(mutations): avoid infinite loading states if callbacks return an error

by making sure we always dispatch the error to go to error state internally;
re-writing to async-await because it has better support than promise.finally, and the flow is also easier to reason about here

* fix(mutations): fix merge conflicts

* fix(react-native): bring back check for window.addEventListener (#3345)

because it does not exist in RN, but window is defined

* refactor(queryObserver): get rid of double-defaulting of options in getOptimisticResult

every call to getOptimisticResult already contains defaulted options, which we can enforce on type level by only accepting DefaultedQueryObserverOptions

* fix(createAsyncStoragePersister): persistClient respects throttleTime (#3331) (#3336)

* docs: update persistQueryClient.md with Persister docs (#3356)

* docs: add idb example

* docs: consolidate sections
storing ~> persistQueryClientSave
restoring ~> persistQueryClientRestore

* docs: create section for persisters

* docs: focus cacheTime docs
persistQueryClient and createWebStoragePersister are unrelated

* docs: add tip for indexed db

* docs: cleanup intro

* docs: note additional interfaces available

* docs: reorder api to be more intuitive

* docs: improve wording

* docs: add Offline React Query post (#3320)

* docs: multi-line code snippet for layout on mobile

* fix(mutations): allow passing a function to useErrorBoundary (#3390)

* docs: idle state is removed

* feat: Support the ability to provide a context (#2548)

* Support providing a context

* Addressing comments and merge conflicts from rebase

* feat(persistQueryClient): PersistQueryClientProvider (#3248)

* feat(persistQueryClient): PersistQueryClientProvider

* feat(persistQueryClient): PersistQueryClientProvider

defer subscription if we are hydrating

* feat(persistQueryClient): PersistQueryClientProvider

make sure we do not subscribe if the component unmounts before restoring has finished

* feat(persistQueryClient): PersistQueryClientProvider

make unsubscribe a const so that we don't mutate what we've exposed

* feat(persistQueryClient): PersistQueryClientProvider

make hydrating queries go in fetchStatus: 'idle' instead of paused

because paused means we have started fetching and are pausing, and we will also continue, while with hydration, we haven't started fetching, and we also might not start if we get ""fresh"" data from hydration

* feat(persistQueryClient): PersistQueryClientProvider

don't export IsHydratingProvider, as it shouldn't be needed by consumers

* feat(persistQueryClient): PersistQueryClientProvider

provide onSuccess and onError callbacks to PersistQueryClientProvider so that you can react to the persisting having finished, to e.g. have a point where you can resumePausedMutations

* feat(persistQueryClient): PersistQueryClientProvider

tests for onSuccess callback, and remove onError callback, because the persister itself catches errors and removes the store

* feat(persistQueryClient): PersistQueryClientProvider

test for useQueries

* feat(persistQueryClient): PersistQueryClientProvider

docs

* make restore in mockPersister a bit slower to stabilize tests

* better persistQueryClient docs

* feat(PersistQueryClientProvider): make sure we can hydrate into multiple clients

and error handling

* offline example

* extract to custom hook

* remove onError callback

because errors are caught internally by persistQueryClient and the persisted client is then removed

* just ignore stale hydrations if the client changes

* Revert ""just ignore stale hydrations if the client changes""

This reverts commit 91e2afb7ba5b08dc86a188d7b9b21d07a8e3c440.

* just ignore stale hydrations if the client changes

this makes sure we only call onSuccess once, for the ""latest"" client

* since QueryClientProviderProps is now a union type, we can't extend it from an interface

* feat(cacheTime): default cacheTime to Infinity for SSR (#3377)

* feat(cacheTime): default cacheTime to Infinity for SSR

Cache persists for the lifecycle of request and can be immediately GCed afterward

Helps close Node process immediately after use

* docs: Add default server-side cacheTime to migration docs

* docs(examples): fix offline example (#3463)

* docs(examples): remove non-existing / unused imports

* docs(examples): add missing msw dependency

and fix some more things

* fix(persistQueryClient): subscribe to both QueryCache and MutationCache

* feat: add support for react 18

* feat(react): react-18

update react dependencies and add use-sync-external-store polyfill

* feat(core): react-18

use a version of uSES that actually has an implementation other than ""Not Yet Implemented""

* feat(core): react-18

looks like we also need the experimental version of react, because v18-alpha doesn't support uSES yet.

* feat(core): react-18

update testing-library to v13 alpha

* feat(core): react-18

do not update currentResult when it is equal to the previousResult, because we use the currentResult as snapshot for uSES, so it must be as stable as possible

* feat(core): react-18

switch forceUpdate with uSES.

- I'm not sure if the `updateResult` effect is still necessary, or if it's guaranteed that we can't miss any updates because we don't subscribe in an effect anymore; tests behave the same with / without it - tbd
- subscribe must be stable, or else we wind up in an infinite loop. in order to be able to pass `observer.subscribe`, we must bind the function in the constructor

* feat(core): react-18

make the first test a bit more stable - we don't want more than 2 results

* feat(core): react-18

fix type issues in devtools tests, so we adhere to the new typings of testing-library v13

* feat(core): react-18

make devtools test more resilient: act throws an error in the latest version if used liked that, but we don't need it. We can just click the button and use waitFor, as documented here: https://testing-library.com/docs/guide-disappearance#2-using-waitfor

* feat(core): react-18

don't re-assign result

* feat(core): react-18

bring back the optimistic result; this is debatable because it means we actually _ignore_ whe result returned by uSES, but it makes for fewer re-renders as we can go back to silently update from the effect

* feat(core): react-18

useIsFetching to uSES

I don't fully understand the test that needed adaption, but the new numbers actually look more correct. The first thing that happens is showing the SecondQuery (after 50ms), and at that time, the FirstQuery is already fetching, so why should there be two zeros in the result array ...

judging from the console mock assertion, we are testing if state hasn't been updated on an unmounted component, which now can't happen anymore with uSES, so we can remove it

* feat(core): react-18

useIsMutatating to uSES

As a positive side-effect, there seem to be fewer re-renders now - the new numbers in the tests do make sense

* feat(core): react-18

useMutation to uSES

one big change is moving `setOptions` into a useEffect - similar to what `useQuery` is doing. However, we have no `getOptimisticResult` in useMutation, so we'll have to see how this behaves

the tests need some love - it's generally working, but the way the tests are written, we're getting some failure.

* feat(core): react-18

wait for heading to to to value `3` before asserting the onSuccess / onSettled calls

* feat(core): react-18

rewrite test to getByRole

* feat(core): react-18

since we're not returning anything from onError or onSettled in the tests, the mutation updates the data on the screen before the callbacks have finished running, which is why the test needs to waitFor the callbacks to have been called

* feat(core): react-18

work around console error from uSES by moving the console mock to the client part and / or increasing the assertion count for now

* feat(core): react-18

there seems to be one less rendering, likely because of batching, getting rid of one render that has the same assertions as the previous state, which is nice

* feat(core): react-18

update shim

* feat(core): react-18

update to v18 alpha, which should had the native uSES impl

* feat(core): react-18

bump uSES

* feat(core): react-18

count renders correctly by incrementing the count in useEffect

* feat(core): react-18

bump everything and import from /shim

* feat(core): react-18

make test more resilient by not using fireEvent

* feat(core): react-18

use findByText for more resilient tests

* feat(core): react-18

test against react 17 and react 18

* feat(core): react-18

only run bundlewatch once

* feat(core): react-18

give a better name

* feat(core): react-18

useQueries to uSES

* feat(core): react-18

really upgrade react (with exact versions, because alphas)

* feat(core): react-18

remove version logging

* feat(core): react-18

remove fixed version in test:ci script

* feat(core): react-18

try to get rid of warning in suspense test

* feat(core): react-18

remove wrongful mock assertion - uSES should not console.error anymore

* feat(core): react-18

add missing server-side snapshots

* feat(core): react-18

fix build, error is:

[!] Error: 'useSyncExternalStore' is not exported by node_modules/use-sync-external-store/shim/index.js, imported by src/react/useIsFetching.ts
https://rollupjs.org/guide/en/#error-name-is-not-exported-by-module

* feat(hydration): remove hydration package (#2936)

* V4: streamline cancel refetch (#2937)

* feat: streamline cancelRefetch

the following functions now default to true for cancelRefetch:

- refetchQueries (+invalidateQueries, + resetQueries)
- query.refetch
- fetchNextPage (unchanged)
- fetchPreviousPage (unchanged)

* feat: streamline cancelRefetch

make sure that refetchOnReconnect and refetchOnWindowFocus do not cancel already running requests

* feat: streamline cancelRefetch

update tests

refetch and invalidate now both cancel previous queries, which is intended, so we get more calls to the queryFn in these cases

* feat: streamline cancelRefetch

add more tests for cancelRefetch behavior

* feat: streamline cancelRefetch

update docs and migration guide

* feat: streamline cancelRefetch

simplify conditions by moving the ?? true default down to fetch on observer level; all 3 callers (fetchNextPage, fetchPreviousPage and refetch) just pass their options down and adhere to this default; refetch also only has 3 callers:
- refetch from useQuery, where we want the default
- onOnline and onFocus, where we now explicitly pass false to keep the previous behavior

and add more tests

* feat: streamline cancelRefetch

we always call this.fetch() with options, so we can just as well make the mandatory

also, streamline signatures by destructing values that can't be forwarded (and use empty object as default value) in options and just spread the rest

* feat: streamline cancelRefetch

fix types for refetch

it was accidentally made too wide and allowed all refetchFilters, like `predicate`; but with `refetch` on an obserserver, there is nothing to filter for, except the page, so that is what we need to accept via `RefetchPageFilters`

* feat: streamline cancelRefetch

refetch never took a queryKey as param - it is always bound to the observer

* feat: better query filters (#2938)

* feat(core): react-18

bump dependencies to beta

* feat(core): react-18

fix assertions about special react markup

* feat(core): react-18

try to make ssr hydration tests work, but skip them for now

* feat(core): react-18

bring back batching. for this to work, we need to batch the actual calls to `onStoreChange` received from uSES, and scheduleMicroTask also needs to defer one tick with setTimeout (couldn't find a better way)

* feat(core): react-18

reduce timeout to make test less flaky

* feat(core): react-18

fix useIsMutating tests: The same value can't really appear twice in the array because re-renders are batched; this seems like a nice improvement due to uSES

* feat(core): react-18

make tests slower; it seems that batching together with a sleep(0) actually batches fast responses together, so we now go directly from idle to success

* fix: rename react directory to reactjs (#2884)

* fix: rename react directory to reactjs

the directory being named ""react"" causes an error with the moduleDirectories option from jest

* fix: update package.json files to match the updated reactjs directory name

* fix: change react test utils imports to match new directory name

* docs(v4): add renamed reactjs details to migration guide

Co-authored-by: Eddy Vinck <eddy.vinck@isaac.nl>

* feat: mutation cache duration (#2963)

* feat: mutation cachetime

stramline queryCache / mutationCache events by combining them into notifiable.ts

* feat: mutation cachetime

removable

* feat: mutation cachetime

add gc to mutations

* feat: mutation cachetime

streamline event types between queries and mutations

* feat: mutation cachetime

tests, and I forgot to implement optionalRemove, so make it abstract

* feat: mutation cachetime

replicate gc behavior from https://github.com/tannerlinsley/react-query/pull/2950 and add more tests

* feat: mutation cachetime

get test coverage back to 100%

* feat: mutation cachetime

docs

* feat: mutation cachetime

try to make tests more resilient

* feat: mutation cachetime

fix imports after merge conflict

* feat(core): react-18

make ssr tests work in react 18: the updated fetch count is actually correct, as we always fetch once on the server, then sometimes another time on the client. see also this discussion: https://github.com/TkDodo/react-query/pull/2/files#r751305071

* feat(core): react-18

try to make tests work in 17 and 18
because of the different batching, we sometimes get different results, which we can avoid by making the tests really async and do some data fetching that takes at least some time, and write the tests more resilient

* feat(core): react-18

resilient tests

* refactor(persistQueryClient): Make persistQueryClient stable (#2961)

* :truck: Remove experimental from persist-query-client

* :truck: Rename persistor -> persister

* ✏️  Fix Persistor -> Persister in imports

* :truck: Update name in rollup config

* :truck: Move createAsyncStoragePersister and createWebStoragePersister to stable version and rename persistor -> persister

* 📝  Update documentation

* 📝   Add migrating to v4 docs

* Apply suggestions from code review

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* feat(core): react-18

continue to stabilize tests

* 2964 changes to on success callback (#2969)

* feat(useQuery): onSuccess callback

do not call onSuccess if update was done manually from setQueryData

* feat(useQuery): onSuccess callback

test that onSuccess is not called when setQueryData is used

* feat(useQuery): onSuccess callback

docs changes

* feat(useQuery): onSuccess callback

options spread is wrong - `updatedAt` is actually `dataUpdatedAt`. Oddly we didn't have a test, so I added one

* 2919 query key array (#2988)

* feat: query key array

remove code that internally ensures that we get an Array, because it is now the expected interface, ensured by TypeScript

* feat: query key array

update tests to the new syntax

* feat: query key array

fix assertions, because there is no array wrapping happening internally anymore. The key you receive from the context is exactly the key you passed in

* feat: query key array

this test doesn't make much sense anymore

* feat: query key array

 wrapping in an extra array doesn't yield the same results anymore since v4 because keys need to be an array

* feat: query key array

make docs adhere to new array key syntax

* feat: query key array

migration docs

* feat(QueryObserver): track queries as default (#2987)

* feat(Query Options): remove notifyOnChangePropsExclusion

- remove related code from queryObserver
- remove type def
- remove related tests

* docs(Query Options): update notifyOnChangePropsExclusion sections

- remove from api references
- add to v4 migration guide

* feat(QueryObserver): ""tracked"" as default behavior

- remove ""tracked"" completely if notifyOnChangeProps is not defined, behave as v3 ""tracked""
- add `notifyOnChangeProps: 'all' to opt out of the smart tracking

TODO: Now that default behavior has changed, work out the failed tests. Which parts to change for current ones and possibly write new ones.

* test(useQuery): adjust tests to pass for notifyOnChangeProps udpate

* test(useInfiniteQuery): adjust tests to pass for notifyOnChangeProps udpate

* test(QueryResetErrorBoundary): adjust tests to pass for notifyOnChangeProps udpate

* refactor(QueryObserver): use nullish coalescing operator

much cleaner than the negated if I started with

* test(QueryResetErrorBoundary): remove ""tracked"" from test

* revert: test(QueryResetErrorBoundary): adjust tests to pass for notifyOnChaneProps udpate

This reverts commit a34b4720675dad5ee6ebde401639f328c0c83122.

The changes are not necessary after PR #2993 fix.

* refactor(QueryObserver): combine prop checks

* docs(notifyOnChangeProps): update docs to reflect new api

* refactor: Remove deprecated promise cancel (#2996)

* :fire: Remove the cancel method on promise for cancelling promise

* ✅  Fix query client tests

* ✅   Update query and useQuery tests

* ✅   Update use infinite query tests

* 📝   Update migartion guide

* :bug: Fix linking in documentation

* :pencil: Fix grammatical errors in docs

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* :refactor: Use abortSignal for query cancellation in InfiniteQueryBehavior

* 🚨  Fix lint errors

* :recycle: Move define signal property to a separate function

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* remove test that doesn't make sense anymore - we don't allow different falsy query keys now

* feat(core): react-18

re-add missing import after merge conflicts

* feat(core): react-18

we need to observe isFetching to get a re-render with it thanks to tracked queries being on per default now

* feat(core): react-18

observe fields we are actually checking

* feat(core): react-18

stabilize tests

* feat(core): react-18

make one specific test assert differently for react17/18 because batching with uSES works slightly differently I think

* feat(core): react-18

remove now unnecessary useEffect: uSES makes sure that we can't miss any query updates between creating the observer and subscribing to it, even if the shim is used

* feat(core): react-18

stabilize useQueries test: since both queries have the same timeout, it seems that the initial updates are now batched, leading to 1 less re-render

* feat(core): react-18

stabilize useQueries test: a little less rerenders

* feat(core): react-18

stabilize useInfiniteQuery tests

* feat(core): react-18

use setActTimeout in Blink to avoid warning in react17

* feat(core): react-18

nodejs types conflict :/

* feat(core): react-18

always schedule garbage collection instead of removing directly with cacheTime 0, as callbacks might not fire otherwise

* ✅  Use getByLabelText for opening query details

* :bug: Use findBy* instead of getBy*

* feat(core): react-18

wait for button to appear before clicking it

* feat(core): react-18

seems like a broke a cacheTime: 0 test with the latest changes that I can't fix even with making the test more stable, so I'm partially reverting that change. However, we really shouldn't call `remove` directly, but always `optionalRemove` to never remove fetching queries.

* feat(core): react-18

okay, lets go back to always instantly removing if we have 0 cacheTime. Not sure why the optionalRemove breaks a test

* feat(core): react-18

stabilize flaky test - some renders seem to be batched if we don't sleep enough

* feat(core): react-18

adapt scheduleMicroTask: we don't need to defer error throwing anymore now that we always defer with sleep(0) initially, which means the test only needs to assure that the callback is not invoked immediately, but deferred by one Promise ""tick""

* feat(core): react-18

fix suspense tests: since scheduleMicroTask now always defers by a promise tick (setTimeout(0)), and callbacks are batched into this, it takes one tick longer until the callbacks are invoked; we can ""fix"" that with a sleep(0) in the tests, or just by using waitFor to wait until the callbacks have been called

* ✅   Make sorting test more robust

* ✅  Make queries dependent on each other

* 2927 offline queries (#3006)

* feat(useQuery): offline queries

remove defaultQueryObserverOptions because it is the same as defaultQueryOptions and we can just use that

* feat(useQuery): offline queries

setup dependent default values, to make it easier to work with them

* feat(useQuery): offline queries

basic changes to retryer:
- pause the query before fetching depending upon networkMode
- pause retries depending upon networkRetry

* feat(useQuery): offline queries

move networkRetry and networkMode defaults to the retryer creation, because we need the same for mutations

* feat(useQuery): offline queries

decouple focus and online manager: we're now informing caches of a focus when we're focussed, and about an online event if we come online; if the retryer continues, it can then decide to not fetch depending on our networkMode

* feat(useQuery): offline queries

expose isPaused on the queryResult and make sure isFetching is false when we are paused

* feat(useQuery): offline queries

knowing if we can fetch depends on if we are paused or not, as other conditions should apply

also, rename options (not sure if that will stick though)

* feat(useQuery): offline queries

adjust existing tests for isPaused being exposed

* feat(useQuery): offline queries

fix existing test by setting options to emulate the previous behaviour, otherwise, with `mockNavigatorOnline` being set to false right from the start, the mutation would never fire off

* feat(useQuery): offline queries

adapt onOnline, onFocus tests to new behavior: they are now decoupled, and onOnline is always called even when not focused and vice versa. The retryer should make sure to not continue fetching if necessary

* feat(useQuery): offline queries

first test for networkMode

* feat(useQuery): offline queries

isFetching and isPaused are now derived and stored together in a fetchingState enum (idle, fetching, paused)

* feat(useQuery): offline queries

better networkMode api: online, always, offlineFirst (basically always but with paused retries)

* feat(useQuery): offline queries

more tests for networkMode: online

* feat(useQuery): offline queries

more tests for networkMode: online

* feat(useQuery): offline queries

tests for networkMode: always

* feat(useQuery): offline queries

fix tests that were influencing each other by using proper jest mocks for online and visibility state

* add paused queries to the devtools.tsx

* feat(useQuery): offline queries

never stop pausing when continueFn is called. Initially, I only had this guard for when it's called from the outside, e.g. for onWindowFocus while still being offline, but we need this always because otherwise query cancellation can potentially continue a paused query

* feat(useQuery): offline queries

okay, pausing multiple times was a bad idea, continueFn() will be called eventually anyways

* feat(useQuery): offline queries

attempt at offline toggle button

* feat(useQuery): offline queries

different icons, padding, color

* feat(useQuery): offline queries

i messed up the icon order

* feat(useQuery): offline queries

guard against illegal state transitions: paused queries can unmount or get cancelled, in which case we shouldn't continue them, even if we dispatch the continue event

* feat(useQuery): offline queries

fix devtools tests, account for paused queries

* Revert ""feat(useQuery): offline queries""

This reverts commit a647f64a051ca4c02a872e7871b4b2ce49aeda2c.

* feat(useQuery): offline queries

keep the do-not-start logic out of the run function, and thus out of promiseOrValue. if the promise has already been resolved in the meantime, e.g. because of a `cancel`, the run method will just do nothing, while the previous logic would've started to fetch

* feat(useQuery): offline queries

show inactive as higher priority than paused

* feat(useQuery): offline queries

make sure that optimistic results don't show an intermediate fetching state, but go opmistically to paused instead

* feat(useQuery): offline queries

real result needs to match optimistic result

* feat(useQuery): offline queries

stupid mistake

* feat(useQuery): offline queries

keep status color and status label in sync

* feat(useQuery): offline queries

make networkMode param mandatory for canFetch (and default to online internally) so that we can't screw that up again

* feat(useQuery): offline queries

make sure test ""finishes"" to avoid prints to the console if another test goes online again

* feat(useQuery): offline queries

move cancel function to the top, as it's no longer dependent on the promise since the `.cancel` function is gone; all we need is to abort the signal and reject the promise of the retryer

* feat(useQuery): offline queries

inline canContinue, because it's now only called if the query is in paused state anyways

* feat(useQuery): offline queries

avoid the impossible state by not calling config.onContinue for already resolved queries, as that would put them right into fetching state again, without actually fetching

* feat(useQuery): offline queries

let resolved querie continue, but don't put them in fetching state

* feat(useQuery): offline queries

fix merge conflict and invert condition because no-negated-condition

* feat(useQuery): offline queries

add test for abort signal consumed - different results expected for node < 15 where we don't have AbortController, thus can't consume the signal

* feat(useQuery): offline queries

on…",23,34,1
"TanStack/query","718903debf4dc2c01e088af030ec30138e9f1ade","TkDodo","2021-10-27 19:55:12","true","chore: switch from size-limit to bundlewatch (#2845)",21,26,0
"TanStack/query","0aafb42fccc70799de4c387683fb826a5a4fab0a","TkDodo","2021-11-22 16:40:11","true","fix(query): make sure prefetched queries can be garbage collected (#3007)",20,26,0
"TanStack/query","fe49dd352385409756d42bfa0fe8ad9aa81cee6f","lachlancollins","2023-11-05 05:35:32","true","docs: Fix svelte playground example reactivity (#6311)

* docs: Fix svelte playground example reactivity

* Rename next-js-app to react-next

* Update pnpm lock

* Fix prettier",6,50,1
"TanStack/query","10bf0eea249452c5e949f998498fc59d7bd10029","dbasilio","2023-08-01 10:34:07","true","fix(*): Update repository information in package.json (#5819)

Update repository information to support monorepo structure. This should help unblock automated dependency update tools like Renovate and Dependabot to group together all the packages from this monorepo.",18,47,1
"TanStack/query","2cd92ef39182a5602c72baa0e3a0929d8faa9a46","lachlancollins","2023-01-13 12:48:19","true","docs(svelte-query): Rework SvelteKit setup (#4811)

* Add some default options

* Rewrite hydration example

* Run prettier

* Rename example to SSR

* Add recommended SvelteKit setup

* Rework infinite scroll in sveltekit

* Add SvelteKit note to overview

* Switch basic example to sveltekit

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",33,40,1
"TanStack/query","e6df356edd5ce3d9d93eabbc7c15af68cdd2eb30","floer32","2022-08-08 16:14:37","true","docs: fix link to the offline example (#3996)",28,35,1
"TanStack/query","4314ba5384861da7df0f151b10ffdec400c4a10c","boschni","2020-08-20 15:34:34","true","refactor: define configuration merging strategy (#871)",17,11,0
"TanStack/query","48ec8cfd229307019d9e70cb5ef572bb3bfa5e65","Liam-Tait","2022-04-22 07:46:57","true","fix(devtools): Fix expand button styling (#3544)

closes #3538",21,31,0
"TanStack/query","832d4fb0349b0fb29b1c49f25b9acb71ce42e301","mascii","2023-01-13 14:37:10","true","docs: fix typo (quey -> query) (#4813)",32,40,1
"TanStack/query","72763873699eaa83a6d4d482edec9070c1789694","leolabs","2020-03-02 12:04:33","true","Fix grammatical errors in the README (#185)",2,6,0
"TanStack/query","461e9887e1256a5e800d26cf38fc4404deb27c86","maful","2021-10-23 19:19:35","true","docs(TypeScript): fix useQueries link (#2824)",19,25,0
"TanStack/query","63219f3158a4960dd587971039f09c0794487e3f","cseas","2023-02-27 11:05:27","true","docs: update link for v2 docs (#5044)

* docs: update link for v2 docs

* Update README.md

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",24,41,1
"TanStack/query","4be9726b49df3235de6b6c6a4dafd1303c0641b7","lukyth","2020-05-04 19:26:49","true","Add `queryFnParamsFilter` to `useQuery` API section in the readme (#441)",7,8,0
"TanStack/query","d7d766e215cde613468a37cc66bc424829a60b00","TkDodo","2021-04-10 13:56:48","true","chore: fix test warnings (#2070)

* chore: fix eslint warnings by including refetch in the dependency array

the refetch function is stable

* chore: mockConsoleError for tests that expect errors to be thrown

to avoid error output on the console during tests",26,19,0
"TanStack/query","4e918c8460f1ab23640d6d5a7cd340bfa85869ca","eliamartani","2020-03-02 00:32:44","true","Fix examples package.json (#179)

* chore: Add missing changes (#140)

* chore: Add missing changes at auto-fetching

* chore: Add missing changes at custom-hooks

* chore: Add missing changes at focus-refetching

* chore: Add missing changes at load-more-infinite-scroll

* chore: Add missing changes at optimistic-updates

* chore: Add missing changes at pagination",1,6,0
"TanStack/query","7699dd3f188fbab12c8e17a820fff0ab240a73de","DamianOsipiuk","2023-11-06 20:57:15","true","fix(vue-query): queryClient overloads compat with queryOptions (#6319)",2,50,1
"TanStack/query","19861272f57da5e587bce5bff449d0c3020243e0","DamianOsipiuk","2021-09-07 05:11:30","true","feat(hydration): move hydration utilities to core, keeping old exports (#2497)",22,24,0
"TanStack/query","34f1e8c960fe726e020964e3bc244c3d33b2f6c7","tannerlinsley","2023-08-28 08:33:06","false","release: v4.34.1",22,47,1
"TanStack/query","4f9557170d51a460a4e92176ea6eb9a315ae8d72","tannerlinsley","2022-12-14 17:39:38","false","release: v4.20.3",16,39,1
"TanStack/query","8c901218136c1ef23f07923a6f55d1fe9d4d895e","tannerlinsley","2020-03-18 18:29:49","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,6,0
"TanStack/query","99f5bd9e6901463f2d850d506df7a5a6e3e9061d","tannerlinsley","2020-03-10 17:29:27","false","Update queryCache.js",2,6,0
"TanStack/query","a461a20e60d948d57bc98750af3ed75714a2a4ed","tannerlinsley","2022-09-18 06:25:30","false","release: v4.3.6",22,36,1
"TanStack/query","4d1c5c17a7a71feb140d23c4b5b427ee45ec7ec2","tannerlinsley","2020-07-23 20:40:04","false","docs: update fans",11,10,0
"TanStack/query","126773133b2f3086f68b361fedf0f0e90f29e963","boschni","2020-09-16 21:22:35","true","feat: implement batch rendering (#989)",11,12,0
"TanStack/query","c5cb8cc44ce0e3a9f868206003e76f647cac8774","birkskyum","2023-10-18 20:17:30","true","docs(solid-query): Update all dependencies in example

* Update solid start example

* update pnpm lockfile

* update all solid examples",9,49,1
"TanStack/query","fa04a1d26b2900163ffb2e2ae238735fed4dddaa","DamianOsipiuk","2022-12-30 16:27:17","true","docs(vue-query): fix vue-query imports in docs, correct section replacements (#4728)",37,40,1
"TanStack/query","17a362b141b042f0fd9ff3ce849fd8858446fb30","TkDodo","2022-10-14 06:19:15","false","chore: run typecheck last in CI

typecheck creates typescript output and solid tests stumble upon that",17,37,1
"TanStack/query","b030e0e2587541447db36ad7af0d472a704cfcf6","tannerlinsley","2020-12-14 23:46:39","false","types(devtools): better types for devtools

Fixes #1406",8,15,0
"TanStack/query","2fbb004417fd1b1073c649e15217372cdebd85af","Goues","2020-05-07 05:51:43","true","docs: mention the fact that mutate can no longer be called as an event listener (#464)

Co-authored-by: Jakub Michalek <jakub.michalek@socialbakers.com>",10,8,0
"TanStack/query","f613e18f34bbbe1ab369ca8e246fb3a81dfde020","tannerlinsley","2020-11-03 21:12:19","false","feat: semantic release maintenance (no changes)",10,14,0
"TanStack/query","543e38f81555c2c1fcd5c63734d79a5e5ee89865","tannerlinsley","2020-03-04 22:25:28","false","v1.0.15",2,6,0
"TanStack/query","6a1ff3c30e45891eaa79e064825a3742be4d585b","tannerlinsley","2020-03-05 16:52:13","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",6,6,0
"TanStack/query","dd2eb6cafa89f786f29780f1897c1c5e729acb7a","tannerlinsley","2020-03-04 18:39:51","false","Update README.md",1,6,0
"TanStack/query","7f8d4a0b1f559d6754f301d9a0eef909a97c16b6","TkDodo","2022-09-22 19:11:49","true","chore: set exhaustive deps eslint rule to error (#4207)

and fix the warnings in devtools",18,36,1
"TanStack/query","cd17d4148ffdaaea8764ffa010bb54dc6930345e","boschni","2020-09-18 14:03:13","true","test: add invalidate query tests (#1052)",15,12,0
"TanStack/query","dbd3b616fa80e64e2de0cb444be2398a1f8fef38","boschni","2021-02-13 16:47:58","false","fix: use correct query and options when creating infinite query result",14,17,0
"TanStack/query","2a9955bf48debfaa644f95c43e1461d0564acd7e","mdawar","2020-09-22 16:03:43","true","docs: Remove storing the return value of queryCache.cancelQueries (#1074)

Removed storing the return value of `queryCache.cancelQueries` as it doesn't return anythying.",8,12,0
"TanStack/query","07ddcd1cdce4ccae1597ea56a78b7c6ca113be17","lachlancollins","2023-08-01 02:32:02","true","fix(eslint-plugin-query): Reorganise internal modules (#5821)",19,47,1
"TanStack/query","4fc9e74dcfa515cb7fdbee6cf4ba33ee3cd484fa","melanieseltzer","2020-12-30 02:41:01","true","docs: Update query-invalidation.md (#1544)",17,16,0
"TanStack/query","abbf4796147a0f3a4506407bb9bf7cd23dc06fab","tannerlinsley","2019-09-11 17:29:10","false","Update Readme",0,0,0
"TanStack/query","65ebe5fe886e5d527612b68ecf04025f62af71a3","lachlancollins","2023-01-12 15:43:35","true","refactor(svelte-query): Clean-up type definitions (#4800)

* Simplify types

* Run prettier

* Add reactivity docs, rename example

* This function does not need to be reactive",34,40,1
"TanStack/query","ce61a2a59463ea83790c6f280dd59d720d47d375","alexanderson1993","2022-03-22 18:21:37","true","docs: Add a backlink to bytes.dev (#3429)

* docs: updates for new react-query course

Change removes convert kit for email capture and migrates it to Bytes. Copy updates to promote the new React Query Course are included.

* Add the PPP discount banner for the ui.dev React Query course.

* Add a backlink to Bytes.

Co-authored-by: Benjamin Adam <benjamin.mark.adam@gmail.com>",19,30,0
"TanStack/query","61e7b9b8547900a9b19157898d52587dc04aeeb1","tannerlinsley","2020-11-03 21:25:16","false","fix: semantic release maintenance (no changes)",10,14,0
"TanStack/query","d8dc3a422eb0074b6b6483a3ceb60160df003b6b","tannerlinsley","2020-03-21 00:16:58","false","Update CHANGELOG.md",4,6,0
"TanStack/query","3a8bda84423ef8dd6ea1e37b9cc1b418698a7329","tannerlinsley","2020-02-17 04:47:06","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",15,5,0
"TanStack/query","57eb933f4e41a14ef12e359f3674dd00eec4ff7d","tannerlinsley","2019-11-06 14:37:40","false","Update README.md",1,2,0
"TanStack/query","98b8487d53d3c7f2f8af84aa3dd8228d7665ec25","tannerlinsley","2020-02-28 21:07:50","false","Update README.md",1,6,0
"TanStack/query","6cfbbedb40541523d347020c5cfc8844035d1518","dimitropoulos","2022-11-03 15:42:23","true","docs(guides) some more minor fixes (#4446)

* makes consistent sentences

* makes query option data possible to read without horizontal scrolling

since the change to use the object syntax, a few of these fall off the codeblock at 100% zoom (whereas they didn't before).

* moves placeholder docs after initial-query docs

upon reading though top-to-bottom, since placeholder data's docs define themselves _in terms of_ initial query data, it may make sense to introduce initial query data first

* simplifies example

if the purpose of having a return is to really highlight that this can be a function and things can be done inside it maybe adding:

```
// do any work expensive work here
```

inside the curly braces before the return would do a better job?  not sure, but this seems reasonable.  just doing `initialData: getExpensiveTodos` doesn't immediately highlight that this is a function being called (rather than an array of objects or something) so makes sense to leave the noop closure.

* moves wrapping comments to be visible without horizontal scrolling",17,38,1
"TanStack/query","32b04d2ef8afbf624807ef139719992313a7817b","lioneaglesolutions","2022-12-21 09:02:12","true","docs(vue-query): fix import path in vue installation docs (#4665)

* Fix VueQueryPlugin import path

* update second import",18,39,1
"TanStack/query","7ac9238e4f83d39255e55ef1ffcba7f25ea5cf91","TuckerWhitehouse","2020-07-17 21:31:23","true","fix(queryCache): merge defaultConfig options (#774)

Providing a `defaultConfig` to `makeQueryCache` will merge `shared`, `queries`, and `mutations`
objects instead of overwriting. This allows you to configure only some options.",9,10,0
"TanStack/query","7ae3caf2bdf10e23a2c4a44b8a60c9f29cc732c1","zorzysty","2022-08-11 15:54:21","true","docs(examples): Migrate basic graphql request example to vite (#3952)

* docs(examples): migrate examples/react/basic-graphql-request to vite - adjust file structure

* docs(examples): migrate examples/react/basic-graphql-request to vite",34,35,1
"TanStack/query","14d567556924351cf4d0904cf5dbed019c300d91","tannerlinsley","2019-11-04 21:42:42","false","v0.1.0",0,2,0
"TanStack/query","3eafb40cec8d4320b56216e91e7e60d08e9e1c26","thebuilder","2020-04-20 13:58:47","true","types: add retry function to query options (#380)",5,7,0
"TanStack/query","bac853fb3c5f4f2c1fb1fa15bc3be9368494ef3d","JaeYeopHan","2021-08-12 07:51:54","true","fix(core): change `shouldFetchOptionally` function to account for query key changes (#2565)",25,23,0
"TanStack/query","1fc7ed08d18a5fbcc0c4c84525db5d02ff1cada2","fschwalm","2020-06-19 20:43:50","true","fix(types): add mutateOptions on MutationFunction (#594)",11,9,0
"TanStack/query","5559b447db7ea92601b8328db07e0200d58bbbec","tannerlinsley","2020-04-18 16:29:56","false","Update README formatting",2,7,0
"TanStack/query","21e3da826d37800c27b0d682b1cf835866b15c1a","tannerlinsley","2020-03-26 06:31:45","false","Fix imports",0,6,0
"TanStack/query","844977966b418b1451df11ff5a25a0db6f5c084a","TkDodo","2023-06-12 07:53:55","true","docs: Update installation.md",24,45,1
"TanStack/query","dc2df1066fb35593ab9f7b852ee250424f212737","TkDodo","2021-11-28 07:17:22","true","fix(useQuery): continue retries if query unmounts and remounts (#3032)

* fix(useQuery): continue retries if observer unmount and remount

if we are waiting for a retry to happen, unsubscribing he last observer will cancel retries and just return the error; however, if a new observer subscribes in the meantime, we should continue with the ongoing retries.

this is especially important with ""strict effects"" in react18, where effects are run twice and thus observers are always unsubscribed and re-subscribed immediately.

* fix(useQuery): continue retries if observer unmount and remount

add another test to include query cancellation",19,27,0
"TanStack/query","b29824a3182f063644940f6959ea718f1b874972","TkDodo","2023-09-30 14:13:45","true","chore: Update CONTRIBUTING.md",8,49,1
"TanStack/query","7906ce786fcac8bae63a4eb6bbcba514df677ccb","boschni","2021-02-14 07:44:41","false","fix: prevent fetch when switching to disabled query",14,17,0
"TanStack/query","15936ac040af67042bd0d84a542d964c29798fb2","denisborovikov","2020-06-30 20:46:50","true","Update README.md (#678)

See https://github.com/tannerlinsley/react-query/issues/664",3,10,0
"TanStack/query","211edc09f3f87935d3f684a7447e06e8551f9416","boschni","2020-08-31 21:20:34","true","fix: make sure initial data is used when switching queries (#944)",11,12,0
"TanStack/query","9326990efcb64e0dfba1e2ee36d21b99f11388d3","boreyko1","2020-09-17 14:22:53","true","docs: fix comparison 3rd party website links (#1040)",13,12,0
"TanStack/query","4e6bf29439e8131739b65c7fd7c6dea9ee12ddf0","tannerlinsley","2023-09-19 14:09:16","false","release: v5.0.0-beta.34",10,48,1
"TanStack/query","27cc8c29ad45ada5fba9b868c47bcbd310946526","tannerlinsley","2020-02-27 15:36:29","false","Fix: Use isInactive state, immediately garbage collect queries with no data cached.",1,5,0
"TanStack/query","dcae624ff0ad673d381d0131850c6cbe2e6f9df9","tannerlinsley","2019-12-02 16:15:14","false","v0.3.20",3,3,0
"TanStack/query","8ec83f43fa3d81b323934a2d57f960ab73e25d37","tannerlinsley","2020-06-25 15:47:21","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,9,0
"TanStack/query","1baf3a4d3c161e36ea2a3c1b3ed633e3fcf9ccc7","tannerlinsley","2021-01-03 17:20:20","false","docs: update sponsors",17,16,0
"TanStack/query","38ef67a3e5bcfef92076b1b007d02004ac774df1","tannerlinsley","2023-07-14 13:24:37","false","release: v4.29.21",36,46,1
"TanStack/query","4185c51e6c420876af1b63929a14f1f7d2575998","tannerlinsley","2023-09-07 08:06:18","false","release: v4.35.0",15,48,1
"TanStack/query","b4aa576c6d84019717cd260908cf1dfc34e1b56e","tannerlinsley","2020-10-02 20:01:08","false","docs: update sponsors",13,13,0
"TanStack/query","8d5e08fdfffc42cadddd61865bc12f754b4b3564","juliusmarminge","2023-07-31 11:56:38","true","feat(infiniteQuery): type pageParams and allow null cursors (#5811)

* type pageParams and allow null cursors

* doc

* use TPageParam in some places [WIP]

* dont pluralize

* docs: document return value in api-reference

* docs: migration guide

* refactor: use != null to check for null and undefined

* fix: we also need to widen the check in `fetchPage`

* test: check for null returned from getNextPageParam

* more

* fix react type test

* dont need that i guess

* prettier

* migration guide

* revert generic order

* format

* fix test

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",19,47,1
"TanStack/query","8b5b5364136bde54f717f1f193a8c705f8499e75","tannerlinsley","2020-09-23 19:30:48","false","docs: update faq",8,12,0
"TanStack/query","d5ce85a51099731e5f80a45bc94fad58efd684e0","tannerlinsley","2020-03-23 22:40:18","false","v1.0.35",2,6,0
"TanStack/query","edeb96c088f3c35205221b7722a7f9a5bb648760","Newbie012","2023-02-03 17:48:26","true","fix(eslint-plugin-query): don't remove options passed as variable (#4932)",31,41,1
"TanStack/query","a0a8ada275f859dbeeb451588b4e1b264333721b","TkDodo","2022-11-08 09:51:52","false","chore: fix allcontributors",20,38,1
"TanStack/query","9ab60ace215ee942952f49cf56d627eac8930111","TkDodo","2021-08-05 11:45:28","true","fix: add overloads to useIsMutating (#2451)",25,23,0
"TanStack/query","1aa384cea4eee6b83e4afcef0e1e7d92d1a17e60","lachlancollins","2023-07-26 22:19:50","true","chore: Update to publint 0.2.0 (#5792)",23,46,1
"TanStack/query","1353c420d1330082ac7e60b98b5f89723c1b065e","tannerlinsley","2020-05-01 16:14:05","false","Trigger side-effects for non-mounted queries too

Fixes #357",7,8,0
"TanStack/query","e72d84f1df04248a71195e00ee56bcfac1e510c7","ilovett","2020-05-05 18:18:51","true","fix(typescript): changed root location of `types` relative to `main` index.js to fix import autocomplete (#452)",11,8,0
"TanStack/query","9c7d3aaefd99ae8becf2f6649112a8e7292174aa","raoufswe","2020-07-09 16:26:49","true","docs: fix banner in small screens (#726)

* docs: wrap get started and repo buttons in small screens

* docs: fix banner in small screens

* docs: fix table styles in small screens",7,10,0
"TanStack/query","6db2cd3951002a48cea74875b254e9192adc5915","tannerlinsley","2020-04-15 15:41:38","false","v1.2.5",1,7,0
"TanStack/query","5e43e00ede1f8ccac47c7a2c56e21f64df68e4fe","ZackDeRose","2023-05-01 10:15:58","true","chore: nx 16 migration (#5354)

* nx 16 migration

* update pnpm lock file",22,44,1
"TanStack/query","d669b2bd0464475305bbd4b67758c35f74e71d1f","TkDodo","2023-10-08 14:46:20","false","Merge remote-tracking branch 'origin/main' into rc

# Conflicts:
#	packages/eslint-plugin-query/package.json
#	packages/query-async-storage-persister/package.json
#	packages/query-broadcast-client-experimental/package.json
#	packages/query-core/package.json
#	packages/query-persist-client-core/package.json
#	packages/query-sync-storage-persister/package.json
#	packages/react-query-devtools/package.json
#	packages/react-query-persist-client/package.json
#	packages/react-query/package.json
#	packages/solid-query/package.json
#	packages/svelte-query/package.json
#	packages/vue-query/package.json",10,49,1
"TanStack/query","820258b17d3e671cd6f31a09b688fe7e0f77d534","manudeli","2023-05-22 19:11:29","true","Revert ""docs: Revert ""docs(community): add @suspensive/react-query community contribution (#5259)"" (#5303)"" (#5447)

This reverts commit 3ec6693ba49078d51119ac50290a2bff8bc61d51.",25,44,1
"TanStack/query","35b3836f142e5b0ae94da3a2ab8a15886080dda1","TkDodo","2021-10-10 19:02:48","true","docs(mutations): Update community resources (#2781)",24,25,0
"TanStack/query","2b0caebc80d70c4e6ea2c4d37541216f0a41e775","tannerlinsley","2023-02-03 17:53:59","false","release: v4.24.5",30,41,1
"TanStack/query","1d83f2962ee0edde9321f0e9fe394d3805db9ff3","tannerlinsley","2022-09-12 08:27:05","false","release: v4.3.5",19,36,1
"TanStack/query","b9853206eba5e1cbaf2dd2262f4a2136474ec718","tannerlinsley","2020-09-18 18:49:00","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",14,12,0
"TanStack/query","9d5ea5567bbf0bc73b8d01aadf4cdc0b3c85bd29","tannerlinsley","2023-10-11 03:56:20","false","release: v5.0.0-rc.10",5,49,1
"TanStack/query","3a6ffb360b4a7431a1668ae23d47216f9a8efb68","flogehring","2023-10-13 19:13:55","true","chore: fix typos (#6141)",6,49,1
"TanStack/query","51bb60fedc3ccc4f12006a883925de95aee18ff3","MichaelDeBoey","2020-07-29 22:47:42","true","fix: Update setFocusHandler.ts (#811)",13,10,0
"TanStack/query","ea48ce85e682fe5fd144516d2c60468fd882e845","tannerlinsley","2023-09-01 19:15:50","false","release: v4.34.4",12,48,1
"TanStack/query","1e998d34b007bf0fcb91ebae1b1046967039512e","gustalima","2022-11-21 21:25:04","true","docs: fix typo in parallel-queries.md (#4529)",15,38,1
"TanStack/query","1a38d17710c7a38a85f8eacee455f63db924e89c","arnaudbzn","2023-02-12 20:37:17","true","examples(react): Algolia search example (#4971)

* docs: example: algolia

* fix: remove empty line if desc is null

* fix: stale time value

* refactor: use vite and examples structure

* fix: remove deprecated doc files

* docs: add algolia example in the config.json",33,41,1
"TanStack/query","d4be56dc7e94a2a95a9850b65c7d66f2aaa1b34a","vyrruss","2019-11-07 15:05:23","false","Add throw error for useMutation (#19)",3,2,0
"TanStack/query","7034ec80d0d823784fbaee4c4827203d13c14ba6","tannerlinsley","2019-11-04 23:43:21","false","v0.1.1-alpha.0",0,2,0
"TanStack/query","a0abca33377c2a3a63b6e63f54ada2301729e165","tannerlinsley","2019-09-11 17:46:50","false","Update README.md",0,0,0
"TanStack/query","ff77512b6c99bef0555541429fdf27221d4d4412","zorzysty","2023-01-15 14:13:13","true","test: stabilize various tests (#4825)

* test: stabilize various tests

* chore: bump istanbul version",31,40,1
"TanStack/query","34e0ad239ba55b3aeb374c773c19d5b9094507a7","illuzan","2022-12-01 20:13:33","true","feat(query-core): improve environment check to support more server runtimes (#4578)",16,39,1
"TanStack/query","f1c34ef6798931abf8ab4fd155e4a8b82684895a","jonathonhawkins92","2021-04-20 18:26:35","true","docs: Highlighting change of the default config key. (#2155)",31,19,0
"TanStack/query","87008db3a0e3c396b53d624a81cebedf6ee3888a","CreativeTechGuy","2020-06-14 03:13:12","true","fix(types): enable more types for first QueryKey (#577)

* fix(types): enable more types for first QueryKey

* fix(types): enable more types for first QueryKey

* test: update query key test case",17,9,0
"TanStack/query","2cfd16413d0d076a31e756f50e8bc18d68a48d3e","otaciliolacerda","2020-07-08 13:11:28","true","fix: (queryInstance.clearInterval) is not called on unmount (#717)",8,10,0
"TanStack/query","46458812950dfe2b01ccb8fd3175aea033b1c471","TkDodo","2022-09-28 06:48:41","true","test: stabilize flaky tests

* refactor(tests): remove differential assertions

we only run our tests in node16 now, where AbortController and AbortSignal do exist

* refactor(tests): stabilize Blink tests",15,37,1
"TanStack/query","815fe5ac5623b146a6373755414390c130476204","TkDodo","2022-09-28 17:15:42","false","chore: fix release

- --token is not possible with pnpm, so we need this workaround (https://github.com/pnpm/pnpm/issues/3141)
- also capture log output for easier debugging",15,37,1
"TanStack/query","94539e17c7797d43ae3d7c58128e5fc7e8107889","tannerlinsley","2020-02-27 15:14:38","false","Fix: First UID is no longer regenerated due to falsey assertion

Fixes #158",3,5,0
"TanStack/query","201735927ff7b8226cc001493043d791aaad48dc","TkDodo","2023-09-03 08:56:32","false","chore: prepare possibility to have rc releases",12,48,1
"TanStack/query","b324a9b87721934154c8b1c3d4447e3719c0a56b","lachlancollins","2023-01-08 11:28:07","true","feat(svelte-query): Svelte Query Adapter for TanStack Query (#4768)

* feat: svelte-query adapter

* add examples

* add @testing-library/svelte and svelte-jester

* add transform for testing svelte components

* re-export @tanstack/core core

* add a few initial test

* delete tests in examples

* use ^ in dependencies

* delete and gitignore .vscode

* rename basic-typescript to basic

* add basic example to ci.json

* remove transform from global preset

* update version

* don't gitignore lib directory in svelte examples

* fix build files location in package.json

* chore: prettier formatting

* add missing state

* chore: fix eslint errors

* add context

* unsubscribe

* add missing export

* use svelte context

* update version

* update examples to use context

* release: v4.14.5

* remove onMount

* add onMount to setQueryClient

* remove unneeded exports

* Add basic svelte docs overview

* Add SvelteKit 1.0 example

Uses the data from the simple example

* Edit nodeResolve settings

* More rollup and babel tweaks

Seems to be working

* Try svelte plugin options

* Separate out svelte config

* Switch to svelte-package

* Reset rollup config

* Output to ./build

* Use vitest in svelte-query

* Fix test imports

* Avoid transpiling TS during typecheck

* Fix vitest command

* More vitest migration work

* Minor fixes to tests

* Rename file to types.d.ts

* Replace setQueryContext with QueryClientProvider

* Replace tabs with spaces for repo consistency

* Update examples to sveltekit 1.0

* Implement Hydrate component

* Add playground example

Rewrite of the react example

* Start adding star-wars example

* Add films and film pages

* Finish star-wars example

* Rename store functions with create prefix

* Add correct favicons

* Reorder some files in svelte-query

* Undo rollup.config.ts changes

* Add new createQuery and createMutation tests

* More descriptive test name

* Misc fixes from feedback

- Max TS 4.7.4
- Move root package.json dependencies
- Use object syntax
- Use test:jest script (for now)
- Remove sveltekit autogenerated files

* Fix pnpm-lock

* Specify svelte-package source, update TS to 4.7.4

* Remove unnecessary packages in examples

* Sync pnpm-lock

* Reset pnpm-lock to upstream

* Run pnpm install

* Remove svelte-query from root tsconfg

Needs to be run from its own svelte-check package... sorry

* Run prettier, remove unused import

* Run prettier on svelte files

Requires prettier-plugin-svelte to run

* Prettier for changed files

* Fix cipublish from svelte-query

* rimraf to remove build/lib/package.json

* Run svelte-kit sync before vitest

* Add files field to package.json

* Add types field to package.json

* Bump svelte-query version to 4.20.0

In case this fixes the CI issue

* Add path alias to vitest

* Update vitest to 0.26

Changes module resolution?

* More CI improvements

* Remove --parallel from pnpm scripts

* Remove unused dependency

* Add eslint settings

Thanks @rivo420

* Add coverage report

Co-authored-by: DeAndre Johnson <dre@phreshr.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

RELEASE_ALL",36,40,1
"TanStack/query","67c69917ee19b95fbdd3bf8a3e29f291625834df","tannerlinsley","2020-03-04 18:01:27","false","v1.0.12",1,6,0
"TanStack/query","10d59c7ccb4190642769e01dd26de22a8d8e27ee","tannerlinsley","2020-03-05 16:52:11","false","Update getQueryArgs

Fixes #200",6,6,0
"TanStack/query","6eea15093aaa0627a7714e13e540cff0013a4a30","tannerlinsley","2020-12-22 19:30:37","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",10,15,0
"TanStack/query","63dc6bf064694a10d1a052d76f0e3af18acf0ded","tannerlinsley","2020-03-04 17:20:58","false","Update CHANGELOG.md",2,6,0
"TanStack/query","5a5fd6baef39d8b0b5007f3fc9638b89614d60cb","tannerlinsley","2023-02-12 09:03:58","false","release: v4.24.6",36,41,1
"TanStack/query","b50d89ccba908567ed80bea339c150ada74315bf","tannerlinsley","2020-09-25 16:18:52","false","docs: update sponsors",6,12,0
"TanStack/query","c3c5b32c56bab4b2ed8c2d84d723bf59196bc1df","DaleSeo","2023-07-20 06:57:08","true","docs: Update the repo url in the example code (#5746)",24,46,1
"TanStack/query","652567be0bf76620c8382b7426f807be3ff439fb","salockhart","2020-04-21 14:13:29","true","Update CachedQuery to add type to state member (#386)",2,7,0
"TanStack/query","f76783ca715c7c757d33c0592a45cf554de14bd4","zqianem","2023-07-14 09:46:03","true","docs(vue-query): fix some typos in devtools.md (#5706)",42,46,1
"TanStack/query","7cd1af1b474cab87f564f8f579ddda1b81e5c1fc","tannerlinsley","2020-06-27 05:27:51","false","refactor: Move infinite query logic into queryCache",4,9,0
"TanStack/query","3722dc316f5ce577f0639b9fafe7be1ab40fe027","tannerlinsley","2020-07-08 22:20:26","false","docs: add comparison page",7,10,0
"TanStack/query","6e5c8828aee7a3290afbc6a97ec69b524cac1b1f","tannerlinsley","2022-07-20 17:53:13","false","release: v4.0.7",24,34,1
"TanStack/query","0ea77fd07b6ee48778a2cd505f2efe21c6853b82","tannerlinsley","2020-02-27 18:14:31","false","Fix: Remove the unused `query.state.isInactive` boolean",1,5,0
"TanStack/query","337e1ecde53c712bc41120c3dc3cf3b76e9db674","tannerlinsley","2020-05-12 06:20:40","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",11,8,0
"TanStack/query","6630b1b28d2a8f338d0ac7e4062e5187a2da5d4d","TkDodo","2022-08-26 19:16:32","true","chore: update CONTRIBUTING.md",21,35,1
"TanStack/query","8a332bd05037497e12055a60dafd75b28daef317","TkDodo","2022-07-15 18:25:10","false","chore: make it possible to release from main",25,34,1
"TanStack/query","bca6379535a50bd57625ca6e6f74b5c8fd3ab230","TkDodo","2023-09-29 14:52:50","true","fix(react-query): useSuspenseInfiniteQuery needs to use defaultThrowOnError, too (#6081)",7,49,1
"TanStack/query","d750c93ccac6152641524d2df94507684649c349","thatzacdavis","2020-03-02 00:22:54","true","Update usePaginatedQuery example (#180)

* Update usePaginatedQuery example in README to relevant key name

* Update usePaginatedQuery example with code from README

* Fix key in usePaginatedQuery example",1,6,0
"TanStack/query","c4c90b323c0d70b02088d774f46351f377f385b3","tannerlinsley","2022-03-26 14:28:28","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",17,30,0
"TanStack/query","131eb29a82202e078c43c50ddfa4f317b1ed545a","tannerlinsley","2021-02-12 23:53:29","true","fix(experimental): persistQueryClient and persistors (#1789)

* fix(experimental): refactor to persistQueryClient and persistor interfaces

* clean up basic example",13,17,0
"TanStack/query","b9a18aaa16142055388a4ed1dd3001302b73edfe","tannerlinsley","2023-10-18 19:52:37","false","release: v5.0.1",9,49,1
"TanStack/query","52468e13476612d185b359b87cdb6878c8ad8a2a","tannerlinsley","2020-07-27 14:53:07","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",10,10,0
"TanStack/query","3643b87c34d86117b150ca845a058991ff132ab0","tannerlinsley","2023-06-20 16:53:57","false","release: v4.29.15",25,45,1
"TanStack/query","9d9aea5fb12eb89dec54c619845b3d226b53cf2b","TkDodo","2022-11-12 06:59:35","true","feat(react-query): suspense for useQueries (#4498)

* feat: suspense for useQueries

* generics for fetchOptimistic

* tests: useQueries suspense",18,38,1
"TanStack/query","fb6735846dc25c7af74376a99353c9414951d413","TkDodo","2020-12-23 15:09:32","true","docs: typescript example docs (#1511)

* (docs): add typescript examples docs page

* (docs): fix typescript example

- eslint complains about use-before-defined
- added missing react types

* (docs): fix typescript example

- eslint complains about use-before-defined
- added missing react types

* (docs): add node types

* (docs): update react-query to the latest version in typescript example

* (docs): add typescript example to navigation

* (docs): make the typescript example open on pages/index.tsx",10,15,0
"TanStack/query","4ae99561ca3383d6de3f4aad656a49ba4a17b57a","TkDodo","2022-10-12 11:34:01","true","chore: improve CI (#4288)

* chore: get rit of rescript

* chore: solid-query doesn't need jscodeshift

* chore: move react dependencies to react packages

* chore: move react dependencies to react packages

* chore: add descriptions

* chore: remove special lint tsconfigs

we want to use the same tsconfigs for linting as for everything else

* chore: make all tests run in parallel with pnpm

* chore: chunk ci pipeline

* chore: move react specific test setup into react packages

* chore: remove jest configs from tsconfig.json

because they live outside of the root dir (src)

* chore: fix weird type errors in solid tests

* chore: fix running the lint task

* chore: run the typecheck task in parallel

* chore: add a clean task

* Revert ""chore: run the typecheck task in parallel""

This reverts commit 53573f5b13422bf1d2e8b035740c930645ea1a45.

* chore: no idea why this is errors

* chore: fix codecov upload

* chore: add runInBand

* Revert ""chore: add runInBand""

This reverts commit 568e12c41bdba6e4abb7f1b405e57107e529e020.

* chore: make jest tests temporarily exit with 0

so that we can test code-coverage

* chore: only run test jests

* Revert ""chore: make jest tests temporarily exit with 0""

This reverts commit ad099006f848b71329a1054b213d918c2b4b2317.

* chore: fix solid-query tests with a custom transform

* chore: use checkout v3

* chore: fix node-version for Test React 17 pipeline

* chore: fix watch mode

we cannot run jest:dev anymore because streaming watch mode to multiple packages is not a thing; you'd need to go into a separate package and watch those tests there",17,37,1
"TanStack/query","99dc985e81d0cd3b4b799d8583de685d43817136","brumm","2020-03-06 15:02:12","true","queryCache.prefetchQuery should return cache contents on cache hit (#207)

* add a failing test case for returning data on prefetchQuery cache hit

* fix queryCache.prefetchQuery only returned data on cache miss

* fix orphaned 'either' and clarify method behavior

* fix test description

* returning a promise is unnecessary, and don't return from else branch

Co-Authored-By: Tanner Linsley <tannerlinsley@gmail.com>

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",1,6,0
"TanStack/query","77e069a6e21531fc54faf3dce8aa43fee5d4659f","TkDodo","2022-07-20 15:41:50","true","docs: fix links",24,34,1
"TanStack/query","c81e309a4df4527b3fed0f304c4a843dc8aba7e5","boschni","2020-09-15 18:15:29","true","feat: export QueryCache and remove global query cache from docs and examples (#1017)",10,12,0
"TanStack/query","475eb4123abdadebd76354ce3d4d72abe24d2bd3","brunohkbx","2021-07-16 08:55:39","true","fix: rename asyncStoragePersistor to createAsyncStoragePersistor (#2421)",29,22,0
"TanStack/query","b699c03dc5933483d62c5d81deb9b832c14b062b","promer94","2023-06-12 08:24:39","true","docs: update comparison (#5552)",23,45,1
"TanStack/query","9a7f66f986fa08cf6dc0a82337a5c01cf32dbe63","tannerlinsley","2023-01-25 19:31:45","false","Update ci-v3.yml",32,40,1
"TanStack/query","71144c7ed1745a666e1d47a921bbf6a5e752eef4","zorzysty","2022-11-06 15:13:01","true","test: stabilize the test for notifying query cache when a query becomes stale (#4466)

* test: stabilize the test for notifying query cache when a query becomes stale

* test: stabilize the test for notifying query cache when a query becomes stale - attempt#2

* test: stabilize the test persisting data when enabled is changed to false

* test: stabilize the test for rendering with selected data

* test: stabilize the test for notifying query cache when a query becomes stale - attempt#3 (thanks TkDodo)

* test: stabilize the test for keeping the previous data when keepPreviousData is set",15,38,1
"TanStack/query","a11f3359a9058be0941851382bc6ce6d85955577","tannerlinsley","2020-12-16 14:28:49","false","chore: fix publishing",14,15,0
"TanStack/query","f1ca0a197046030241de0aeab11bc4b00265985a","tannerlinsley","2020-04-20 17:04:57","false","Update README.md",3,7,0
"TanStack/query","b344db47cbd8fb527ff61c41b0a1cdbe4c02d1a3","tannerlinsley","2020-03-26 05:46:18","false","Improve examples",0,6,0
"TanStack/query","d3ea0a89261b31b09a07515b23c0b0fccf5c5fed","tannerlinsley","2020-03-24 20:30:29","false","v1.1.0",1,6,0
"TanStack/query","6ce2791f87870d942496aca0036de738f04754cb","kentcdodds","2020-03-20 22:42:44","true","clear stale timeout when removing queries (#271)

Closes #270",6,6,0
"TanStack/query","ae40028bfdc50b2714b5155eb461867ef1d65699","tannerlinsley","2020-03-24 22:43:25","false","v1.1.1",1,6,0
"TanStack/query","541cbbff957c38a8e2198239e51705dc412c5625","tannerlinsley","2022-10-25 21:36:27","false","release: v4.13.3",18,37,1
"TanStack/query","7f7e759f05cac79de775c1fa55cf3b4103fc60a0","charlypoly","2022-10-29 13:10:35","true","doc(graphql): update ""Type-Safety and Code Generation"" section (#4371)

* doc(graphql): update ""Type-Safety and Code Generation"" section

* Update docs/graphql.md

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",17,38,1
"TanStack/query","34a7c1ce0c136dc582ac165733ce4f865d9e2a7f","boschni","2020-09-16 14:54:28","true","feat: add remove method and deprecate clear (#1022)",12,12,0
"TanStack/query","5c79f728751cc81eb2f0a50c499aae3d35f80e2c","tatchi","2020-09-11 19:26:10","true","refactor: remove unused deepEqual function (#999)",10,12,0
"TanStack/query","7f9e037f4f391210001469b150260052727b0be9","cherniavskii","2020-03-12 15:01:19","true","Support staleTime: Infinity (#232)

* format

* add failing test

* fix failing test",5,6,0
"TanStack/query","bcecb5476eea19f4e3c9dbe387c11a12900131cb","0xflotus","2020-06-25 19:25:10","true","(docs): fixed small errors (#636)",1,9,0
"TanStack/query","2c559dbdf0575ecb5780585d68f233b5ff0ef84f","wghglory","2021-04-29 18:45:07","true","docs: Update placeholder-query-data.md (#2212)",34,20,0
"TanStack/query","65543e566efce5506dedac5459298792a044096b","tannerlinsley","2020-05-12 22:38:07","false","fix: allow suspense lifecycle callbacks without using query instances",13,8,0
"TanStack/query","0571641747d0cc88cef8e4eb5051a631ba346cd6","tannerlinsley","2019-12-09 20:44:31","false","Update CHANGELOG.md",3,3,0
"TanStack/query","4d68f00276522c56578c1f0a7ea4173179b4b8fd","tannerlinsley","2022-09-24 18:43:07","false","release: v4.6.0",16,36,1
"TanStack/query","ba857051a734858121fc99186d06c7bacfc95834","dgrcode","2022-08-09 19:08:16","true","docs: Update code example to use v4 convention (#4010)",32,35,1
"TanStack/query","48ab80242bd2ebfe9d53b46f311b26c6f90d3a49","nickmccurdy","2022-08-11 15:37:27","true","docs: add missing languages (#3978)",34,35,1
"TanStack/query","eb94ef3f4eddf1665d506c6eaf8a2974ea6705ab","mihirgupta0900","2021-04-10 13:48:52","true","docs: fix minor typo (#2083)",26,19,0
"TanStack/query","5c8192746fd576de8c94b7a204e5247984b65749","juanhenriquez","2022-07-21 07:57:24","true","fix(react-query): allow passing options to useQuery without initialData (#3873)

* fix(react-query): allow passing options to useQuery without initialData

* fix: switch DefinedUseQueryResult for UseQueryResult

* fix: add function overload that returns DefinedUseQueryResult

* fix: move new overload functions to the end

* chore: add new overloads to the other versions of the useQuery hook",24,34,1
"TanStack/query","e81cb478ad821bfebe7063c9abad4fe612a6a05a","luisadame","2021-04-03 17:02:52","true","docs(QueryStatus): change from enum to union type (#2073)

* docs: add query status typing change from enum to string literal

* docs: underline links in headings

as their color is inherited from the heading and links are
indistinguishable from the heading itself

* docs: move query status typing change to typescript section

* docs: underline level four heading links too

* docs: remove unnecessary old line from diff",24,19,0
"TanStack/query","b5c74f9f3f0688fb7ba5f6a46036f87ecc1353fa","lachlancollins","2023-10-21 23:46:18","true","chore: Update dev dependencies (#6215)",7,49,1
"TanStack/query","7535383eba20fcfb0e476dbf199823d1423cd7e1","AngusMorton","2020-11-20 06:16:32","true","fix: clearTimeout instead of clearInterval (#1305)

jest modern timers break because the stale timeout is created with setTimeout but cleared with clearInterval",10,14,0
"TanStack/query","63339fec27de3c219d647c045e45fe871701c01b","DamianOsipiuk","2023-08-19 19:03:50","true","fix(vue-query): add missing `clientPersisterOnSuccess` callback (#5889)",23,47,1
"TanStack/query","61bc58de906718b7bf7b89c4205b6edf21269c8d","tannerlinsley","2023-06-13 21:02:22","false","release: v4.29.13",21,45,1
"TanStack/query","499d911771595c56365b2ac30ba7fa7b16cf5191","tannerlinsley","2022-12-25 18:05:05","false","release: v4.20.7",39,39,1
"TanStack/query","4bc258b17e1e42a74b628f5c3f35f112c50be986","zorzysty","2022-08-16 08:25:14","true","docs(examples): remove redundant examples (#3951)

* docs(examples): remove redundant examples
- ""custom hooks"" because ""basic"" example uses custom hooks already
- ""window focus refetching"" because this feature is already turned on by default

* docs(examples): remove redundant examples
- ""optimistic updates"" because ""optimistic updates typescript"" already covers this functionality

* docs(examples): remove links to deleted examples from the docs

* docs(examples): remove redundant examples - update package-lock.json",21,35,1
"TanStack/query","e4746f605c3a2603813d460c351e377caa4b41b0","tannerlinsley","2020-12-16 06:26:33","false","docs: update sponsors",14,15,0
"TanStack/query","5b8783304dba192f7213c6b885dfa6baa229c909","tannerlinsley","2020-03-21 00:17:25","false","v1.0.33",4,6,0
"TanStack/query","1017233adc8a0ad6e45fddc56eaf8193b91a82ff","cherniavskii","2020-03-06 18:50:06","true","fix query marked as fetching, when setting initialData (#209)

* add failing test

* fix failing test

* remove log",0,6,0
"TanStack/query","40fa780caf4423c006e2d61baa3ff95f481e334b","tannerlinsley","2019-12-09 20:44:51","false","v0.3.23",3,3,0
"TanStack/query","ff5d6a7518e99bb30c63201dfc2be009ca4f96cb","gargroh","2020-05-09 16:21:09","true","chore(github action): Detect broken links in documentation (#473)

* chore(github action): Detect broken links in documentation

* docs: update name",15,8,0
"TanStack/query","48e806b89b8003f2d19a3611b47a13c980e51967","Newbie012","2023-02-12 09:25:00","true","fix(eslint-plugin-query): mutation function is turned into mutation key (#4973)",36,41,1
"TanStack/query","7515e198772f330e0f674db8f29bf62de6b178c7","tannerlinsley","2023-01-30 16:59:42","false","release: v4.24.4",30,41,1
"TanStack/query","802a28890974d5cd1622486dda0dcf6ac6706bcc","TkDodo","2023-04-30 17:04:25","true","docs: deprecate callbacks on useQuery (#5353)

* docs: deprecate callbacks on useQuery

* docs: recommend the eslint plugin on installation page",22,44,1
"TanStack/query","0fda41a56c7fd485650415626b2a0f1d046a4957","TkDodo","2022-07-20 14:55:58","true","fix(react-query-devtools): only export devtools in development mode (#3861)",24,34,1
"TanStack/query","1d3ee672d2a1536e3463243813c91902aa97d973","TkDodo","2023-07-24 09:59:07","true","feat: beta release (#5771)

* release: v5.0.0-alpha.11

* refactor(core): unify hydration options (#5131)

* refactor: unify hydration options

* docs: update hydration docs

* migration guide

* refactor: use shouldDehydrate... syntax

* Update docs/react/guides/migrating-to-v5.md

Co-authored-by: Fredrik Höglund <fredrik.hoglund@gmail.com>

* Apply suggestions from code review

* chore: fix tests

* chore: fix tests

* Update docs/react/reference/hydration.md

---------

Co-authored-by: Fredrik Höglund <fredrik.hoglund@gmail.com>

* release: v5.0.0-alpha.12

* release: v5.0.0-alpha.13

* chore: remove unused devDependencies (#5211)

* refactor(react-query-devtools): move devtools components in files (#5150)

* refactor(react-query-devtools): move QueryStatusCount header to subdirectory

* refactor(react-query-devtools): move QueryRow to subdirectory

* refactor(react-query-devtools): move ActiveQuery to subdirectory

* refactor(react-query-devtools): move Cache Panel to subdirectory

* lint

* refactor: add display names

* fix: typo

* release: v5.0.0-alpha.14

* fix(solid-query): SSR fixes - Inconsistent state (#5093)

* fix(solid-query): do not call unsubscribe on the server

* fix(solid-query): prefer val from queryResource if

it is available there

* chore: add hydration debugger to solid ssr example

* bump minimum solid-js version

* chore: pnpm i

* chore: fix rollup babel typings

Result of this change upstream that types the “targets” property -> https://github.com/DefinitelyTyped/DefinitelyTyped/pull/63927/files#diff-a4da813bfdc10bbb7d4d9ee9b811309e7e2a16c0484b9a334752db84be4b0f31

Signed-off-by: marbemac <marbemac@gmail.com>

* replace void 0

Signed-off-by: marbemac <marbemac@gmail.com>

* chore: remove uncessary onMount

Signed-off-by: marbemac <marbemac@gmail.com>

* chore: skip this onComputed on first render

Signed-off-by: marbemac <marbemac@gmail.com>

* fix: copy state properties over for ssr hydration

Signed-off-by: marbemac <marbemac@gmail.com>

---------

Signed-off-by: marbemac <marbemac@gmail.com>

* release: v5.0.0-alpha.15

* fix(solid-query): Fix non hydrating queries (#5229)

* release: v5.0.0-alpha.16

* release: v5.0.0-alpha.17

* docs(react): fix typo in TypeScript.md (#5239)

Signed-off-by: Eng Zer Jun <engzerjun@gmail.com>

* fix: do not mutate input (#5240)

* fix: do not mutate input

params passed to function from consumers should be treated as readonly and thus shouldn't be modified

* test: remove unexpected `exact` props from find methods

---------

Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>

* release: v5.0.0-alpha.18

* docs: update migrating-to-v5 (#5274)

I think the rocket emoji is causing a visual bug too but since I edited this through GitHub's UI, I couldn't confirm.

* fix(query-core): correct placeholderData prevData value with select fn (#5227)

* fix(query-core): correct placeholderData prevData

* fix(query-core): preserves correct prevQueryResult

This commit preserves the correct previous result between rerenders.

* test(react-query): Test with placeholder & select

* fix(query-core): Add lastDefinedQueryData property

* fix(query-core): Remove console.log

* fix(query-core): Add react-query test

* release: v5.0.0-alpha.19

* feat(solid-query): Add `reconcile` option (#5287)

* feat(solid-query): Add `reconcile` option

* feat(solid-query): Add `reconcile` callback test

* release: v5.0.0-alpha.20

* chore: adapt tests to v5 syntax after merge

* feat: remove callbacks from QueryObserver (#5282)

* feat: remove callbacks from QueryObserver

types are passing now

* test: remove some more callback related tests

* docs: migration guide for removed callbacks

* chore: fix broken lock file

* chore: remove unused variables

those were only needed on main for keepPreviousData, which doesn't exist anymore

* release: v5.0.0-alpha.21

* fix(solid-query): Remove unserializable values (#5326)

* release: v5.0.0-alpha.22

* feat: rename throwErrors to throwOnError (#5318)

* feat: rename throwErrors to throwOnError

to be aligned with the options we already have on imperative methods, like `invalidateQueries`

* docs: fix outdated code reference

* chore: rename type

* fix: let the refetchInterval function also return undefined

and fall back to false if it does

* release: v5.0.0-alpha.23

* docs: remove duplicated `isInitialLoading` (#5327)

* fix: make sure codemods are included in react-query (#5340)

* chore: fix pr pipeline (#5345)

* chore: remove unneeded script

* chore: fix syntax error after merging

* Empty-Commit

* chore: update to node18 to hopefully fix CI issues

see: https://github.com/vitest-dev/vitest/issues/1191#issuecomment-1192798501

* chore: don't throw error if build dir already exists

* release: v5.0.0-alpha.24

* feat: queryOptions helper function (#5153)

* feat: queryOptions helper function

so that we can define and share options outside of useQuery, but still get the type inference

* docs: queryOptions

* docs: remove reference to onError

* docs: update migration guide

* release: v5.0.0-alpha.25

* chore: remove createStore option (#5352)

having the option to customize the internal store sound nice, but the problem is that the store holds Query instances, not data. So, the setter is only called once, not on every data update. This makes it relatively useless - every time we thought we could leverage createStore, it fell short of our requirements because of this.

The better way is usually to subscribe to the QueryCache directly

* docs: remove callbacks from useQuery

* fix(core): make sure refetching multiple queries imperatively works offline (#5249)

* fix(core): make sure refetching multiple queries imperatively works offline

* test: add another test for different networkMode

* fix: always catch promises even if we don't return them because we are offline

* release: v5.0.0-alpha.26

* chore: svelte-query tests, validatePackages changes

* feat(devtools): Add framework agnostic devtools (#5347)

* feat(devtools): Add framework agnostic devtools draft

* Fix test

* Move query-devtools build before react-query-devtools

* Fix dimensions bug & add isInitialOpen props

* Fix isOpen state

* Add devtools cutom errorTypes option

* Add explicit close button

* Add keyboard focus for tooltips

* Add query-core to query-devtools peerDependencies

* Update pnpm lock file

* Add overflow hidden to hide filters on top view

* Revert overflow hidden - causing other issues

* Update documentation

* Fix validate-packages script

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* fix(query-devtools): Add query-core to devDependencies (#5360)

* fix(query-devtools): Add query-core to devDependencies

* Fix pnpm-lock.yaml

* release: v5.0.0-alpha.27

* feat(solid-query): `queryOptions` helper for solid-query (#5355)

* feat: queryOptions helper for solid-query

* add tests

* fix imports

* release: v5.0.0-alpha.28

* feat(svelte-query-devtools): Svelte Adapter for new Devtools (#5362)

* Implement working devtools component

* Fix pnpm-lock.yaml

* Update workspace config

* Always a prettier error

* Fix eslint error

* Fix test:types

* Add svelte-query to deps

* Use esm-env to block loading in prod

* Remove example changes

* Simpler export

* Allow dynamically editing props

* Run prettier

* fix(devtools): Update ESM export extension (#5364)

* fix(devtools): Update ESM export extension

* Update Svelte devtools types error

* Fix svelte-query-devtools types error

* release: v5.0.0-alpha.29

* feat(devtools): Make queryclient reactive (#5366)

* release: v5.0.0-alpha.30

* Revert changes to svelte-query build

* fix(svelte-query-devtools): Fix tsconfig paths

* fix(svelte-query-devtools): Fix issue parsing JSX (#5372)

* feat(query-core): Add previousQuery to placeholderFn (#5358)

* feat(query-core): Add previousQuery to placeholderFn

* Add query-core and react-query tests

* Remove unused query type

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* release: v5.0.0-alpha.31

* docs: Update dependent-queries.md (#5391)

I believe `isLoading` has been renamed to `isPending`

* refactor: unwrap listeners

* chore: relax eslint for tests

* release: v5.0.0-alpha.32

* docs: new docs for placeholderData

* feat(useQueries): combine (#5219)

* attempt at adding combine on observer level (doesn't work)

* feat(useQueries): combine

adapt getOptimisticResult to return both the result array and a combined result getter

* feat(useQueries): combine

make sure combinedResult stays in sync with result

* feat(vue-query): combine results for useQueries hook

* Add new options to svelte-query

* Add new options to solid-query

* fix: enable property tracking for useQueries

* fix: move property tracking to react layer

* chore: remove logging

* chore: remove unnecessary type assertion

* test: tests for combined data

* docs: combine

---------

Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>
Co-authored-by: Lachlan Collins <1667261+lachlancollins@users.noreply.github.com>
Co-authored-by: Aryan Deora <adeora@iu.edu>

* docs: combine

* chore: setup fallback base to origin/main

if we trigger a release manually via github, this value might not be filled

* release: v5.0.0-alpha.34

* docs: update installation

* chore: Improve eslint/tsconfig setup in svelte packages (#5438)

* fix(types): fix TError generic on queryOptions

* release: v5.0.0-alpha.35

* release: v5.0.0-alpha.36

* chore: Bump eslint version to 8.34.0 (#5439)

* feat(svelte-query): Simplify types (#5442)

* release: v5.0.0-alpha.37

* chore: Update dev dependencies (#5466)

* chore: Replace cp with cpy-cli (#5441)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* fix: Update typescript-eslint (#5467)

* release: v5.0.0-alpha.38

* chore: More package updates (#5468)

* chore: Link examples to workspace packages (#5469)

* feat(svelte-query): Switch to moduleResolution bundler (#5471)

* fix: Downgrade chalk to v4 (#5472)

* release: v5.0.0-alpha.39

* docs: change Hydrate->HydrationBoundary (#5455)

* updated docs on SSR
Hydrate -> HydrationBoundary

* docs(ssr): change Hydrate->HydrationBoundary

change Hydrate->HydrationBoundary to remove deprecated component

* docs(ssr): rename all Hydrate->HydrationBoundary

rename all Hydrate instances ->HydrationBoundary for consistency

* feat(react-query-persist-client): await onuccess (#5473)

* fix: have `onSuccess` return a promise too so that we can await it

that way, invalidation or mutations that run in onSuccess will still keep isRestoring to be false, which avoids race conditions

* test: test for awaiting onSuccess

* docs: onSuccess

* release: v5.0.0-alpha.40

* release: v5.0.0-alpha.41

* chore: Regenerate alpha lockfile (#5477)

* docs(solid-query): Fix API signature in overview.md (#5470)

* docs(svelte-query): Add svelte-query-devtools to examples (#5478)

* chore: Clean-up eslint config (#5481)

* chore: More eslint improvements (#5482)

* feat: Convert rollup config to ESM (#5484)

* chore: Migrate scripts to ESM (#5486)

* feat: Split rollup config for Nx caching (#5487)

* fix: Fix CJS/ESM issue with @commitlint/parse

I can't believe these issues still exist, see https://github.com/evanw/esbuild/issues/1719

* chore: Update prettier, eslint, rollup, scripts (#5490)

* chore: Fix prettierignore

* release: v5.0.0-alpha.42

* fix: Update @commitlint/parse (#5491)

See https://github.com/conventional-changelog/commitlint/pull/3614

* release: v5.0.0-alpha.43

* chore: Add eslint-plugin-compat (#5495)

* Fix workspace links

* Add eslint-plugin-compat

* Update nx.json

* fix: Improve workspace tsconfig (#5497)

* release: v5.0.0-alpha.44

* fix: Move deps/devDeps/peerDeps to appropriate location (#5498)

* chore: Extend base tsconfig for svelte packages (#5501)

* release: v5.0.0-alpha.45

* chore: Make test:types have no Nx output (#5500)

* feat: Remove svelte field from package.json (#5504)

* release: v5.0.0-alpha.46

* feat: Add explicit package.json `type` field (#5505)

* release: v5.0.0-alpha.47

* chore: Fix nx affected (#5509)

* fix: Fix ESLint warnings (#5510)

* release: v5.0.0-alpha.48

* chore: Update to Nx 16.3.1 (#5514)

* chore: Update to nx 16.3.1

* Update pnpm-lock.yaml

* chore: Update Nx cloud workflow (#5515)

* feat: Drop legacy webpack v4 support (#5507)

* release: v5.0.0-alpha.49

* feat: Remove UMD build output (#5517)

* release: v5.0.0-alpha.50

* chore: Rework rollup externals (#5519)

* feat: Refactor package exports (#5520)

* chore: Remove publint error temporarily

* release: v5.0.0-alpha.51

* fix: Publint error in solid-query (#5522)

* release: v5.0.0-alpha.52

* fix: Simplify exports in solidjs packages (#5523)

* release: v5.0.0-alpha.53

* chore: Improve Nx task separation (#5524)

* Fix ci workflow

nx run-many doesn't use --base

* feat(query-devtools): Lazyload Query Devtools Core (#5527)

* release: v5.0.0-alpha.54

* fix(query-devtools): Broken package.json exports (#5528)

* Make publint throw errors

* Rewrite CJS files to use .cjs extension

* Add concurrency option to PR workflow

* Fix export extensions

* release: v5.0.0-alpha.55

* chore: Re-enable Nx Distributed Task Execution (#5518)

* fix(query-devtools): inform onlineManager when offline mode is simulated (#5534)

* release: v5.0.0-alpha.56

* docs: make returning a promise for optimistic updates more explicit (#5485)

* fix(codemod): do not mark the `buildMessage` method as private (#5546)

* fix(codemod): do not mark the `buildMessage` method as private

It might fail because of the lack of support.

* chore(codemod): add missing `filePath` parameter to the docblock

* release: v5.0.0-alpha.57

* fix(query-devtools): Fix getSidedProp bug (#5551)

* release: v5.0.0-alpha.58

* chore: Update publish script (#5559)

* fix(query-devtools): Add chunkFileNames option (#5560)

* release: v5.0.0-alpha.59

* fix: Change `svelte-package` output directory (#5561)

* release: v5.0.0-alpha.60

* release: v5.0.0-alpha.61

* chore: try to stabilize test

* fix(solid-query): Use rollup-preset-solid (#5565)

* release: v5.0.0-alpha.62

* feat: Add legacy rollup builds (#5570)

* release: v5.0.0-alpha.63

* docs: Add `""private"": true` to examples (#5578)

* release: v5.0.0-alpha.64

* fix(useIsMutating): fix vue warning (#5453)

onScopeDispose() is called when there is no active effect scope to be associated with

* release: v5.0.0-alpha.65

* feat(infiniteQuery): allow prefetching arbitrary amounts of pages (#5440)

* refactor: combine fetching first page with refetching

as it's the same condition

* feat(infiniteQuery): allow prefetching arbitrary amounts of pages

* test prefetching

* fix: make sure that pages and getNextPageParam are passed in tandem to (pre)fetchInfiniteQuery

* docs: prefetching

* chore: try to stabilize test

* docs: migration guide

* release: v5.0.0-alpha.66

* refactor: move queryOptions to its own file (#5480)

* refactor: remove 'use client' from non-components

* refactor: move queryOptions to its own file

where we don't have a 'use client' directive, because we can call this function on the server as well

* Revert ""refactor: remove 'use client' from non-components""

This reverts commit 8ecac6688b01197c4c4010d3e240dfbca1895d50.

* refactor: rename isRestoring file

* chore: fix import

* release: v5.0.0-alpha.67

* fix: Update eslint-plugin-query build config (#5601)

* fix: Use pnpm workspace protocol (#5600)

* release: v5.0.0-alpha.68

* chore: Use nx watch command (#5605)

* fix(solid-query): revert package.json typo (#5615)

* release: v5.0.0-alpha.69

* release: v5.0.0-alpha.70

* release: v5.0.0-alpha.71

* chore: Fix Nx parallelisation for vue-query tests (#5635)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* fix(devtools): padding for action buttons (#5608)

global `button` styles would otherwise affect buttons

* release: v5.0.0-alpha.72

* feat: Support Svelte v4 (#5659)

* feat: Support svelte v4

* Downgrade @testing-library/svelte

* Upgrade @testing-library/svelte to 4.0.3

* Refactor onMount dynamic import

* release: v5.0.0-alpha.73

* fix(eslint-plugin-query): Use tsup to generate types (#5666)

* release: v5.0.0-alpha.74

* fix: Skip queryClient context lookup if client passed directly (#5669)

* release: v5.0.0-alpha.75

* feat: Accept all svelte stores as options (#5672)

* refactor: Accept stores other than writable

* Cleanup Readable type import

* Add tests

* Stricter isSvelteStore check

* Update docs

* Fix input bind

* Add testing-library cleanup

* release: v5.0.0-alpha.76

* fix(svelte-query): Fix staleTime reactivity bug (#5682)

* release: v5.0.0-alpha.77

* chore(svelte-query): Update reactivity docs and tests (#5683)

* fix(query-devtools): Bundle all dependencies (#5684)

* release: v5.0.0-alpha.78

* release: v5.0.0-alpha.79

* feat: react-query-next-experimental package (#5598)

* chore: fix a copy-paste error

* chore: bootstrap package

* chore: setup package

* chore: allow passing with no tests

* fix: remove 'use client' from index bundle

* chore: cleanup copy/paste error

* chore: fix prettier

* refactor: replace ref with direct props access

* fix: do not write to refs during render

* refactor: inline function into useEffect to avoid useCallback

* fix: eslint no-shadow

* refactor: namespace id

* refactor: removed pointless check

* fix: set to empty array on cleanup

* fix: adapt for v5 changes

* chore: fix build

* docs: add streaming example

* chore: fix outdated lockfile

* chore: fix prettier

* refactor: remove isSubscribed ref

* refactor: re-arrange comment

* chore: remove comments

* chore: fix broken lock file

* feat: allow customization of hydrate / dehydrate options

and make sure we fall back to the defaultShouldDehydrate function, which only dehydrates successful queries

* release: v5.0.0-alpha.80

* docs: fix nextjs-streaming example

* fix(core) : sync Observer 'current' properties when optimistic reading occurs (#5611)

* fix-5538 : sync Observer 'current' properties when optimistic reading occurs

* Flip test on currentResult with placeholderData's order & add test

* Fix tests using the same queryKey

* remove options.placeHolderData from deciding whether to assign observer current properties, use equalitycheck on v5

* maybe fix for vue reactivity cbs

* test(vue-query): test persister with useQuery

* Force line terminator to \\n on codemods tests

* Revert "" Force line terminator to \\n on codemods tests""

This reverts commit 6f0a469f51e162052ea3245b4ef3da7c6febc9c3.

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>
Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>

* chore: Force line terminator to \\n on codemods tests (#5664)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* chore: stabilize a flaky test

* release: v5.0.0-alpha.81

* docs: remove devtools from example

because they currently don't work

* fix(query-devtools): Force publish package (#5715)

* release: v5.0.0-alpha.82

* docs: re-enable devtools

* fix: Update dev dependencies (#5718)

* release: v5.0.0-alpha.83

* chore: Add vite to root package.json (#5722)

* refactor: Add new eslint sorting from main (#5723)

* release: v5.0.0-alpha.84

* chore: Update vite and vitest (#5724)

* chore: Remove eslint-plugin-compat (#5732)

* feat: include meta in query and mutation hydration (#5733)

* feat: include `meta` in query and mutation hydration

* test: tests for meta hydration

* chore: stabilize a flaky test

* chore: stabilize another flaky test

* release: v5.0.0-alpha.85

* fix(onlineManager): always initialize with `online: true` (#5714)

* fix(onlineManager): always initialize with `online: true`

instead of relying on navigator.onLine, because that indicator is broken AF in chrome

https://bugs.chromium.org/p/chromium/issues/list?q=navigator.online

* docs: document subscribe methods

* docs

* test: fix types in tests

setting to undefined is now illegal, so we have to reset to `true`, which is the default now

* fix(tests): switch from mocking navigator.onLine to mocking onlineManager.isOnline

* fix: offline toggle in devtools

it should now be enough to set online to true / false, without firing the event, because we always set & respect that value. we don't override the event handler, so real online / offline events might interfere here

* chore: fix tests

with the implementation of onlineManager, where we default to `true`, we need an explicit `'offline'` event to get it to false; otherwise, switching back to true doesn't change the state, so subscribers are not informed

* chore: prettier write

* chore: fix eslint

* chore: delete an old, flaky test that doesn't test much

* release: v5.0.0-alpha.86

* docs: use bundlejs for bundle-size

* docs: fix link

* feat: Replace rollup with tsup/esbuild (#5597)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>
Co-authored-by: Aryan Deora <adeora@iu.edu>

* release: v5.0.0-alpha.87

* chore: Simplify tsconfig (#5745)

* fix: Simplify devDependencies (#5747)

* fix: Fix tsconfig ""include"" setting (#5750)

* release: v5.0.0-alpha.88

* docs: fix potential typo (#5748)

* fix potential typo

* Update docs/react/guides/queries.md

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* fix: Add missing extensions to ESM imports (#5751)

* chore: Bundler integration tests (#5756)

* Add react-cra5 test

* Add react-cra4 test

* Add react-vite test

* Add svelte-vite test

* Add solid-vite test

* Run prettier

* Rename script to test:bundle

* Add vue-vite test

* Run prettier

* fix(query-devtools): Fix Devtools Build Issues (#5768)

* release: v5.0.0-alpha.89

* feat(codemod): add codemod that renames the `Hydrate` component usages to `HydrationBoundary` usages (#5761)

* feat(codemod): add codemod that renames the `cacheTime` and `useErrorBoundary` object properties and TypeScript property signatures (#5765)

* feat(react-query): useSuspenseQuery (#5739)

* feat: useSuspenseQuery

* feat: infiniteQueryOptions

* fix: add exports

* feat: useSuspenseInfiniteQuery

* feat: initialData overloads for useInfiniteQuery

* fix: types

* chore: stabilize test

we sometimes get failureCount: 2, but it doesn't matter here (timing issue)

* fix: types for useSuspenseQuery (#5755)

* docs: suspense

* docs: api reference

* docs: useSuspenseQuery in examples

* fix: types for useSuspenseInfiniteQuery (#5766)

---------

Co-authored-by: Jonghyeon Ko <manudeli.ko@gmail.com>

* release: v5.0.0-alpha.90

* chore: fix prettier

* chore: fix tests

* release: v5.0.0-alpha.91

---------

Signed-off-by: marbemac <marbemac@gmail.com>
Signed-off-by: Eng Zer Jun <engzerjun@gmail.com>
Co-authored-by: Tanner Linsley <tannerlinsley@users.noreply.github.com>
Co-authored-by: Fredrik Höglund <fredrik.hoglund@gmail.com>
Co-authored-by: Gabriel Pichot <gabriel.pichot@gmail.com>
Co-authored-by: Marc MacLeod <marbemac@gmail.com>
Co-authored-by: Aryan Deora <adeora@iu.edu>
Co-authored-by: Eng Zer Jun <engzerjun@gmail.com>
Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>
Co-authored-by: Arthur Denner <arthurdenner7@gmail.com>
Co-authored-by: Ilya <marchukilya@gmail.com>
Co-authored-by: Lachlan Collins <1667261+lachlancollins@users.noreply.github.com>
Co-authored-by: OrJDev <91349014+OrJDev@users.noreply.github.com>
Co-authored-by: Enguerrand des Vaux <enguerrand@des-vaux.fr>
Co-authored-by: Dennis kinuthia <denniskinuthiaw@gmail.com>
Co-authored-by: Yuji Sugiura <leader22@users.noreply.github.com>
Co-authored-by: Yaroslav Lapin <jlarky@gmail.com>
Co-authored-by: Balázs Máté Petró <petrobalazsmate@gmail.com>
Co-authored-by: Aleksandr Semenov <juvirez@gmail.com>
Co-authored-by: Matthew Salsamendi <matthewsalsamendi@gmail.com>
Co-authored-by: Speros Kokenes <skokenes@users.noreply.github.com>
Co-authored-by: EL AYADI Mohamed <moh.el.ayadi@gmail.com>
Co-authored-by: Dale Seo <5466341+DaleSeo@users.noreply.github.com>
Co-authored-by: Jonghyeon Ko <manudeli.ko@gmail.com>",23,46,1
"TanStack/query","c1b35596a40a7c5138a220671c21eb9b690de99d","TkDodo","2022-11-04 08:55:00","false","chore: fix malformed json",18,38,1
"TanStack/query","fd68b22894eb46aed10cb34fbdb13f6178d8951f","lukesmurray","2022-09-24 07:15:01","true","feat(solid-query): Solid Query Adapter for TanStack Query (#4211)

* feat(solid-query): Solid Query Adapter for TanStack Query

RELEASE_ALL

Add an adapter to TanStack Query to support SolidJS.

Co-authored-by: Aryan Deora <adeora@iu.edu>
Co-authored-by: Jen Kaplan <jenniferckaplan@gmail.com>

* Fixed Tests and included changes from feedback

* Prettier Format Code

Collaborators:

@oscartbeaumont
@lukesmurray
@jennyckaplan

* Readme Update

Collaborators:

@oscartbeaumont
@lukesmurray
@jennyckaplan

Co-Authored-By: Oscar Beaumont <oscar@otbeaumont.me>
Co-Authored-By: Luke Murray <34020210+lukesmurray@users.noreply.github.com>
Co-Authored-By: Jen Kaplan <25395806+jennyckaplan@users.noreply.github.com>

* Fixing tsconfig for CI test runner

Co-Authored-By: Oscar Beaumont <oscar@otbeaumont.me>
Co-Authored-By: Luke Murray <34020210+lukesmurray@users.noreply.github.com>
Co-Authored-By: Jen Kaplan <25395806+jennyckaplan@users.noreply.github.com>

* (fix: ci) CI Test fix

Co-Authored-By: Oscar Beaumont <oscar@otbeaumont.me>
Co-Authored-By: Luke Murray <34020210+lukesmurray@users.noreply.github.com>
Co-Authored-By: Jen Kaplan <25395806+jennyckaplan@users.noreply.github.com>

* (fix: tests): Remove React 17 check

Co-Authored-By: Oscar Beaumont <oscar@otbeaumont.me>
Co-Authored-By: Luke Murray <34020210+lukesmurray@users.noreply.github.com>
Co-Authored-By: Jen Kaplan <25395806+jennyckaplan@users.noreply.github.com>

* Update packages/solid-query/src/__tests__/createQuery.test.tsx

* Locking vite-plugin-solid version

Co-Authored-By: Oscar Beaumont <oscar@otbeaumont.me>
Co-Authored-By: Luke Murray <34020210+lukesmurray@users.noreply.github.com>
Co-Authored-By: Jen Kaplan <25395806+jennyckaplan@users.noreply.github.com>

Co-authored-by: Aryan Deora <adeora@iu.edu>
Co-authored-by: Jen Kaplan <jenniferckaplan@gmail.com>
Co-authored-by: Oscar Beaumont <oscar@otbeaumont.me>
Co-authored-by: Jen Kaplan <25395806+jennyckaplan@users.noreply.github.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",17,36,1
"TanStack/query","afbd788af5bc59ec66600341861bca948442d48f","TkDodo","2022-12-30 10:13:04","true","docs: fix reference to course",37,40,1
"TanStack/query","bcf152d5686c64bd57cdcb77efd98da8eda67f41","osiux","2020-03-11 17:05:49","true","fix: call updater function for setQueryData (#226)",2,6,0
"TanStack/query","7bab9534cfb322f23a01549d464e0e618e204897","tannerlinsley","2021-01-28 04:33:01","false","docs: use sponsors iframe",25,17,0
"TanStack/query","8a72824834b36b6ddf886b08af3102adc46bec8a","tannerlinsley","2019-09-23 01:08:25","true","Merge pull request #2 from tannerlinsley/dependabot/npm_and_yarn/lodash-4.17.15

Bump lodash from 4.17.11 to 4.17.15",1,0,0
"TanStack/query","29944da8aafe1149bfe45895eed0b7b26a06124e","tannerlinsley","2020-10-21 20:17:19","false","fix: fix semantic release",13,13,0
"TanStack/query","a3b69272b2d1a84a33c8ca8df9e0c0b64d5f83cd","tannerlinsley","2020-03-11 17:07:56","false","v1.0.25",2,6,0
"TanStack/query","0c27968989f4e4fc97369aeaabbe574ff5aefcb5","tannerlinsley","2022-11-14 00:36:37","false","release: v4.17.0",16,38,1
"TanStack/query","7000e33b97b5c4847ad97f74e712277a36888109","tannerlinsley","2020-05-05 17:16:43","false","chore: Test semantic-release!",10,8,0
"TanStack/query","07c9ce01236b387d9a5c424b0a76c830a325d4b9","OmerCohenAviv","2022-04-22 14:12:27","true","test(useQuery): add test for errorUpdateCount (#3547)",20,31,0
"TanStack/query","058977ae615567eee43bd91e0bfffbd9ae349f02","TkDodo","2021-09-11 15:36:53","true","docs: Add React Query Error Handling to the community resources (#2665)",24,24,0
"TanStack/query","07af1ca0d7892501971d7d634b05b637c27e80f1","tannerlinsley","2019-11-04 21:30:34","false","Update Examples",0,2,0
"TanStack/query","69d4e94bde4134c411882cacf66b1a38fb6ba0e6","tannerlinsley","2020-04-18 16:00:55","false","1.2.7 - Add Typscript Type Definitions",2,7,0
"TanStack/query","986a1a1ad91d4f491fa8853a96d7c096eb30b1ca","tannerlinsley","2019-11-11 17:11:47","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,2,0
"TanStack/query","82b5e31dbc8d0e94a65597f7c7f1fd0561138ddb","tannerlinsley","2020-07-08 15:20:17","false","docs: better footer",7,10,0
"TanStack/query","629a4f412e49c128be5975837e9b806d94640247","tannerlinsley","2020-09-24 13:56:56","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",10,12,0
"TanStack/query","39b14faabdd0c4a15b2b982b598840b704d31f6e","tannerlinsley","2023-07-29 08:41:34","false","release: v5.0.0-beta.6",24,46,1
"TanStack/query","d7275d14f3584704e631ad0b42c9a5f390bc02c0","dimitropoulos","2022-12-13 19:05:22","true","chore: remove leftover lerna config (#4632)",19,39,1
"TanStack/query","f5a0ceceaea102643db29991645bf53754a560d5","bennettdams","2022-01-21 12:19:42","true","docs(ssr): Hydration caveat for Next.js' rewrites (#3209)

Adds a small section for a caveat about hydration when using some specific feature/configuration of Next.js",26,28,0
"TanStack/query","11bf7a44d127bd85360969eaa8da90922935ab7f","nico-hyperjump","2020-12-07 04:12:13","true","docs: Update query-cancellation.md (#1328)

* Update query-cancellation.md

Add sample code to manually cancel a query.

* Update query-cancellation.md

* Update query-cancellation.md

* Update query-cancellation.md",14,15,0
"TanStack/query","d026e41711b1228c22ef59a7416669b5a7e41e67","arnassavickas","2022-10-22 09:56:14","true","docs(testing): fix infinite query example (#4328)",22,37,1
"TanStack/query","31ef31cfbf05a5e7e97a47a895cd7d4bfd9bbb6a","tannerlinsley","2022-10-07 19:11:15","false","release: v4.10.3",17,37,1
"TanStack/query","a470f4601b04e06a4314a8d1c621057bb3273525","artysidorenko","2022-02-06 08:33:59","true","fix(types): useQueries to also handle array-params with typed QueryKey (#3267)

* fix(types): handle useQueries wrappers with strongly-typed array parameters

* test(types): confirm typecheck passes without explicit type for mapped query

* test(types): add typecheck on queryFn in mapped query",23,29,0
"TanStack/query","41f46ade10aced2303425b332ea2f845b83d74d4","akib22","2021-01-09 20:25:46","true","docs: remove unnecessary parentheses (#1592)",24,16,0
"TanStack/query","8aa4cb3e049f07b6ada0e82bbfeced9e76d03ce2","tannerlinsley","2020-12-14 06:00:13","false","Update logo.sketch",8,15,0
"TanStack/query","5bfd7afafb60c1286003e665bfbddf4ec6402bfc","tannerlinsley","2020-10-12 20:26:28","false","docs: update sponsors",6,13,0
"TanStack/query","0b50b7564d061c453a3da490e9df9b5e7d84ca01","tannerlinsley","2020-07-01 22:47:14","false","fix: revert commit",2,10,0
"TanStack/query","2a5294f9f2f424bcb4bb7cb7f7b12ead98dd4bc6","tannerlinsley","2020-04-20 15:56:42","false","v1.2.8",5,7,0
"TanStack/query","26c80ad74daab24bd703e6863f6b869443fff6f7","tannerlinsley","2020-03-13 19:40:21","false","Update queryCache",3,6,0
"TanStack/query","f45df3c36453e1defe7bfcac505e745140e61689","tannerlinsley","2020-02-17 06:57:50","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,5,0
"TanStack/query","737bfc17bd9e575979d8d3f070dd25f0f5134f3c","tannerlinsley","2020-07-08 22:35:29","false","docs: update comparison",7,10,0
"TanStack/query","b60ee0e92431c32e5cda7cfde0481b55245ab466","tannerlinsley","2021-01-01 20:40:34","false","fix(devtools): remember panel height",17,16,0
"TanStack/query","bbcdaa28c2b10a8fbccd76c5ad1d5bbfd786e272","tannerlinsley","2023-09-16 15:04:43","false","release: v4.35.4",17,48,1
"TanStack/query","118801df342881021c2bb6c8add5bb11b6dd944a","tannerlinsley","2023-07-21 09:29:19","false","release: v4.32.0",24,46,1
"TanStack/query","ab7eb18d15d08f6a940f8d075c3258ff7c0d99c2","tannerlinsley","2023-03-04 07:38:49","false","release: v4.24.14",29,42,1
"TanStack/query","aa660da5ed73cd0c4ec7cb3a660b95f1859a0232","neemski","2022-08-16 06:34:41","true","fix(query-broadcast-client-experimental): upgrade broadcast-channel (#4038)",23,35,1
"TanStack/query","e97c6bce68f795af4912ad8313423c279f35bdb6","cawa-93","2022-12-15 22:54:46","true","refactor(vue-query): replace `isRef` with `unref` where possible (#4641)",17,39,1
"TanStack/query","7c08f330ec54383b9116f3580e0cc74eeb606a84","boschni","2021-02-06 18:38:10","true","fix: check if the navigator global is available before usage (#1755)",22,17,0
"TanStack/query","1bcfe7198b2a66bd4ef376dac0eb03401b80f9b2","tannerlinsley","2020-07-08 06:00:01","false","Readme + docs",7,10,0
"TanStack/query","6c069660fc8669d7de3c1efcbad81ddd8cbc9cb7","TkDodo","2022-09-28 18:50:39","false","chore: remove cache folder

because postinstall errors with:

Error: Cache folder path is retrieved for pnpm but doesn't exist on disk",15,37,1
"TanStack/query","db693e59704ef6ded571e28208dd68bb17c80f8b","sphilee","2019-11-09 15:35:35","false","Delete .eslintrc (#24)",2,2,0
"TanStack/query","988ba10a71c5cbf5b88c216e42a62a0c1c593f17","cliffordfajardo","2021-12-13 06:16:57","true","chore: update bug report template (#3089)",21,27,0
"TanStack/query","3e82c581da7b917e2be959feb6c8c7a726f6b14e","DamianOsipiuk","2023-06-25 15:58:04","true","Revert ""fix(vue-query): do not subscribe on server - nuxt2 memory leak fix (#5576)"" (#5627)

This reverts commit f16e413a8f7b9a5fc53a71502b7e7bacd21b2507.",24,45,1
"TanStack/query","37ad9c127d7eefdc351c542aa2d26e3a93c0b45c","roachjc","2020-11-14 21:12:37","true","docs(infiniteQuery guide): include missing error (#1289)",7,14,0
"TanStack/query","c19383519eb4bab37afdcece46ed0cbd2720d8e6","tannerlinsley","2021-01-05 19:16:37","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",21,16,0
"TanStack/query","52c086b1d95b930e812899b6846bc6e4b7b9e47a","tannerlinsley","2023-10-09 08:01:49","false","release: v5.0.0-rc.5",9,49,1
"TanStack/query","55ab9454c79d7c2d91f64a699e6fcd7ce19d7260","tannerlinsley","2020-03-10 17:32:41","false","Closes #223",2,6,0
"TanStack/query","74f797056d33a176a7eab88ad2b6dbc1fc3ae212","Mini-ghost","2023-08-19 19:09:30","true","perf(vue-query): avoid unnecessary deep watch (#5842)

* perf(vue-query): avoid unnecessary deep watch

* update",22,47,1
"TanStack/query","c977982c59bc4148db1655096dc9350017828ce7","tannerlinsley","2020-09-16 21:05:45","false","docs: add graphql-request example",11,12,0
"TanStack/query","1940d9f9b33850c1cefce1fdb3c773a37f78e031","tannerlinsley","2020-03-05 16:46:47","true","Fix typo in README.md (#201)

* Update README.md

This looks like a typo for me. In key there's `completed`, and in `fetchTodoList` it becomes `status`. How should it be correctly?

* Update README.md

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",5,6,0
"TanStack/query","f78c363b49a4cb8549eecfb8facc7d66d86eb7f5","tannerlinsley","2019-11-20 19:24:17","false","Update CHANGELOG.md",3,2,0
"TanStack/query","1bea039661389522ffad6a254f9df8ab5051bee3","tannerlinsley","2021-01-05 19:16:58","false","docs: add deps",21,16,0
"TanStack/query","d7048d1c35efae5826988448055033fbc59d4c56","tannerlinsley","2020-06-25 16:38:50","false","feat: add initialStale option to queries

By default `initialData` is not considered stale, but sometimes you may want it to be, for instance, if your initial data is only a partial subset of an object and you know you will need to refetch the full version immediately after mounting. For this, you can use the `initialStale: true` options.

By setting `initialStale` to `true`, the `initialData` will be considered `stale` and will cause a refetch when the query mounts for the first time.

```js
function Todos() {
  const queryInfo = useQuery('todos', () => fetch('/todos'), {
    initialData: todoListPreview,
    initialStale: true,
  })
}
```",1,9,0
"TanStack/query","7d3965b0ead674241789ed27755d52c8072e2ae0","tannerlinsley","2020-07-08 15:09:10","false","docs: fix app scripts",7,10,0
"TanStack/query","27dd824ad0241ee44ec97842f60e880bd0822302","tannerlinsley","2020-07-21 18:17:32","false","Update logo.sketch",11,10,0
"TanStack/query","ea80700c2c8d48c6d0cb4ae0165a424ebea5d35c","TkDodo","2022-09-10 10:06:42","true","feat: ESM support (#4092)

* fix: restore missing `exports` declarations (#3892)

* fix: restore missing `exports` declarations

* fix: restore package.json exports[C

* fix: reexport types used by vue-query

* fix: react-native uSES usage

* fix: emit mjs for esm

* fix: uSES build

* fix: devtools exports to allow devtools in prod

* fix: cjs and esm build bundled to lib dir

* fix: sideEffect in react-query, better files paths

* fix: generate declarations to lib

* fix: lint and tests

* fix: use the same ts build method for tests

* fix: change force prod import

* fix: subpackage dependencies (#4013)

* fix: umd-build (#3924)

* - Fix UMD build getting overwritten
- Updating ""browser"" field for @tanstack/react-query-devtools

* Updating the ""browser"" field to be the same as ""main""

* release: v4.0.11-beta.0

* release: v4.0.11-beta.1

* fix(react-query-devtools): cjs devtools fallback (#4048)

* release: v4.0.11-beta.2

* fix: remove browser entry, fix umd size (#4044)

* fix: remove browser entry, fix umd size

* fix: bundle query-core with react-query for umd

* fix: remove missed browser entry

* chore: remove 'browser' field from package validation

because it doesn't exist anymore

* release: v4.0.11-beta.3

* release: v4.0.11-beta.4

* chore: react-query should be a peerDependency of the devtools

* release: v4.0.11-beta.5

* release: v4.3.0-beta.0

* fix: webpack 4 fallback to cjs (#4069)

* fix: publish script shouldn't check against module anymore

* fix: publish script

I don't think we can have single quotes in commit message when passing them to --notes

* release: v4.3.0-beta.2

* release: v4.3.0-beta.3

* fix: umd build size, force prod devtools (#4074)

* fix: umd build size

* fix: devtools force production

* release: v4.3.0-beta.4

* release: v4.3.0-beta.5

* fix: reintroduce production export (#4090)

* release: v4.3.0-beta.6

* fix(react-query-devtools): always useEffect for the mounted check

no effect runs on the server, and there is no real advantage to useLayoutEffect on the client; somehow, this dynamic check creates problems with the production build of the devtools

* release: v4.3.0-beta.7

* docs: document devtools in production

* docs: document devtools in production

* docs: document devtools in production

nodenext needs 4.7

* fix: support react-native (#4125)

* fix: support react-native

* chore: remove banner from build

Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>
Co-authored-by: John Daly <john.daly2@gmail.com>
Co-authored-by: Tanner Linsley <tannerlinsley@users.noreply.github.com>",20,36,1
"TanStack/query","09116e54b98f5f15fd6777fb26a3d735573a2e4a","TkDodo","2021-05-07 16:04:03","true","feat(queryClient): add setQueriesData utility (#2204)

* feat(queryClient): add setQueriesData utility

a function which can be used to fuzzily set queryData for multiple queries

* feat(queryClient): add setQueriesData utility

docs

* feat(queryClient): add setQueriesData utility

improve docs

* feat(queryClient): add setQueriesData utility

wrap setQueriesData in notifyManager.batch to avoid unnecessary re-renders",34,20,0
"TanStack/query","d0c0d28349664db6c4341de3ccbb76e8c3e7d716","kuldeepkeshwar","2019-11-29 22:25:00","false","set-up size-plugin-bot 🤖 (#56)

* setup size-plugin-bot

* update rollup-plugin-size version

* add build script to travis config",4,3,0
"TanStack/query","dfad1cf19242189bc1fdb1b30e64b2de72e89ca1","heloineto","2023-09-05 12:14:03","true","docs: fix typo in optimistic-updates.md (#5960)",13,48,1
"TanStack/query","fe67cb72bcb7f47cbc9fcb70a6d2b279352a9f76","DamianOsipiuk","2022-10-30 22:38:20","true","fix: unwrap queryKey in queryFn for overloads (#4410)",16,38,1
"TanStack/query","28928133266c1315b89f0582ca1964fca2220041","tannerlinsley","2023-05-22 19:51:05","false","release: v4.29.9",24,44,1
"TanStack/query","17afa9b787a660fd92ccb52cfdc0a45f4bf03f43","ardeora","2023-01-01 15:50:37","true","(fix: solid-query): Revert breaking build (#4733)

This is in reference to the breaking build in solid-query.
Because client Context value is never passed into the provider
RELEASE_ALL",35,40,1
"TanStack/query","316bce50f55c200e034923708dbc7df7e5aa9c23","Krisztiaan","2020-07-15 01:41:12","true","fix(types): make options undefinable (#752)

better composition support",10,10,0
"TanStack/query","e5a7cf805f8e70734da0dd43480cc795d3486065","Juneezee","2023-02-18 20:52:48","true","docs: fix invalid React Router comparison link (#5000)

At the time of making this commit, React Router still does not have an
offical comparison page in their docs.

Reference: https://reactrouter.com/en/6.8.1

Signed-off-by: Eng Zer Jun <engzerjun@gmail.com>",30,41,1
"TanStack/query","380a049bf054cabc15f64a0d337cb1545f2fa5ee","boschni","2020-09-13 14:55:05","true","refactor: remove query status bools (#1009)",10,12,0
"TanStack/query","79166485d4c852c7f71b7ab2e285c84115caf4d4","tannerlinsley","2020-07-08 06:32:50","false","docs: better basic example",7,10,0
"TanStack/query","53d2d6922844168ca880b5f8f4a5ce9473421bee","tannerlinsley","2023-07-29 08:56:44","false","release: v5.0.0-beta.7",19,46,1
"TanStack/query","07c2a4f5b689925108f088ca29d6382660ec4ec8","MarceloAlves","2020-07-03 01:54:46","true","docs: update return for useQuery (#701)

* docs: update return for useQuery

* add in return example",2,10,0
"TanStack/query","f8278690a1e234bbfcf162a0c4f44cb40f1bd715","tannerlinsley","2020-07-08 20:15:05","false","docs: update sponsors",7,10,0
"TanStack/query","19e07237ce4630521a826eb350fc05893f866740","tannerlinsley","2021-02-16 06:38:42","true","fix: cross-module react query context (#1805)

* fix: cross-module react query context

* ditch the node types for simplicity and ignore `global` for now",13,17,0
"TanStack/query","2c36b6d9e9cdfcbcacff640e8782274c8e7f6e30","TkDodo","2021-11-12 21:11:12","true","fix(useQuery): don't throw error if errorBoundary has just been reset (#2935)

the fix for disabled queries was wrong, because disabled queries still need to throw if they are fetching due to some other means, like `refetch`. However, if a query has just been reset, we want to skip throwing for one render cycle. The useEffect that clears the reset will then make sure that further errors will be thrown",29,26,0
"TanStack/query","f7854e07d576bc353250a6683cd54e1f5382f114","citypaul","2021-09-23 11:05:50","true","docs(devTools): Clarify node env logic for devtools (#2711)

Clarify node env logic for devTools to make it clear that the environment should be set to 'development'",20,24,0
"TanStack/query","a76d1dfdc0a6d13ace169ce46ad8aef868ed4dd7","cherniavskii","2020-02-27 19:13:14","true","add test for useQuery in manual mode (#164)",1,5,0
"TanStack/query","587e6c6c97ee53f4d84d77698e827174eb629059","AminZibayi","2019-10-24 18:10:09","true","Fix Query Updates from Mutations Example",1,1,0
"TanStack/query","150da8a42e3084aa59d7f9d27f78c93febb1139c","Mini-ghost","2023-09-01 19:13:04","true","fix(vue-query): ensure the `queryFn` parameter has the correct type (#5935)

Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",12,48,1
"TanStack/query","29559b1a5ed500cc5c2676f033a3838d2a149955","Luccasoli","2021-06-17 08:59:19","true","docs: updating rtk-query links in Normalized Caching topic in the docs (#2378)",29,21,0
"TanStack/query","ef5125f68bc41c6c01219f7cb4b098b8d35a2045","manudeli","2023-09-05 13:35:34","true","docs: update suspensive-react-query.md (#5961)",13,48,1
"TanStack/query","2e9b42654165a88b42f68265d03cfdde231f3a46","tannerlinsley","2023-09-07 08:10:20","false","release: v4.35.1",15,48,1
"TanStack/query","365af2908dcf6eaef4bd53dd79bdaeed707862eb","tannerlinsley","2020-08-24 21:11:07","false","docs: refactor comparison",11,11,0
"TanStack/query","fb596eadf9150532729f7343ab8a8c0143d4a6a8","tannerlinsley","2020-11-06 18:36:39","false","docs: update sponsors",7,14,0
"TanStack/query","f731e72873d361790d87e6412aa2d23055bd6ffa","tannerlinsley","2019-09-23 01:08:35","true","Merge pull request #1 from tannerlinsley/dependabot/npm_and_yarn/eslint-utils-1.4.2

Bump eslint-utils from 1.3.1 to 1.4.2",1,0,0
"TanStack/query","bc22de055ee840b8a62447a1a36128d95341913d","tannerlinsley","2020-07-21 18:17:35","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",11,10,0
"TanStack/query","cebdb2cd1a74f4a5f852a96009d191212ca07a29","tannerlinsley","2022-07-18 22:34:15","false","release: v4.0.1",24,34,1
"TanStack/query","c989bde9e13a59a58428ea6dde9d958251cc09d5","arnaudbzn","2021-11-07 12:01:37","true","test(core): improve code coverage (#2876)

* test(InfiniteQueryObserver): should error if queryFn not defined

* test(InfiniteQueryObserver):  should not refetch the first page if refetch another page

* fix(logger): logger is always defined with the console

* test(InfiniteQueryBehavior): move new tests to InfiniteQueryBehavior

* test(QueryCache): add and remove tests

* test(QueryCache): add find with filters.exact defined

fix test.only on previous commit too.

* test(QueryCache): return all queries when no filters are set

fix: comparison in find(); filters object is always defined but could be empty.

* test(mutationObserver): add onUnsubscribe and notify tests

notify: there is no use case in the lib with listeners set to false.

* test(queriesObserver): should not destroy the observer if there is still a subscription

* test(queriesObserver): onUpdate should not update the result for an unknown observer

No onUpdate use case has been found with a possible unknown observer.

* test(queryObserver): the retrier should not throw an error when reject if the retrier is already resolved

* test(InfiniteQueryBehavior): add signal support

* test(hydration): dehydrateQueries false, mutation state pause, hydratedState empty

* test(focusManager): add full coverage tests

* test(query): should set default options

* test(query): should refetch the observer when online method is called

* test(query: should not add an existing observer

* test(query): should not try to remove an observer that does not exist

* test(query): should not dispatch on invalidate if already invalidated

* test(query): reducer should return the state for an unknown action type

Typescript made this case not possible.

* test(query): fetch should not dispatch fetch if meta has not changed

* test(queryClient): setQueryData should use prev data if isDataEqual fct is true

* test(queryClient): setQueryData should set the new data without comparison if structuralSharing is set to false

move related tests into 'setQueryData' test suite

* test(query): fetch should not set the signal  if AbortController is undefined

* test(query): fetch should throw an error if the queryFn is not defined

* test(query): fetch should dispatch fetch if is fetching and current promise is undefined

* test(query): constructor should call initialDataUpdatedAt if defined as a function

* test(queryObserver): should throw an error if enabled option type is not valid

* test(queryObserver): getCurrentQuery should return the current query

* test(queryObserver): should throw an error if throwOnError option is true

* test(queryObserver): should not refetch in background if refetchIntervalInBackground is false

* test(queryObserver): should not use replaceEqualDeep for select value when structuralSharing option is true

* test(queryObserver): add placeholderdata related tests

* fix(queryObserver): shouldNotifyListeners: remove useless condition

updateResult function already check the result with shallowEqualObjects

* test(queryObserver): updateResult should not notify cache listeners if cache option is false

* test(queryObserver): add stale timeout notify test

* test(mutation): setState should update the mutation state

setState is not used in the lib, need to force the usage in the test

* test(mutation): addObserver should not add an existing observer

No use case found, need to use the private method for the test.

* Revert ""test(mutation): addObserver should not add an existing observer""

This reverts commit 3643be951806d1d242a2e9ac46cc2ff803c54f5d.

* test(mutation): addObserver should not add an existing observer

* test(mutation): executeMutation should throw an error if no mutationFn found

* test(mutation): cancel mutation should not call mutationFn if the current retrier is undefined

Force retryer to undefined because no use case has been found.

* Revert ""fix(logger): logger is always defined with the console""

This reverts commit dd64fda0765e94704a9f33669992be969538deac.

* test(mutation): reducer should return the state for an unknown action type

* test(onlineManager): isOnline: add navigator related tests

* test(onlineManager): setEventListener should use online boolean arg

* test(onlineManager): add setEventListener tests

* test(notifyManager): add notifyFn and batchNotifyFn tests

Add a notifyManagerTest singleton because jest.setup.js override notifyFn value.

* test(queryClient): add focusManager and onlineManager related test

* test(queryClient): cancelQueries should not revert if revert is false

* test(queryClient): refetchQueries should throw if throwOnError is true

* test(queryClient): add cancelMutations test

* test(queryClient): should get defaultOptions

* test(queryClient): should update existing query defaults

* test(queryClient): setMutationDefaults should update existing mutation defaults

* test(utils): parseMutationArgs should return mutation options

* test(utils): matchMutation should return false if mutationKey options is undefined

* test(utils): isPlainObject add tests

* test(core): use @ts-expect-error instead of @ts-ignore when possible

* test(core): export NotifyManager for testing purposes

* test(queryObserver): fix test comment",16,26,0
"TanStack/query","ce7acd0cc6b37c15bc5af3765dd8da645ed63bcf","boschni","2020-09-06 18:06:56","true","fix: export hydration types (#974)",9,12,0
"TanStack/query","511f24707e10f83b33671e2d0201e0ad583d25bd","judicaelandria","2023-09-18 19:46:21","true","fix(devtools): fix restore/trigger loading condition (#6010)

* feat(devtools): fix restore/trigger loading cond

* fix eslint

* use queryStatus for the trigger loading state

* disable trigger error while state loading

* disable invalidate and reset on status pending

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",12,48,1
"TanStack/query","607a6c31e8af3aacd57050fca2f0428e712ed088","TkDodo","2022-08-28 06:28:45","false","chore(publish): do not release without changed packages

we might have commits in files that are not in the src directory; this will right now create a tag, but there will be nothing published to npm; early exit stops creating the tag.",21,35,1
"TanStack/query","6cd1566f6c53671652c728012e2825fb9c724356","TkDodo","2023-10-17 12:34:51","false","chore: post release cleanup",6,49,1
"TanStack/query","3e1f3ce412af007066efbc41678d2e72c9e5d325","manudeli","2023-09-25 07:03:59","true","test(types): replace expectType to vitest's expectTypeOf (#6048)

* refactor: replace expectType to vitest's expectTypeOf

* chore: update as prettier

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",9,48,1
"TanStack/query","7aadd6896dd8a36e3f4ff8e7153a080528807d03","TkDodo","2021-09-18 21:02:36","true","fix(types): exclude queryKey / queryFn from options if they have been provided as a separate argument (#2689)",25,24,0
"TanStack/query","8f6bdf3ec7f087e8d9ba9ef089e95ce2b41f8d40","tannerlinsley","2020-08-24 21:33:33","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",11,11,0
"TanStack/query","12ef20032d1e09281574ec142e592de1800b5ec0","tannerlinsley","2020-04-18 16:09:28","false","Remove Jump2Header",2,7,0
"TanStack/query","28a96c772e6ea0f0be266b1e4b231b2647e93702","CertainlyAria","2023-06-18 16:33:00","true","docs(useMutation): fix incorrect `mutationKey` types (#5602)",23,45,1
"TanStack/query","409a684534cb9b2a4fcbee910e3af8ffd430ce83","tannerlinsley","2022-11-13 07:59:54","false","release: v4.16.0",17,38,1
"TanStack/query","97d9c131b5b656de53cd46a4e65a1224e95d6d83","tannerlinsley","2022-11-05 18:39:07","false","release: v4.14.4",14,38,1
"TanStack/query","2e6dab1c485edd9505387949aa7a3d61652267d5","zorzysty","2022-11-02 10:04:26","true","test: stabilize another batch of flaky tests (#4428)

* test: stabilize test for selecting a part of the data with select

* test: stabilize test for resolving promises after reconnect

* test: stabilize test for throwing a CancelledError when a paused query is cancelled

* test: stabilize test for selecting a part of the data with select (object syntax)

* test: stabilize test for cancelling query when there are no more subscriptions

* test: apply formatting",15,38,1
"TanStack/query","f9b5cc5253ec922a5805f48745b24ae0e46a4ca5","zorzysty","2022-10-12 17:35:51","true","docs(examples): upgrade vite-plugin-solid to latest version to fix runtime issue in examples (#4311)",17,37,1
"TanStack/query","52acd7892969fc726f10d4141f63ee7f0c6ae4c2","tannerlinsley","2022-08-12 07:33:34","false","release: v4.1.1",32,35,1
"TanStack/query","b9690d4efbddb9a0c62d535a08accba73fd3d98f","tannerlinsley","2020-06-10 16:48:54","true","fix: force patch release",17,9,0
"TanStack/query","a3dc28a638ca12cc1abad43d898594d1bebab5f9","tannerlinsley","2020-03-17 21:35:19","false","Fix #237",9,6,0
"TanStack/query","8d2212188310258a68d4963faf19f81b8f4727bc","vankhoawin","2020-02-21 13:34:57","true","revise typo (#132)",5,5,0
"TanStack/query","dd5b64a9cfb5ca217f80b36b52b6daa9eb75e802","samuraijane","2023-05-26 15:07:24","true","docs: Update useQuery.md (#5454)

This commit puts keys in alpha order and adds one that was not included previously, `errorUpdateCount`.",25,44,1
"TanStack/query","5d0ce9e111cd2fb77ada0d0d6490bf26084baf48","Joehoel","2022-09-26 15:41:12","true","docs: correct imports for 'refetch on app focus' (#4223)",16,37,1
"TanStack/query","00b696801e81217181645f8edb41a15e94187106","cherniavskii","2019-11-12 21:48:30","false","delete all queries when clearing query cache (#31)",2,2,0
"TanStack/query","827d5bc38ace9253107ec6928996455c8add0c82","killerchip","2020-05-09 16:20:41","true","fix(queryCache): allow throwOnError prefetchQuery option in typescript (#467)",15,8,0
"TanStack/query","de937e7f4b74785f739cd2089808f96fe66cb63c","SamTLT","2022-07-20 13:47:09","true","docs: Change Query Keys Url (#3878)

* Change Query Keys Url

Current url doesn't work. Replaced it with working one.

* Update docs/guides/query-functions.md

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",24,34,1
"TanStack/query","cb15a2abdfec9f4425c39751d637913e647a6b76","ardeora","2023-09-19 13:56:49","true","fix(query-devtools): Fix styling issues in devtool (#6032)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",11,48,1
"TanStack/query","5188ae3f953a9b1100d87a10dbfd5b95a7200553","Juneezee","2023-05-27 08:46:14","true","refactor(query-core): replace `indexOf` with `includes` (#5431)

This commit replaces the use of `.indexOf` with `.includes` for cases
where the method is used to check if an array contains a particular
element. This results in improved code readability and better adherence
to modern JavaScript best practices.

The replaced code snippets include:

	- `.indexOf(...) === -1`
	- `.indexOf(...) !== -1`

Signed-off-by: Eng Zer Jun <engzerjun@gmail.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",22,44,1
"TanStack/query","5848fab8a560efcf66ef0062c207c3004bccad83","himankpathak","2022-05-08 07:54:04","true","feat(devtools): the react query logo can now close the devtools (#3577)

* feat(devtools): update react query logo to close devtools

added button wrapper on react query logo which onClick closes devtools window

closes #3067

* feat(devtools): update test case for open and close devtools",22,32,0
"TanStack/query","142b995ea451eba661e7a28f943d91984db61f3c","akkisagiraju","2020-07-15 09:39:59","true","docs: add missing options in useQuery's api reference (#753)

useQuery's API reference code is missing these while they are in the options below it - refetchIntervalInBackground, initialData, initialStale,",10,10,0
"TanStack/query","8103d9675e96a8af6acac060de1ac22bce500574","tannerlinsley","2020-12-14 06:28:19","false","docs: update home page",8,15,0
"TanStack/query","4585412cde065f2ac3df256dbb65f7cb3ce4c712","tannerlinsley","2022-07-18 22:49:20","false","fix: force release

RELEASE_ALL",24,34,1
"TanStack/query","b8106866fe1e671e364ea1fa5140dd214fe48da6","bdrazen","2020-04-14 00:47:39","true","accept infinite cacheTime (#349)",1,7,0
"TanStack/query","a29f1a608f624d5c7e74263f2c440cf3b2fccba8","TkDodo","2023-10-01 10:13:45","true","fix(hydration): do not alter fetchStatus when hydrating existing queries (#6088)",9,49,1
"TanStack/query","ce7e940f3ba9f21d804567e61a546e4f26b84284","tannerlinsley","2019-11-04 21:39:48","true","Create FUNDING.yml",0,2,0
"TanStack/query","0cdb2005911f6c3ad155bbb90fd6e9fd7b08db0c","tannerlinsley","2019-11-04 05:47:24","false","0.0.13",0,2,0
"TanStack/query","de4e2ea694fd42cdbb32ca71a02147f1ce03d520","bastibuck","2023-10-18 19:49:19","true","fix(react-query-devtools): prod devtools exports (#6180)

* fix: fix devtools prod exports

* chore: update devtools prod docs",9,49,1
"TanStack/query","3f057a24778c15c55665d11fc8415200a20e4840","TkDodo","2023-09-12 08:46:53","true","feat(types): validate queryOptions (#5991)

* feat: validate queryOptions

* chore: ""disable"" test because of upstream issue",17,48,1
"TanStack/query","c6594df7919014495b4ea9817d390387ea4bc1db","Liam-Tait","2022-03-15 12:02:54","true","refactor(devtools): add types to Explorer (#2949)

* refactor(devtools): add types to Explorer

Add types to Explorer component with as minimal functional changes as
possible while still getting type safety

2742

* remove unused set param from explorer toggle

* Wrap Explorer toggle with useCallback

* Rename Explorer toggle to toggleExpanded

* Remove unused path

* Move subEntryPages definition next to usage

* Set type to be a string instead of string union

* Remove unused depth prop

* Move chunkArrays to own tested function

* set handleEntry as required

* Add LabelButton for accesibility

* fix test

* Remove shadowing

* Set subEntries as empty array by default

* Add type for property

* Convert handleEntry function to react component with entry props

* Use unknown for value

* Set RenderProps to required where possible

* Add required attributes to Explorer tests",19,30,0
"TanStack/query","abd93c2f46f6c26ae120df38f5a63d1abdf4cca8","TkDodo","2023-09-15 14:42:51","true","test: nextjs integration (#6014)",18,48,1
"TanStack/query","99e029994622f7ec2299579125c541b1b36b775a","LookRain","2020-03-02 04:22:08","true","Add missing axios dependency used by queries.js (#181)",1,6,0
"TanStack/query","836092352dffd9eca9555bbcea79fbf55f392565","bdrazen","2020-04-14 03:36:29","true","add cacheTime: Infinity to docs (#350)",1,7,0
"TanStack/query","18ba7c0c3f506773371844407a6bb0f5a69eb955","meatnordrink","2023-07-17 13:18:04","true","docs(query-keys): clarify query key refetching (#5653)

* docs(query-keys): clarify query key refetching 

Update the query-key documentation to note that changing data included in a query key will automatically refetch the query data.

It took me a long time to find this information, and I expected to find it here. I consulted with another engineer on our team, and they agreed that they would expect to see it stated more clearly here. So we felt this addition would be helpful.

* Update docs/react/guides/query-keys.md

* Update docs/react/guides/query-keys.md

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",26,46,1
"TanStack/query","7f3569303cf185e638858f2cfa35358c43fb5f88","tannerlinsley","2020-10-12 02:52:44","false","docs: update sponsors",6,13,0
"TanStack/query","3073ddd31da0a1f740f00127f3a433b827a007a6","tannerlinsley","2020-10-12 02:19:26","false","docs(examples): fix sandbox version",6,13,0
"TanStack/query","45371c9571d83e86268ee2b7e68c2cd100e80af2","tannerlinsley","2020-09-25 17:15:31","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",6,12,0
"TanStack/query","6864624b2f38d74d704dd7c4d7ca9cf5216ccecb","strdr4605","2020-09-03 20:07:08","true","docs(react-native): add solution for fullscreen error (#958)",7,12,0
"TanStack/query","6b65427794b971ec31b4d0d2298b985c7501ff7e","tannerlinsley","2020-06-17 02:11:44","true","Update test-and-publish.yml",12,9,0
"TanStack/query","d99bfa76615f8f51b78630611bb573c8db958140","tannerlinsley","2020-05-05 18:13:44","false","chore: Change version to 0.0.0",11,8,0
"TanStack/query","66662a4c5f9a2aaf6bf31068bd9b50fd486ed6d4","juanprq","2020-04-13 04:53:11","true","fix missing dependency in an example (#343)

The focus-refetching example is missing the axios dependency in the
package.json, if we run the example locally there isn't any problem, but
if we use the codesandbox documentation link, the example is showing a
  problem with the missing dependency.",4,7,0
"TanStack/query","93b423b1c8a842cd9690b4ec5bc64324bc62c084","alexeyraspopov","2020-03-02 19:50:00","true","use reduce() instead of filter().length (#188)",0,6,0
"TanStack/query","bfca6122ee394a5425b5c0edaacb58ed97959bf2","vankhoawin","2020-02-17 20:29:14","true","reset error state when calling useMutation's `reset` (#130)

* reset error state when executing useMutation's reset

* update README and CHANGELOG",3,5,0
"TanStack/query","e68de6a68a05a49cdec6dea79917e001e18a22e1","bennettdams","2023-10-18 06:30:38","true","docs(useMutationState): Clarify `mutationKey` usage (#6168)

This adds a mutation to the examples to (hopefully) clarify how to use the `mutationKey` for referencing the mutation state.",6,49,1
"TanStack/query","e16f3dd12fd0bac660ece155c30f9ff87480e6bc","evanfreeze","2020-09-24 16:36:24","true","docs: fix typo (#1092)",6,12,0
"TanStack/query","2249abfaac3d8cf19a14bc6645a96a8c384c1354","boschni","2020-12-19 16:09:22","true","fix: make sure queries are retried after an error boundary reset (#1489)",9,15,0
"TanStack/query","510619ce7bfb14e06a778b6648a5086c0069f429","frontendwizard","2020-09-17 21:56:36","true","docs: remove trailing quotes from supporters links (#1045)

The quotes were breaking the links.",11,12,0
"TanStack/query","5b690c0a6678ec6adce62056114d4aee276093b9","tannerlinsley","2022-06-24 14:31:23","false","docs: fix examples",25,33,0
"TanStack/query","744e5eadd40c1c27cbf7af32889cf03d01e1fccf","lachlancollins","2023-09-01 00:00:02","true","chore: Update Nx dependencies (#5941)",13,48,1
"TanStack/query","598ea39a39aa457572caa587462aedda9400c65e","mdawar","2020-09-17 14:23:25","true","Remove storing the return value of queryCache.removeQueries (#1038)

Removed storing the return value of `queryCache.removeQueries` as it doesn't return anything.",13,12,0
"TanStack/query","b5969682f5cb3a8e6b3b801b8c79a70a97a4603b","tannerlinsley","2019-11-04 05:51:55","false","Fix force refetch",0,2,0
"TanStack/query","53d4dc3440941cfa0257862eed87e6c3f02f0805","0xflotus","2019-11-06 12:48:17","false","fixed small error (#13)",1,2,0
"TanStack/query","e97a9a5b7ed0cc1a9de28230f23934b0da420715","nicholasgriffintn","2022-08-26 09:45:29","true","fix(react-query-devtools): Adding screenreader text to the DevTools open icon (#4063)",20,35,1
"TanStack/query","11fe5311edb3f834d593b10fc33b2dd1a5da7113","tannerlinsley","2020-02-27 14:26:02","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",3,5,0
"TanStack/query","4bdddf45fa254a51e754ed411b7ecf6e70ee26b6","tannerlinsley","2023-02-14 20:41:30","false","release: v4.24.8",30,41,1
"TanStack/query","dbd3ed9391aa9f5a1bebe4966ed79b8e9add5ade","tannerlinsley","2019-11-03 18:15:27","true","Update README.md",0,2,0
"TanStack/query","849967ee80a8f9d96e98c6628b089d71c2fcf93a","tannerlinsley","2023-08-19 19:06:24","false","release: v4.33.1",22,47,1
"TanStack/query","9e47882482f5af58eecabb7d3312d5f179ebf487","tannerlinsley","2022-07-21 09:57:25","false","release: v4.0.10",24,34,1
"TanStack/query","d5501ad01753ed807752398fbfa4b1ca7f595a51","tannerlinsley","2022-12-14 07:14:19","false","release: v4.20.1",16,39,1
"TanStack/query","76bba6320c7c04869ea35c9e0a34cb4cf308bc3e","tannerlinsley","2022-11-01 14:06:14","false","release: v4.14.2",14,38,1
"TanStack/query","44262d067c7f973b60fcb250c875336121a9ae6b","zorzysty","2022-09-24 18:35:38","true","fix(devtools): prevent devtools explorer from collapsing when data is being fetched (#4214)",18,36,1
"TanStack/query","7797fe261ffbe716b3abf7a70f31779010b20685","omidnikrah","2021-03-23 20:12:04","true","docs: add missing comma (#2005)",31,18,0
"TanStack/query","e3740ed4d37cab515313d73f9fab61baeb1d5872","tannerlinsley","2020-07-24 04:06:06","true","Update comparison.md",10,10,0
"TanStack/query","8b9fb26b90a022f328f09a495d9045d8c8cda462","tannerlinsley","2020-03-13 19:40:23","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",3,6,0
"TanStack/query","c08eaf9b2566b3ee5bc7968c7c665ce7892535e2","tannerlinsley","2020-07-08 14:57:48","false","docs: remove log",7,10,0
"TanStack/query","015abed3b2f97cc17646c5ea6128d6970a619f66","tannerlinsley","2023-07-25 07:53:10","false","release: v5.0.0-beta.2",24,46,1
"TanStack/query","11023f96022840c319236d19ae623711ed97b727","tannerlinsley","2020-09-17 13:58:24","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",13,12,0
"TanStack/query","9b48048a61bfc50483e4a7e16fa28ac23626896d","tannerlinsley","2023-06-27 13:08:12","false","release: v4.29.19",23,45,1
"TanStack/query","8470092fc2201d7b3fc65fb989ab788945c59b3d","tannerlinsley","2020-08-31 21:33:11","false","tests: fix setTimeout for ci tests",10,12,0
"TanStack/query","2deb1154b7a08ccd83f0369a2da48bf15827409e","tannerlinsley","2020-12-22 19:30:33","false","docs: update example deps",10,15,0
"TanStack/query","0c276467ad0ebcfff105647429cb9d1333784174","tannerlinsley","2022-09-10 10:22:51","false","release: v4.3.1",19,36,1
"TanStack/query","b97cd504321ed2c717168e9114f14a67d5e05050","prateek3255","2023-04-28 15:05:45","true","fix(devtools): Fix restore loading not working when clicked repeatedly (#5311)

* :bug: Fix restore loading not working when clicked repeatedly

* ✅ Add test for restore loading

* 🚨 Fix formatting issues

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",24,43,1
"TanStack/query","1436140d248746ed20d3eb642451793b07e4eb02","kuldeepkeshwar","2019-12-02 05:35:20","false","Prevent manually updating sizes-*.json (#58)

* setup size-plugin-bot

* update rollup-plugin-size version

* add build script to travis config

* avoid updating size*.json on local build

* Update .travis.yml

* add check to write file(sizes*.json) in CI

* Update .travis.yml",2,3,0
"TanStack/query","8f468aa1b999cba736578b817b9f8bb9c7404151","cylim","2023-04-28 07:49:30","true","docs: Fix typo on persistQueryClient (#5332)",20,43,1
"TanStack/query","5b92682b8b0ff459e6303b3209ee176a2d7888ad","Newbie012","2023-02-23 05:58:19","true","fix(eslint-plugin): handle new & as const (#5025)",29,41,1
"TanStack/query","a81da978902a02381c899f3521f66ca37367b613","tannerlinsley","2023-03-05 07:17:31","false","release: v4.26.0",30,42,1
"TanStack/query","15b9c9b3be1fac4c7934ed7cd1fd3fb2ce7eab32","tannerlinsley","2020-07-28 16:03:40","false","docs: add course banner",11,10,0
"TanStack/query","119fe8cf3ce33995cd8edd8f6bb0c57c6f0dec6b","raoufswe","2020-07-10 17:55:41","true","docs: docsearch is rendered twice with keyboard shortcuts (#733)

* fix: docsearch is rendered twice with keyboard shortcuts

* fix: docsearch is rendered twice with keyboard shortcuts in small screens",8,10,0
"TanStack/query","48aeb376146dda1683487ec496a31dd88deb7beb","tannerlinsley","2020-02-18 00:15:40","false","Update CHANGELOG.md",3,5,0
"TanStack/query","c4bcdac16b0daf19994e055ddd562e89523d3d6e","tannerlinsley","2020-02-17 06:03:08","false","Added useErrorBoundary and throwOnError options",5,5,0
"TanStack/query","607425e37578dd432a822bedc89e3193d48e1a70","boschni","2020-09-16 14:52:13","true","docs: remove shared config (#1021)",12,12,0
"TanStack/query","02ecf4bdee480477af872d785448878fa8bfc39f","tannerlinsley","2020-03-11 17:08:35","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,6,0
"TanStack/query","ebe03b664b66eb603f6a80b45db6b245c1a5ec9f","tannerlinsley","2023-08-01 21:25:48","false","release: v4.32.4",18,47,1
"TanStack/query","1c2171755ba835b3fac603228ff64436fff9c28d","frassinier","2023-08-31 12:54:33","true","doc(react-query): useInifiniteQuery fetching state and fetchNextPage … (#5933)

* doc(react-query): useInifiniteQuery fetching state and fetchNextPage guidance

* Correct sentence",13,48,1
"TanStack/query","f9077bcb2c29952a3a142a870bdde3478f0952f3","Calvein","2021-12-14 19:05:53","true","docs: Add cacheTime default (#3094)",20,27,0
"TanStack/query","c6906b3c4d3fd73900610a0b452a17f2eb63518f","alecf","2021-11-24 19:07:44","true","fix(useQueries): add useMemo to useQueries to keep result stable (#2992)",20,26,0
"TanStack/query","e12d0022c9d7108e9a652482eb0a62a6f989c764","boschni","2020-08-31 22:11:55","true","fix: always use config from last query execution (#942)",10,12,0
"TanStack/query","20507737119e7d785c42c36f32f4d774addd892b","Ephem","2021-04-14 11:03:02","true","fix(hydration): import useQueryClient directly from react-query (#2121)",26,19,0
"TanStack/query","6e238afae67f7e9a8fee032f5d31598cda1799a3","Ephem","2023-09-26 08:15:28","true","docs: SSR rewrite (#5966)

* docs(react-query): add Request Waterfalls guide

Also includes initial scaffold for new prefetch/SSR docs structure

* docs(react-query): update prefetching guide

* docs(migration-guide): add more hydration api changes to migration guide

* docs(prefetching): polish prefetching docs

* docs(react-query): rewrite ssr doc page

* docs(react-query): add advanced server rendering guide

* docs(react-query): add clarifications to ssr docs

* docs(react-query): add note about Suspense for streaming ssr plugin

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",9,49,1
"TanStack/query","35539bf34f4e623c9ad70bbcd3d01e1f837bfa63","TkDodo","2023-09-16 13:27:29","false","Merge branch 'main' into beta

# Conflicts:
#	docs/config.json
#	docs/react/guides/queries.md
#	docs/react/typescript.md
#	docs/vue/typescript.md
#	examples/vue/dependent-queries/src/Post.vue
#	package.json
#	packages/eslint-plugin-query/package.json
#	packages/query-async-storage-persister/package.json
#	packages/query-broadcast-client-experimental/package.json
#	packages/query-core/package.json
#	packages/query-core/src/index.ts
#	packages/query-core/src/query.ts
#	packages/query-core/src/types.ts
#	packages/query-persist-client-core/package.json
#	packages/query-sync-storage-persister/package.json
#	packages/react-query-devtools/package.json
#	packages/react-query-persist-client/package.json
#	packages/react-query/package.json
#	packages/solid-query/package.json
#	packages/svelte-query/package.json
#	packages/vue-query/package.json
#	packages/vue-query/src/__tests__/useQuery.test.ts
#	packages/vue-query/src/types.ts
#	packages/vue-query/src/useBaseQuery.ts
#	packages/vue-query/src/useInfiniteQuery.ts
#	packages/vue-query/src/useIsFetching.ts
#	packages/vue-query/src/useIsMutating.ts
#	packages/vue-query/src/useMutation.ts
#	packages/vue-query/src/useQueries.ts
#	packages/vue-query/src/useQuery.ts
#	packages/vue-query/src/useQueryClient.ts
#	pnpm-lock.yaml
#	scripts/config.ts",17,48,1
"TanStack/query","a44bddff69948d4d4cbe967f8aca7946dddffafc","tannerlinsley","2020-02-27 14:25:55","false","Update README.md",3,5,0
"TanStack/query","c2eca7efc652ef34d4b08389a6d101c590041020","tannerlinsley","2020-09-23 19:52:20","false","docs: update faq",8,12,0
"TanStack/query","afe45302e272ccdb3d00371c1caa9e5c399b20ec","tannerlinsley","2019-11-13 20:50:27","false","v0.3.10",2,2,0
"TanStack/query","d9803d4cc4b975f7929a8a603f8dd722ae7a1a40","tannerlinsley","2019-12-01 23:47:26","false","Delete .nvmrc",2,3,0
"TanStack/query","262f83f95941128bd09c0a3f060b5efad6412429","eluce2","2022-08-16 12:35:57","true","docs: spell fix (#4041)",20,35,1
"TanStack/query","cd2175eb94b3e6b7ce8a11fee2cb121b7cb22868","tannerlinsley","2019-11-06 14:34:41","false","Update README.md",1,2,0
"TanStack/query","b3c9ce877bc53870b1345a90045ae61b03b8c7e4","boschni","2020-09-02 12:45:22","true","feat: add notifyOnStatusChange flag (#840)",10,12,0
"TanStack/query","afc6a57ec3d45f605ac8d85c750b2aeb2abbde33","ErfanMirzapour","2021-05-11 07:46:12","true","docs(testing): Update example to v3 (#2265)",26,20,0
"TanStack/query","0d976fbb5c38fb556570b6922d9e155d4fe3b7ee","fobos531","2022-09-24 10:13:10","true","feat(query-core): log queryKey when queryFn returns undefined (#4213)

* feat(query-core): log queryKey in createRetryer

in cases where the onSuccess callback fails, this logs the affected queryKey for easier troubleshooting

* chore: use queryHash instead of queryKey

* chore(query-core): fix wording, amend tests",17,36,1
"TanStack/query","3816c9d4d39bdd44edc5e73561e583c362a3c678","Andarist","2023-05-14 14:04:41","true","fix(perf): optimized perf of listeners removal (#5402)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",25,44,1
"TanStack/query","171628699cff8e6bbfa5d31bc3d1ccb11ff9e12f","rodrigofuentes","2020-09-25 04:30:18","true","docs(installation): Add missing links (#1094)",6,12,0
"TanStack/query","f0870bbd5ae70764c204b22fbf54dd5599a89fe8","Shaddix","2022-08-20 09:19:15","true","docs: Update the docs for `loading` state of `status` field (#4057)

The current definition is incorrect, since `status` might be `loading` even if `isFetching` is false (e.g. when query is disabled)",24,35,1
"TanStack/query","3e1880fbb495934e42f6f367e9818babcce17ed0","kamranayub","2020-07-16 17:03:15","true","fix(types): pass TError down to CachedQueryState (#763)",8,10,0
"TanStack/query","3840f290a20cb671eb31930ae91925bc0b1f4878","nubpro","2021-02-02 18:30:43","true","docs: fix typo and links (#1683)

* docs(focusManager): typo

setFocsued -> setFocused

* docs(*): fix links

change #useInfiniteQuery to /reference/useInfiniteQuery
change #usequery to /reference/useQuery",29,17,0
"TanStack/query","4d1bd350ade95e568d41c75956d1707d1b0bd8e0","boschni","2020-09-18 14:01:34","true","fix: prevent bundlers from removing side effects (#1048)",16,12,0
"TanStack/query","2ecf24ddcd2330eff0776ddef3a8f3c7f885d4cd","tannerlinsley","2023-01-12 15:48:59","false","release: v4.22.2",34,40,1
"TanStack/query","bba8a19bbfaf161c011c629ab6632dad77c97f00","TkDodo","2022-09-28 16:30:55","false","chore: fix release

by adding jsonfile as dependency and re-adding fetch-depth:0",15,37,1
"TanStack/query","e6d70bd85d51724e8b943787894ccc05712e9dac","tannerlinsley","2020-06-11 21:14:06","false","Update issue templates",17,9,0
"TanStack/query","8b9f6cb8adba50ac87b5a1c342b6adaf3122f2ae","cherniavskii","2020-03-30 20:28:50","true","Update docs (#299)

* update retry option docs

* update staleTime option docs",2,7,0
"TanStack/query","5242eca79c9774956ffa740b3b522cd92f54cba5","tannerlinsley","2020-03-06 18:34:17","false","Update README.md",0,6,0
"TanStack/query","3cfd00c27aba79f684df4cd332cc5a08c40e2848","DamianOsipiuk","2022-12-19 10:14:43","true","docs: vue docs with refs and replacements of react docs (#4656)",17,39,1
"TanStack/query","7031167cb67cb49fae3864fe814048a41a7600b1","tannerlinsley","2020-05-03 05:07:30","true","Update README.md",8,8,0
"TanStack/query","c03e15971de8c967c2858bbffebef33f0ce30a69","manudeli","2023-10-20 09:09:58","true","docs(suspensive-react-query): update links (#6175)

* docs(suspensive-react-query): update link

* chore(suspensive-react-query): update doc to promote migrating @tanstack/react-query v4 to v5",12,49,1
"TanStack/query","b82f05e3028718f03eb132a4dd92dc3d7623f7b5","kalseefer","2022-12-14 18:56:06","true","refactor: disallow implicit returns (#4640)

close TanStack/query/issues/4607",16,39,1
"TanStack/query","318b3a5d99420afe16907acd2ed25692062d16c7","yialo","2023-05-22 11:01:48","true","docs: fix indentation in markdown list (#5444)",24,44,1
"TanStack/query","8292aae62fea1cd01d0821f0cadadd2c89d77182","CalebLovell","2021-02-11 12:57:19","true","docs: add default query function reference (#1747)

I was confused what that meant when I first started. Added a link to the end to help",18,17,0
"TanStack/query","f65623f18ecb5714632e5eb198013e8a379c7cc9","flextremedev","2021-02-11 13:38:01","true","docs: fix hook testing example (#1698)",18,17,0
"TanStack/query","7a9d2d080cb52cce9d7e59207ee6ae4807a3c700","DamianOsipiuk","2023-10-26 08:17:47","true","chore: add v4 branch to release scripts (#6247)",5,49,1
"TanStack/query","4853ace6e40637a1e850c67efd0cca2241ef7a80","tannerlinsley","2023-01-08 12:22:20","false","release: v4.21.0",36,40,1
"TanStack/query","2e331bfc7a0bc3b1cd436991afee8aa5616efabe","tannerlinsley","2022-12-15 22:58:34","false","release: v4.20.5",17,39,1
"TanStack/query","c3f9b1e3ab5de885d90501ec530f723cdfcc634e","DamianOsipiuk","2022-10-25 21:31:40","true","fix(vue-query): proper function types in MaybeRefDeep (#4382)",19,37,1
"TanStack/query","a6c20112ec38ae8383ff95309be7b533d72dde9b","tannerlinsley","2021-01-05 20:14:35","false","docs: update sponsor size",20,16,0
"TanStack/query","8582a9ad424b2e2ddd0975aea8dc661b44035556","JimmyMcBride","2020-10-08 23:21:01","true","docs: GQL Blog Example (#1144)

* added an example repo using React Query to manage the data comming from a GQL back end to serve content

* removed

* readded without .git",4,13,0
"TanStack/query","026b6472db8ac6ce429b8bebcd975a52a978e20b","tannerlinsley","2020-09-23 19:33:23","false","docs: update faq",8,12,0
"TanStack/query","bddf2b5228b186085f65fae48d60b5b2a6f71d39","tannerlinsley","2020-07-08 05:05:31","false","Update README.md",7,10,0
"TanStack/query","e167e8b5fa9056ae92e8cece3d17b90675fe9449","tannerlinsley","2020-07-01 22:44:21","false","fix: queries without a query key are not added to cache",2,10,0
"TanStack/query","2032924fbffbf937a49f7238d21b46b88c0088e1","MichaelDeBoey","2020-06-29 23:55:22","true","Update config.yml",4,10,0
"TanStack/query","4f56c31ba5bf898805fba4f48479ebc6a2b93ff6","tannerlinsley","2020-06-02 04:44:47","false","fix: useMutation does not await non-promise

Fixes #504",18,9,0
"TanStack/query","e4c415fd5c2596695265bf1b9f015495fa3f8e90","tannerlinsley","2020-04-01 16:16:46","false","Update README.md",0,7,0
"TanStack/query","6d64d55b1fed1299ae6c7280b037cc8b01f32a2c","tannerlinsley","2020-03-30 20:45:19","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,7,0
"TanStack/query","3cc1ed2eabd271f8fd5215e9a0c6794db281ebe8","tannerlinsley","2020-03-02 19:51:21","false","v1.0.10",0,6,0
"TanStack/query","9c721e548f500be924da8ef6da041a919f513140","lachlancollins","2023-07-16 04:51:42","true","refactor: Sort imports with eslint (#5634)",26,46,1
"TanStack/query","8b4e7bb48db0c38ce52e7908f53246b474407f6d","tannerlinsley","2020-09-24 14:11:04","false","docs: update refetching descriptions

Closes #1082",8,12,0
"TanStack/query","790927de58d0638f01d620829e9551e0fd8064dc","tannerlinsley","2020-12-20 14:42:58","true","feat: options.initialDataUpdatedAt (#1493)

* feat: options.initialDataUpdatedAt

* Update initial-query-data.md

* Update useQuery.test.tsx",10,15,0
"TanStack/query","820b4ffe0520606a3a6941d03820c737371650af","liaoliao666","2020-12-07 04:13:25","true","optimization(query): reduce unnecessary recursion (#1329)

* Only work once when forceFetchOnMount is ture or refetchOnMount is 'always'

* fixed(queryObserver): fetch data twice when mounted

* optimization(query): reduce unnecessary recursion",14,15,0
"TanStack/query","a745e13074cb86a3d3e6b2674668378b8bb29e9c","tannerlinsley","2023-08-01 19:23:13","false","release: v4.32.2",19,47,1
"TanStack/query","f82e6e0b40f76088e47579dbd4bea1f7fa5a33fe","tannerlinsley","2022-08-16 08:14:49","false","release: v4.1.4",21,35,1
"TanStack/query","b44c213b39a258486aff719ba87a5f7d8c57fab4","TkDodo","2022-02-20 13:09:43","true","fix(useQuery): pass query as second parameter to useErrorBoundary function(#2660)",21,29,0
"TanStack/query","8a8e3189ff1357766741f39a699027bd21abe677","tannerlinsley","2020-12-23 22:34:08","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",10,15,0
"TanStack/query","f844de8487139c106ed6e54aa423074ec3844068","tannerlinsley","2020-06-24 16:22:17","false","chore: update examples",3,9,0
"TanStack/query","129f8c9fad154bd16f6ab6d739592ea520c491b5","lachlancollins","2023-10-22 08:44:45","true","chore: Module resolution bundler (#6217)",8,49,1
"TanStack/query","cb22344d4a456684a4792536f3709f4fa04de8db","coryhouse","2021-10-04 05:13:31","true","docs: Grammar tweaks (#2761)",25,25,0
"TanStack/query","1d678adf4edaf30a1ef9a878db5ba00a8170f5f1","amitripshtos","2019-11-16 13:57:48","false","refetchAllQueries promises error would not be raised anymore (#37)

* refetchAllQueries promises error would not be raised without any handling anymore

* Catch promises errors of refetchAllQueries instead catching inside the method

* Remove not needed ; sign",2,2,0
"TanStack/query","71e73c42979e6ad20f0502708383043497a39c1a","apollge","2022-10-07 18:55:18","true","docs: productId to todoId (#4274)

Nothing fancy.",17,37,1
"TanStack/query","8a613165fc7dbc5213f61ad75f29ba54d248a0df","boschni","2021-02-14 15:26:25","false","fix: make sure suspense callbacks get correct data",14,17,0
"TanStack/query","77c160bed8738014e7b9e854277f5ac48af524f1","tannerlinsley","2020-08-13 20:42:57","false","docs: add scarf analytics to docs",9,11,0
"TanStack/query","9ef7fa1ae333a1349027977a3cb81cf8c3154f29","tannerlinsley","2020-03-06 18:02:27","false","Fix: infiniteQuery can now fetchMore in the middle of a normal background refetch",1,6,0
"TanStack/query","f46d37e3b79476a7efe83f2af03c645b541aacfc","tannerlinsley","2019-11-07 00:16:05","false","v0.3.1-alpha.1",1,2,0
"TanStack/query","4eae428bbe67b083d9eb294fa64580c2208417a0","tannerlinsley","2023-09-12 08:52:59","false","release: v5.0.0-beta.25",17,48,1
"TanStack/query","29e07837a093340c4ba9f8ed5b02c5f1fc0e621e","tannerlinsley","2020-03-04 17:19:18","false","Fix stale refetching and add back force option

Fixes #192",2,6,0
"TanStack/query","ca0fd8ff5134a8bcf61a51767d9593f6e0ca2f50","manudeli","2023-10-29 13:26:15","true","chore: update node in .codesandbox/ci.json (#6263)",4,50,1
"TanStack/query","a65e7f19dfadc52901e223f67112870effb53550","tannerlinsley","2023-04-15 09:11:12","false","release: v4.29.2",22,43,1
"TanStack/query","3c9df2028c447f19afd748ac55769143e62d3664","tannerlinsley","2022-12-13 19:35:29","false","release: v4.20.0",18,39,1
"TanStack/query","afbd6c73776ad2d68b6d5b64ce9888c85c745a90","bgaleotti","2022-10-13 04:58:33","true","docs: `pnpm` typo (#4314)",16,37,1
"TanStack/query","5350fb9511900507f820efc7d7d15a9a8a2d67bb","tannerlinsley","2020-12-14 16:11:05","true","docs: fix white space",10,15,0
"TanStack/query","46b02aae26c89b7c6ef40a1d5558045e4bcec485","tannerlinsley","2020-06-24 16:19:23","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",4,9,0
"TanStack/query","07daf3fc8a76633445133dcecf6a5c818751183a","tannerlinsley","2020-04-16 15:19:12","false","v1.2.6",2,7,0
"TanStack/query","d8172094420cff9684084b3743b3c588cae7c80e","tannerlinsley","2020-03-06 19:02:28","false","v1.0.21",0,6,0
"TanStack/query","b1b9ddc4961f029837ffc7b3c19af13ea3f040e1","tannerlinsley","2020-02-27 20:43:20","false","v1.0.5",1,5,0
"TanStack/query","2d5893871004880d0072f508d61bd6026864fe59","owinter86","2020-02-27 15:21:30","true","Stop auto fetch for manual useQuery option (#163)",2,5,0
"TanStack/query","1467ac14c5c0592f32284b22db70647d9316a091","cherniavskii","2020-04-20 17:43:20","true","add homepage to package.json (#383)",3,7,0
"TanStack/query","8a19f6cc23dc211c4146fc842a071a0b14bde615","cherniavskii","2020-04-20 17:29:34","true","Use jest node environment instead of mocking window object for SSR tests (#382)

* use jest node environment instead of mocking window object

* clear query cache after each test

* remove unnecessary test cleanup",3,7,0
"TanStack/query","7dfa58a76ad412a7d2185332f48f63082758e515","wolverineks","2020-07-14 06:22:54","true","docs: remove promise from useMutation (#747)

* fix(types): remove promise from useMutation

* docs: remote promise from useMutation",9,10,0
"TanStack/query","e152ea5c21afd22361761a21cedae579680e10b5","TkDodo","2022-11-01 10:54:49","true","docs: prefer object syntax in docs (#4409)

* docs: useQuery to object syntax

* docs: invalidateQueries to object syntax

* docs: useMutation to object syntax

* docs: infinite query and other references to object syntax",15,38,1
"TanStack/query","c807d91fe57aacc7379904089f3679823e7f0688","TkDodo","2023-02-26 10:07:22","false","chore: releases should run on alpha/beta as well",27,41,1
"TanStack/query","98c0803ff82d124d3f862ae8d207514480019d44","DamianOsipiuk","2023-08-30 21:56:18","true","docs(vue-query): fix migration guide link, add `injectionContext` section (#5936)",13,48,1
"TanStack/query","5275035e8ce5c4bcb1a32c26b0083b69a9c0f43d","tannerlinsley","2023-07-31 07:54:59","false","release: v5.0.0-beta.8",19,47,1
"TanStack/query","9009b0d4f174cf41df2127ae19619a171b8a9296","tannerlinsley","2022-11-13 19:04:23","false","release: v4.16.1",16,38,1
"TanStack/query","3c1959d4a8eefdd96d8c99f0c8f8948d8f90714e","tannerlinsley","2022-11-11 08:48:45","false","release: v4.14.6",20,38,1
"TanStack/query","6be0e383e898366ca9115054392a452f86a2813c","TkDodo","2022-10-13 17:15:29","true","feat(query-core): await global mutation cache callbacks (#4313)

* feat(query-core): await global mutation cache callbacks

global mutation cache callbacks are always invoked, just like the callbacks on useMutation; however, they were not awaited, so you couldn't really do invalidations in them

* feat(query-core): await global mutation cache callbacks

add tests

* docs: document global mutation callback changes",16,37,1
"TanStack/query","df598a7dad5db61752bab553110c9455b34d2fed","tannerlinsley","2022-10-12 11:21:37","false","release: v4.11.1",17,37,1
"TanStack/query","18af50da214f24394493a07af0e961e478b5a3e6","tannerlinsley","2022-08-11 18:21:27","false","release: v4.1.0",33,35,1
"TanStack/query","ca2a57aa4e89bfc8b8695c4223c5a477f2c8fa7c","marcalexiei","2021-12-23 09:07:53","true","fix(devtools): code  color is not inherited from panel color (#3115)",21,27,0
"TanStack/query","aafd2ccab246dbe06bdc1534e639f3c5cd0b5ace","tannerlinsley","2021-07-12 15:59:22","false","Update logo.sketch",29,22,0
"TanStack/query","4b1e7114ae181ed65a8b015da772821e46db8dff","prateek3255","2021-07-16 17:29:37","true","test(devtools): Add base tests for react-query devtools (#2433)

* test: Add base setup for devtools tests

Add the basic test for opening and closing devtools

* (test): ✅   Add tests for query states

* ✅   Add test for filtering and opening query details

* ✅   Add sorting tests

* ✅  Add test for sorting order

* 🚨   Fix linter warnings

* ♻️  Code review updates

* 🚨   Fix linter warnings",27,22,0
"TanStack/query","772c6c4e121c97b54dfe58165d04ce82e6703a30","lukemorales","2021-06-16 04:09:57","true","fix: display devtools only in production (#2382)",29,21,0
"TanStack/query","9247ab8ca57bf79e080c9e8be7fcf745317d2b81","tannerlinsley","2021-01-01 21:58:06","false","fix(devtools): filtering, hide sorting while filtering, show logo when open",17,16,0
"TanStack/query","7352b8be1dde01505ad7c1ecde013d583d60063c","tannerlinsley","2020-10-12 02:12:58","false","docs(examples): fix sandbox version",6,13,0
"TanStack/query","0fb1621de86f51a29eda27667c343e5b7f4c85df","tannerlinsley","2020-04-15 15:48:23","false","Update README.md",1,7,0
"TanStack/query","162fe88bfe0ad4667774074256f3b6b9086a28e4","tannerlinsley","2020-03-17 22:07:54","false","v1.0.28",1,6,0
"TanStack/query","3de5e8661a3ec2a213ac3534ff651dfb32af29fe","tannerlinsley","2020-03-21 00:15:50","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",4,6,0
"TanStack/query","fcd560a6249594c1b5e1436bccdf33093504bba5","tannerlinsley","2020-03-02 19:11:17","false","Update CHANGELOG.md",0,6,0
"TanStack/query","3724af2686b3c8edcbaef3c692fd718c3e402a94","cherniavskii","2020-02-29 15:15:11","true","Test garbage collection of queries without data (#175)

* test garbage collection of queries without data

* format code

* do not use sleep to wait for garbage collection

setTimeout is not reliable, so it's better to avoid it",1,6,0
"TanStack/query","2e4ca01376baaecdddf4c6caceedc73a65211fd0","ardeora","2022-12-14 07:27:11","true","refactor(solid-query): vite-plugin-solid backwards compatibility

RELEASE_ALL",16,39,1
"TanStack/query","5608a04a5e8707db6e4c69a541549a370c635f58","NMinhNguyen","2023-05-13 19:11:43","true","docs: deprecate callbacks on `useQuery` (#5407)",25,44,1
"TanStack/query","87a59b07982847d23bf4e900ec2d1763575cd10c","soldonii","2021-01-12 10:58:51","true","docs: Fix typos in dependent-queries.md (#1624)

Fix typo from 'achive' to 'achieve'. :)",15,16,0
"TanStack/query","406524d55240d2f122b9aefc08ab70a91e273c78","MrLeebo","2020-07-02 00:38:32","true","Fix fetch abort example (#690)

Passing controller.abort directly as a callback breaks the `this` context of the function.",2,10,0
"TanStack/query","dd52f77e84793fb6371651f2d0ea39b65d2258b5","cherniavskii","2020-04-19 19:50:44","true","add unit test for cacheTime: Infinity (#378)",5,7,0
"TanStack/query","640590cb55e61e66e59f079b4c4a5ff2e3ac660f","jacklj","2021-08-29 05:54:00","true","docs: Add link to 3rd party React Native devtools (#2610)",23,23,0
"TanStack/query","fcaf1845d9aa74c3b90ea16cb9237d339896631c","tannerlinsley","2019-11-04 21:33:04","false","Update README.md",0,2,0
"TanStack/query","6b9248222f2eab7bb45d9f3fb2c052df105cb6d1","boschni","2020-08-24 15:42:11","true","feat: make sure paused queries resolve (#909)",11,11,0
"TanStack/query","d16e0c5069927bac08cfca31e00061c6c451deae","zorzysty","2022-07-26 05:51:44","true","docs(examples): migrate examples/react/simple to vite",23,34,1
"TanStack/query","3118b7f612f935f14092d6f42946c5ad9b6c2feb","nvh95","2022-07-15 08:15:56","true","chore: add svg version of logo (#3831)",26,34,1
"TanStack/query","e6da990703482cff8ea99f5a254975cb57463ed5","TkDodo","2021-07-16 10:55:54","true","feat(queryCache): add global onSuccess callback (#2404)",29,22,0
"TanStack/query","04945f38b3f2ff82a597083bf1a36724f973bc7e","TkDodo","2022-09-26 11:26:50","true","fix(query): log error about undefined query data being returned (#4218)

* fix(query): log error about undefined query data being returned

* fix(query): fix test assertion",16,37,1
"TanStack/query","21d942b178af71495c03c3c1c3c77bb4c4212469","kamranayub","2020-07-31 21:10:19","true","fix(QueryCache): Use default configuration used for QueryCache instance for context (#808)

* Add failing test

* useConfigContext should use queryCache configRef, which will be defaultConfigRef by default

* ci

* Add failing test

* useConfigContext should use queryCache configRef, which will be defaultConfigRef by default

* use accessor

* Update for TS

* Add failing test for associated queries

* Add failing test for notifyGlobalListeners

* rename to defaultQueryCache in module scope to catch name conflicts

* Fix passing incorrect queryCache ref",13,11,0
"TanStack/query","861faf933b610343f04661dcd62b421ef1439bf6","boschni","2020-12-18 09:35:02","true","fix: infer result data type from query fn return type instead of the reverse (#1470)",9,15,0
"TanStack/query","ffcbbb51735abb30ec8a69bdfe776e6936b94043","cherniavskii","2019-12-09 16:51:30","false","Add per-query refetchOnWindowFocus option (#71)

* add refetchOnWindowFocus query config param

* treat refetchAllOnWindowFocus as fallback value if query doesn't have refetchOnWindowFocus option

* update api docs",2,3,0
"TanStack/query","9adb6b55a686735736bbf7f70c2475852d581e40","binayachaudari","2022-07-22 12:02:01","true","docs: fix `Suspense Example` codesandbox link (#3896)",24,34,1
"TanStack/query","74541edb34e4c7b5f9aa64638548fbdc65c1c7e9","TkDodo","2022-08-13 06:02:43","true","docs: update readme",24,35,1
"TanStack/query","1c46228fa20205ab78828764586e80e02ea108df","TkDodo","2023-06-27 07:04:01","true","fix: Revert ""refactor(rect-query): prefer client-only import over 'use client' (#5626)"" (#5630)

This reverts commit 3e25f51d0e70fb118de6296bf65047e24b3ad9ee.",23,45,1
"TanStack/query","317fe0822606590c08a9e3ce0952ab785ae34912","manudeli","2023-04-16 14:39:36","true","docs(lukemorales-query-key-factory.md): fix code example (#5258)",21,43,1
"TanStack/query","227afcd417eabd67fe7d3ebacc8944cf72d83c41","boschni","2020-08-20 16:28:38","true","fix: make sure observers only subscribe to queries when started (#899)",18,11,0
"TanStack/query","55e4f75954aa39b08252b518a5931be79f045770","tannerlinsley","2020-06-09 22:19:39","true","Delete links-test.yml",18,9,0
"TanStack/query","c032430559ddfc3acf7aad97e6a0ba426eea0edd","tannerlinsley","2019-11-13 21:32:06","false","Delete now.json",1,2,0
"TanStack/query","1c739e2941c451d8766ad1e4f27ce8b1855f992c","tannerlinsley","2019-09-10 21:00:42","false","v0.0.7",0,0,0
"TanStack/query","3d6408484cb0d4287365fdd6ec93753ac0f44388","cjsewell","2023-09-15 07:18:48","true","docs: Add missing await in Indexed DB persister example (#6012)

Add missing await in Indexed DB persister example",19,48,1
"TanStack/query","b31827d12eb2e4b5bec0f06969b62ae658b93b25","liaoliao666","2022-09-23 15:04:08","true","docs: add react query kit community contribution (#4193)

* docs: add react query kit community contribution

* docs: make ReactQueryKit doc much sense grammatically

* Update docs/community/liaoliao666-react-query-kit.md

Co-authored-by: 廖璇 <arthur.liao@huolala.cn>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",17,36,1
"TanStack/query","9511933f258b9f87f000938d1583e2b301e3d912","lukemorales","2022-09-13 09:10:26","true","refactor(examples): rewrite example apps query keys to recommended standard (#4159)",20,36,1
"TanStack/query","403699afd10c8e952b213ec1776e8e729e916e15","TkDodo","2023-10-12 07:08:40","true","refactor: only pass query to refetchInterval function (#6128)

* refactor: only pass query to refetchInterval function

this streamlines it with other functions, and avoids typing issues as it previously took transformed data from `select`

* test: adapt test because we don't have the types limitation anymore

* docs: refetchInterval",7,49,1
"TanStack/query","4774f03046b51af5e177991545bb42985251de8c","TkDodo","2023-11-08 07:59:24","true","fix(core): make sure queries that re-subscribe will have the correct result (#6334)",1,50,1
"TanStack/query","2b1c9845a4b1f051a0ce84bfb10d74b412b831ea","TkDodo","2023-09-18 06:58:13","true","fix(react-query-persist-client): decouple subscribe and unsubscribe (#6028)

* fix(react-query-persist-client): decouple subscribe and unsubscribe

to make sure subscriptions are always done at the end, even if we unsubscribe while we're restoring

* chore: fix types

* chore: I think this is better",13,48,1
"TanStack/query","adb5ea3481f87b3ec8cf6b4362d374d92c5bc0be","tannerlinsley","2020-09-23 19:36:25","false","docs: update overview",8,12,0
"TanStack/query","3e053ea6e7192f9123cce472d9623b636095a898","tannerlinsley","2020-08-04 16:47:06","false","docs: update comparison for SWR pagination/infinite",5,11,0
"TanStack/query","222ec6295fefeb250ec3b8a20dbeae54e46db0b2","tannerlinsley","2022-10-08 15:28:50","false","release: v4.10.4",16,37,1
"TanStack/query","46e7b0282077ccb2b11871dba6b6a19e8d8731b6","tannerlinsley","2023-08-05 06:29:51","false","release: v4.32.6",16,47,1
"TanStack/query","5040ea801cda165706e80d60adfba654a84047bd","tannerlinsley","2020-02-24 17:56:55","true","Update README.md",1,5,0
"TanStack/query","b46e46d6ec58d3f1aedf45b356572207701a81a2","brumm","2020-03-10 17:31:04","true","fix setQueryData not creating a new query (#222)

* add failing test for setQueryData

* fix check for queries to cover empty array return value from findQueries

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",2,6,0
"TanStack/query","7741a2f723f37bdb3ce79cb96ed2394b121b21d3","TkDodo","2022-09-27 17:39:23","true","fix(react-query-persist-client): make use of the query-persist-client-core package

* fix(react-query-persist-client): make use of the query-persist-client-core package

* fix(react-query-persist-client): move retryStrategies to core and use core in persisters

* fix(react-query-persist-client): fix imports in tests

* fix(react-query-persist-client): react-query-persist-client needs the core as dependency

as it re-exports the query-persist-client-core, and we don't want users to have to depend on the query-persist-client-core manually

* fix(react-query-persist-client): try to fix rollup config",15,37,1
"TanStack/query","0c667273125e5307ff148c0ce621b5d24950517f","TkDodo","2022-04-17 18:46:01","true","feat(react): add ""support"" for react18 (#3520)",19,31,0
"TanStack/query","7f3769dea2f9b4302bd1bd8db2d2c43732e3a337","razh","2020-06-02 04:38:15","true","docs: fix queries typo (#505)",20,9,0
"TanStack/query","f7c74711989f5a493f6fe5770234715cad6dadf5","tannerlinsley","2019-11-07 19:21:46","false","v0.3.2",2,2,0
"TanStack/query","c3b869381a157d62d54ff7514eecf87d3c2ca479","zorzysty","2022-10-11 06:36:06","true","docs(examples): migrate examples/react/basic-typescript to vite (#4300)",17,37,1
"TanStack/query","3ca132782206cfc1dd2163ec282f661167825c47","liaoliao666","2023-10-16 06:48:06","true","fix(types): useQueries can not infer type of TError (#6155)

* fix(types): useQueries can not infer type of TError

* test(useQueries): infer TError from throwOnError

* types(queries): support to infer TError for queries of all frameworks

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",7,49,1
"TanStack/query","2616dcc8fa36a54bb8bfb69a347a6f049023c80f","boschni","2020-09-17 16:42:24","true","docs: add refetch documentation (#1043)",11,12,0
"TanStack/query","6ef8f8a782548059d312326163bbdb8b728161d7","BernardoMariano","2020-12-08 19:23:15","true","docs: Add infinite scrolling specific test examples (#1372)",6,15,0
"TanStack/query","b0c2f6795292d1580e112794d18b27adff77bf48","mmorenoalvariza","2021-01-09 20:33:30","true","docs: Update testing docs to match React Query V3 (#1610)

Updated ReactQueryCacheProvider with QueryClientProvider as current testing documentation does not work when using React Query V3",23,16,0
"TanStack/query","0a0e490a9dc1f27365e53b62d24a04654f4c117d","TkDodo","2023-10-22 16:08:15","true","docs: community projects (#6221)",6,49,1
"TanStack/query","5f1e3a52ec03b977b86ef410a267434d92601fc7","cherniavskii","2020-04-19 19:50:24","true","include scripts in npm package (#377)",6,7,0
"TanStack/query","f6d92a7a7feb95b8b59eac02cdfe86d4ca33e3fd","henribru","2022-11-28 08:54:44","true","fix(vue-query): use distributive omit to preserve union (#4562)",16,39,1
"TanStack/query","4dc442c26d96f19d910e218e28a72252fac460e6","tannerlinsley","2019-11-11 17:11:41","false","v0.3.7",2,2,0
"TanStack/query","1b93517fe7fd80e58b14c6a5fe93d1dd3153093b","tannerlinsley","2020-07-08 16:59:29","false","docs: better devtools page",7,10,0
"TanStack/query","71250129fbb654eecb68bae4a39f182ca0078bd3","tannerlinsley","2020-07-08 17:30:03","false","docs: update nav",7,10,0
"TanStack/query","a57cd7df301aecdd115af13f9dd80819bdd011dc","tannerlinsley","2020-08-04 17:07:24","false","docs: update comparison",5,11,0
"TanStack/query","6d0538a0327139921f38d8911a9e83fd7dc8448c","tannerlinsley","2023-08-25 20:46:40","false","release: v5.0.0-beta.20",24,47,1
"TanStack/query","52764b0d461cbfe3acd7c0840c0477b834a9a0ac","TkDodo","2022-10-17 08:13:55","true","Update FUNDING.yml",17,37,1
"TanStack/query","c08c0a1cd304a7e42e792d1d91fb3da7a84b4704","TkDodo","2022-08-13 11:02:13","true","docs: update quick-start",23,35,1
"TanStack/query","60bde96de820302fb8160be14c54394f37bd9c64","TkDodo","2023-10-17 09:35:50","false","docs: optimistic updates and examples",6,49,1
"TanStack/query","d20e1d8bcf6495667d6b4f86a8039e1dad480a6a","TkDodo","2022-07-21 10:54:21","true","docs: fix layout of v4 migration page",23,34,1
"TanStack/query","828a5a76ae70886511982b6ef87c79f1869143b0","mrmowji","2021-05-24 07:53:36","true","docs: change ""others"" to ""other"" (#2305)",30,20,0
"TanStack/query","3d2806edb43c557be201e214edb0d503be3159f9","boschni","2021-02-07 13:48:41","true","fix: stop fetching pages when an infinite query unmounts (#1761)",16,17,0
"TanStack/query","cb2b4252a950bbb8311415996714de94e500ff55","boschni","2020-09-05 14:24:00","true","fix: make sure setQueryData is not considered as initial data (#966)",7,12,0
"TanStack/query","2daa1445cb9d9d6099d860e17d1967a8f3a39557","tannerlinsley","2019-11-04 21:14:58","false","Update sandbox example",0,2,0
"TanStack/query","af75ac82e935a4d07dc56d8117ed9d3d4506604f","bev","2022-11-03 06:11:58","true","docs: typo in mutations.md (#4436)",17,38,1
"TanStack/query","66f45c8e444638dd30502ea6d3646bda578b4168","tannerlinsley","2023-09-16 13:49:57","false","release: v5.0.0-beta.29",17,48,1
"TanStack/query","1e57af0af8495ec6da909c547e06e5da5969f9f8","tannerlinsley","2023-10-25 12:53:29","false","release: v5.4.0",7,49,1
"TanStack/query","dadfa17107375ee983963f6b10634b46c2461cdc","tannerlinsley","2020-06-30 19:45:16","true","Update README.md",3,10,0
"TanStack/query","5314cfba1bc54fca487f61f9f18aa6e9b15bb6ab","tannerlinsley","2023-07-16 04:57:16","false","release: v4.29.25",26,46,1
"TanStack/query","2a13bdb3b91c7a7997dd9c22e57eaa0aefbbc7bb","tannerlinsley","2020-07-08 06:01:52","false","Update README.md",7,10,0
"TanStack/query","d04045827efe5cae5a57edd816fe4f506bc42b0f","jeltehomminga","2020-12-14 16:27:50","true","docs: typo Walkthough -> Walkthrough (#1399)",5,15,0
"TanStack/query","9434a162dcfb11a9a3e397d72c2cbb775fa06b67","amantri","2023-02-24 06:19:24","true","docs: Fix typo (#5029)

wholistic -> holistic",28,41,1
"TanStack/query","0a7b571f3914223aff5bec7f300ce91328871c3b","tannerlinsley","2019-11-15 19:46:17","false","v0.3.13",1,2,0
"TanStack/query","9d364e75bcc5fa44a00e1cff2f79fbd79ca89de5","DaleWebb","2022-10-07 19:06:28","true","refactor(query-core): change QueryMeta and MutationMeta to an interface (#4253)

* refactor(query-core): change QueryMeta and MutationMeta to an interface

* Apply suggestions from code review

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",17,37,1
"TanStack/query","843fffb786490ff1d4aff6fdc51dc8c7e1fb6390","tannerlinsley","2023-07-31 12:08:23","false","release: v5.0.0-beta.9",19,47,1
"TanStack/query","7336e6ef0cb15ee0cdb4e1004e4a2bdd2517b915","tannerlinsley","2020-07-08 06:22:33","false","docs: fix z-index issue",7,10,0
"TanStack/query","4fd07253305ecc3dbdf4e2d6e8399aebb27ecda6","macklinu","2020-07-23 02:17:37","true","docs(ssr): fix typo (#792)",11,10,0
"TanStack/query","c2d07d49c8dacff66e3365df63aed0d7fd701ace","indrajitbnikam","2023-06-20 16:48:04","true","refactor(types): export query-cache related types (#5614)

* refactor(types): export query-cache related types

export queryCache related types for better DevX

* Update packages/query-core/src/index.ts

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",26,45,1
"TanStack/query","f6715959161e5d146855906c8a004d7493061d52","henryqdineen","2020-05-14 04:11:05","true","docs(CONTRIBUTING): fix ""chnages"" typo (#491)",11,8,0
"TanStack/query","b5675e9718d4b5ba7ee899bdf8bcea10003d0176","benadam11","2022-04-07 21:40:21","true","docs: Update links to course landing page (#3478)",17,31,0
"TanStack/query","5d1dc70ca95f5c044872c602e6a27ad9999f634d","kalseefer","2020-08-21 13:05:45","true","docs: typo in useInfiniteQuery api docs (#905)",10,11,0
"TanStack/query","eab6e2c01fe17270424506502494f6a2677de4fe","TkDodo","2022-07-15 18:08:30","false","chore: adapt release script to new repo name",25,34,1
"TanStack/query","eb3d700dc522b86f6e9cc42d08e3b6197766c53b","tannerlinsley","2021-01-17 16:11:30","true","fix(hydration): useMemo for hydrating again",23,16,0
"TanStack/query","c320d1c6d3a7f1231e21d57e26b3f1f3882c5fda","tannerlinsley","2020-02-17 06:37:56","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",3,5,0
"TanStack/query","603a346d4f5ffaf02f49bf32ac5221029da6f4a1","tannerlinsley","2023-11-05 15:34:51","false","release: v5.7.2",3,50,1
"TanStack/query","e19bc9e59fe016d16d17ce36b2ae7704861a49f8","tannerlinsley","2020-07-09 22:49:44","false","Update videos.mdx",7,10,0
"TanStack/query","bc5fdb4e4444e7a7ae0bdc1a4d0a4790376b172b","tannerlinsley","2022-09-24 07:30:02","false","release: v4.4.0",17,36,1
"TanStack/query","a2a4ebcbaba49992b70e756a08f41a3ec4adff0b","tannerlinsley","2019-11-05 05:32:26","false","Update README.md",0,2,0
"TanStack/query","099f3de29928f94fc95494bc0f08fbf71d43cae9","tannerlinsley","2019-11-04 23:43:44","false","Suspense demo attempt",0,2,0
"TanStack/query","7a72e4de481ee6ef9e8c22f44411fc4d48a9a6e3","tannerlinsley","2022-07-19 13:33:12","false","release: v4.0.5",25,34,1
"TanStack/query","6ad74411e65676305c35f2fe72eb2006b24ebee7","thienna","2023-01-05 10:06:08","true","docs(guides refetchOnWindowFocus): more clear instructions for the use (#4759)",35,40,1
"TanStack/query","67ddf17b659877582372263a196c269398e7b429","Alsadi30","2022-11-11 08:59:24","true","docs: Update disabling-queries.md (#4472)

fix a typo",20,38,1
"TanStack/query","84ba2f18549f1ce1fd77d86b8e95d00fc2a4d0bd","lachlancollins","2023-01-11 10:42:58","true","fix(svelte-query): Remove dependency on SvelteKit (#4788)

* Use rimraf for clean script

Supported on windows

* Restructure jest tests, types test, and building types

* Relative eslint and jest paths are not needed

Now works on windows too, and tested to make sure it doesn't break linux

* Run codemod tests from main jest.config.ts

--collectCoverage false breaks when passed in to the union of these

* Remove unused test:lib scripts

* Add prettier-plugin-svelte

* Call test:types in github workflow

* Add missing build:types to query-async-storage-persister

* Build without sveltekit

* Update vite-plugin-svelte to 2.0

* Add dev/watch script to svelte-query

* Replace sveltePreprocess with vitePreprocess

* Fix example component and indentation

* Remove dev/watch

Breaks setup because it adds package.json that isn't removed by rimraf

* Move /src/lib to /src, ignore __tests__ in build

* Fix tsconfig included files

* Replace tabs with spaces

* Whoops messed up merge

* Add more tsconfig.json settings

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",36,40,1
"TanStack/query","e7432db60cca7e181ea8554ae6315467a7b5c2e1","ruisaraiva19","2020-08-20 14:38:50","true","chore: remove deprecated NPM scripts (#891)",16,11,0
"TanStack/query","4a7bdbc61bd951e83690f2959fa18fe3ddbafc19","tannerlinsley","2020-03-25 21:04:38","false","v1.1.3",0,6,0
"TanStack/query","9e92e5ecd36fbb346664c377388c8c2beee21c17","mbosecke","2023-04-01 06:40:05","true","docs: Update useQueries.md (#5180)

* Update useQueries.md

Specifying that the return value is ordered, to help users understand how to match up the results with their inputs:

https://stackoverflow.com/questions/72045306/usequeries-how-to-get-response-for-a-certain-query

* Elaborated on how the order of the useQueries return value matches the input order",25,43,1
"TanStack/query","31f6b2dbf377acf9113c5e9a982f909a303eaf3f","tannerlinsley","2023-08-15 07:22:13","false","release: v5.0.0-beta.16",21,47,1
"TanStack/query","252f22c5555dc0e3d1e0e27e7c15286ccf77c17b","tannerlinsley","2020-03-06 17:37:23","false","v1.0.19",1,6,0
"TanStack/query","fd02255066ac3a136f6b62863387c486d0d560fc","tannerlinsley","2023-05-14 14:10:31","false","release: v4.29.7",25,44,1
"TanStack/query","f94c28f68e7916b3b1e9947dff1c2f2a9f821ea0","tannerlinsley","2023-10-01 22:22:16","false","release: v5.0.0-rc.3",8,49,1
"TanStack/query","223f6555674ffe3a47ecc6ecfe8e372fa74f790a","tannerlinsley","2020-05-05 18:08:59","false","fix: Test semantic-release!",11,8,0
"TanStack/query","77c7b5c8d964ce435df37a37e7b569ab047943ec","tannerlinsley","2020-07-29 16:38:31","false","docs: improve RQE callout colors",12,10,0
"TanStack/query","79ad5a9ccbce1486c10e7e364d8fc28bef3fa19f","DamianOsipiuk","2021-04-28 17:44:27","true","feat(query): add 'getObserversCount' util (#2130)

* feat(query): add 'getObserversCount' util

* refactor: replace usage of private observers with getter",34,19,0
"TanStack/query","38dcb2cfbd0d47d354aa38ef0c95753648e6f473","davidjbng","2023-07-25 07:47:35","true","fix: codemods build command (#5776)",24,46,1
"TanStack/query","d261823cc1631c8a121f5e3fbfe49c7b7a64e925","Newbie012","2022-12-14 07:10:28","true","fix(eslint-plugin): support rule prefer-object-syntax with multi lines (#4637)

* fix rule prefer-object-syntax with multilines

* simplify",18,39,1
"TanStack/query","933cd410ae0c8e69f9375eac2d5fb38cc940e6eb","Newbie012","2022-11-11 08:43:30","true","fix(eslint-plugin): false positive for factory functions (#4497)

* fix false positive for factory functions

* add more test

* lint fix

* format

* remove unnecessary conditional

* empty commit (flaky test)

* empty commit (flaky test)",21,38,1
"TanStack/query","10e03a53d018836764c17a61e633d0781eb87ab3","manudeli","2023-07-21 07:49:00","true","docs: update readme about suspense (#5742)

* docs: update readme about suspense

* docs: code reviewed",24,46,1
"TanStack/query","2a97ee50aa473095c771ab2b2aab995803f100bb","tannerlinsley","2020-07-14 22:37:25","false","docs: fix newsletter popup on mobile",10,10,0
"TanStack/query","038be2703bfca6ff10761eab8b6aabf54ac0c07a","tannerlinsley","2023-08-04 13:58:12","false","release: v5.0.0-beta.14",16,47,1
"TanStack/query","80e82daedd37c771617eb034d2a38a87c1c25682","tannerlinsley","2020-05-15 21:20:43","false","fix: cancelQueries now uses the query.cancel method

fix: query.cancelQueries was renamed to query.cancelPromises",12,8,0
"TanStack/query","1eed839cfbaef3d93737482cbd3e534ffaf5996d","tannerlinsley","2020-07-01 02:04:51","false","fix: remove query calls notify",2,10,0
"TanStack/query","8b45773fd82eb9c47a20582c3c9d76aad7872932","tannerlinsley","2020-09-22 18:15:08","false","docs: update Users",6,12,0
"TanStack/query","b0617ae4b7f24db4439ac597a0764b69405aa7da","cherniavskii","2020-03-02 12:02:33","true","Remove unused code (#184)

* remove unused code

* remove coverage thresholds",2,6,0
"TanStack/query","b5c15c9636e67447b1487602aa6c28b7b7162243","dimified","2021-08-09 20:28:01","true","style(queriesObserver): Renames to prevObserversMap (#2551)",24,23,0
"TanStack/query","497804ee00927da14ee8ff7f8218f270def7a91e","TkDodo","2023-10-02 08:48:42","false","Merge branch 'main' into rc

# Conflicts:
#	docs/config.json
#	docs/react/eslint/eslint-plugin-query.md
#	docs/react/guides/dependent-queries.md
#	packages/eslint-plugin-query/package.json
#	packages/eslint-plugin-query/src/__tests__/configs.test.ts
#	packages/eslint-plugin-query/src/rules/index.ts
#	packages/eslint-plugin-query/src/utils/ast-utils.ts
#	packages/query-async-storage-persister/package.json
#	packages/query-broadcast-client-experimental/package.json
#	packages/query-core/package.json
#	packages/query-core/src/hydration.ts
#	packages/query-persist-client-core/package.json
#	packages/query-sync-storage-persister/package.json
#	packages/react-query-devtools/package.json
#	packages/react-query-persist-client/package.json
#	packages/react-query/package.json
#	packages/solid-query/package.json
#	packages/svelte-query/package.json
#	packages/vue-query/package.json
#	packages/vue-query/src/useBaseQuery.ts
#	packages/vue-query/src/useInfiniteQuery.ts
#	packages/vue-query/src/useIsFetching.ts
#	packages/vue-query/src/useIsMutating.ts
#	packages/vue-query/src/useMutation.ts
#	packages/vue-query/src/useQuery.ts",8,49,1
"TanStack/query","16e70e1fb9f67de5924d53cb56faa1e95bd6d7d2","TkDodo","2021-09-18 17:30:45","true","fix(devtools): do not show disabled label for inactive queries and make statusColor match statusLabel (#2687)",25,24,0
"TanStack/query","cc9bab714a5b520f37ac1460d9d564c5f0fda87f","TkDodo","2023-09-17 14:11:20","false","test: fix test",14,48,1
"TanStack/query","19a8e98bfe1d617b705ad1c56f24f9fb19c43fe7","ZackDeRose","2023-03-14 08:03:20","true","chore: `test:lib` task-caching w/ Nx (#5116)

* adding quick caching test

* reverting workflow change

* updating pr yml to test nx speed

* fixing yml on property

* fixing yml on property

* fixing target name

* upping to running4 in parallel

* upping to running 5 in parallel

* upping to running 6 in parallel

* upping to running 7 in parallel

* upping to running 8 in parallel

* upping to running 9 in parallel

* upping to running 10 in parallel

* opting for --parallel=5

* cleaning up nx.json

* revert touching of ci.yml file

* reverting on property of pr.yml file

* updating root pacakge.json test:lib command

* fixing frozen lockfile error in ci

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",27,42,1
"TanStack/query","80f236d8c7172cce8db01cef97eab0b44f2af5b4","emzoumpo","2021-11-06 16:50:59","true","fix(devtools): Fix progressively smaller font size for Explorer (#2886)

Fix progressively smaller font size for Explorer entries in devtools
Set Entry font-size to 1em, because it is indented multiple time within each other.
This causes the font to get smaller and smaller as `em` is relative to the parent font size.",21,26,0
"TanStack/query","14834e8214f8809d1f6c81232575041d50d61f14","boschni","2020-12-16 01:49:09","true","feat: add imperative infinite query methods (#1443)",16,15,0
"TanStack/query","6f59bbd4b48b486f42870ab0ea89dda00e03e4f7","bennettdams","2022-09-22 18:53:02","true","docs: Add un-/install statement to `v3` to `v4` migration guide (#4186)

* docs(migrating-to-react-query-4): Add un-/install statement

This adds a statement to uninstall `react-query` and install `@tanstack/react-query` to the `v3` to `v4` migration guide.

* docs(migrating-to-react-query-4): Add devtools install statement

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",18,36,1
"TanStack/query","12ea92be0b4da8e1d8cb4ceaf5fd14d48e202a16","tannerlinsley","2019-11-04 05:42:39","false","v0.0.14",0,2,0
"TanStack/query","9aa54baafe5807b46ee893e72dec3e88f950565b","tannerlinsley","2019-09-11 16:44:33","false","Update package.json",0,0,0
"TanStack/query","d4d1b836966d5bedab0f64f51e28f4caef929f9f","tannerlinsley","2020-03-04 20:00:35","false","v1.0.13

Closes #195",1,6,0
"TanStack/query","4e971177338a48548a0e44093d709a9616d8f66f","tannerlinsley","2020-07-08 05:34:10","false","Docs site",7,10,0
"TanStack/query","d86e3437f66d3f36988a151dfa6b2abd4fec12e8","tannerlinsley","2023-03-06 15:02:02","false","release: v4.26.1",27,42,1
"TanStack/query","bca63746f3fbe9ffdbc80b3657fe0f6c24ec21b2","tannerlinsley","2020-02-27 18:14:57","false","v1.0.4",1,5,0
"TanStack/query","5e4ef153de642551d554047ce99124bfb58e254e","tannerlinsley","2020-12-14 23:28:52","false","fix(devtools): Do not include devtools for production",8,15,0
"TanStack/query","91c10d8990b66834e3a1de9b8bb9eaf649dc8538","theghostyced","2020-07-24 14:35:37","true","docs: simple documentation update 🙂 (#794)",10,10,0
"TanStack/query","9edb305f45146b902e7dbaa81419382ca813c0b6","Brodzko","2021-11-06 21:43:43","true","fix(types): Export the `Mutation` type and change default `TVariables` from `void` to `unknown` (#2892)",18,26,0
"TanStack/query","0809adccecc4510a98b1eb31224bb2013dcc6123","DerJacques","2021-03-15 20:00:38","true","fix: Do not default to `false` on `refetchInactive` (#1934)

Co-authored-by: Manuel J. Thomsen <mjt@magnetix.dk>",39,18,0
"TanStack/query","2054f5b227d1e6bb4d4efea8e33ec6e0534cb933","TkDodo","2021-12-15 18:52:32","true","fix(queryObserver): make sure that memoized select function only runs once per input (#3098)

we compute the result optimistically, and then one more time when calling setOptions. Both times run the select function because only setOptions will update the previous result and previous options. storing the ""previous"" selectFn separately on the observer whenever it was invoked (independent of the fact from where it was called) side-steps the issue",21,27,0
"TanStack/query","ddf698604c5bcad1712c3c1d720b34b777ea1260","lachlancollins","2023-06-27 08:52:03","true","chore: Update eslint config from alpha branch (#5632)",23,45,1
"TanStack/query","4a821b0f1f94fecdc0c19d1d914aa1f4a2cc0e6d","boschni","2021-02-12 20:42:23","true","feat: add support for concurrent mode (#1775)",17,17,0
"TanStack/query","bd6c2b541601477c42618c79876a6d5b30dfede9","boschni","2021-02-06 18:38:37","true","feat: run selector if reference changes to enable use of dependencies (#1751)",21,17,0
"TanStack/query","2587b23e8bb60e9f1a2616ce3ab966a0ad082896","tannerlinsley","2022-07-19 13:25:19","false","fix: force release

RELEASE_ALL",25,34,1
"TanStack/query","6a6a65709bda8ce2ddeaadfcb7814e4a0ac2434f","tannerlinsley","2020-09-17 00:06:14","false","docs: reorder homepage",11,12,0
"TanStack/query","40460dbd06c86201456b67bad7c9a632d325e722","tannerlinsley","2020-05-12 22:54:02","false","tests: fix error boundary test",12,8,0
"TanStack/query","29b9233f9f7e61a8d44409a8077b7dbe0c73125f","khmm12","2020-07-17 16:04:49","false","fix(ReactQueryCacheProvider): use shared `queryCaches` (#768)

`ReactQueryCacheProvider` uses own `queryCaches`, looks like a typo after refactoring.

Due to that typo, `onWindowFocus` is completely broken when isolated query cache is used.",9,10,0
"TanStack/query","8b5a209c432cecf4813dffddc7e3d14ba53a3f24","MrLeebo","2020-07-17 21:29:20","true","docs: refactor search modal (#773)

* docs: refactor search modal

  - state/Modal has been moved into a SearchProvider
  - <Search /> is basically just the UI ""button""
  - keyboard shortcut works everywhere
  - rendering <Search /> twice won't trigger 2 modals

* fix: weird layout squish",9,10,0
"TanStack/query","9566984a146466732b98d046ec4f90f5bfbbdf34","bastibuck","2023-10-20 06:39:28","true","docs: add typescript meta docs (#6181)

* chore: typo

* docs: add global meta registration docs",14,49,1
"TanStack/query","6ee897ce8796e488d1fd23d480a1b7e50e417555","AliRoshaniDev","2021-04-10 13:55:43","true","docs(useInfiniteQuery): Correction of two mistakes in the code sample (#2064)",26,19,0
"TanStack/query","ce1259c720269f561b0bb9513d19cb568cdc0637","TkDodo","2022-12-14 13:58:46","true","fix(query-async-storage-persister): support wider range of types (#4639)

* fix(query-async-storage-persister): support wider range of types

interfaces like localforage return a Promise<T> from setItem; we don't really care, as long as it's a Promise

* chore: stabilize test

set a staleTime so that we don't get an additional fetch after the component re-mounts",16,39,1
"TanStack/query","cb0e79f74fbb0723a54d1a30f882783433a1d668","jfranciscosousa","2020-03-09 18:55:57","true","Fix type error when a null query key is used (#218)",2,6,0
"TanStack/query","ffc7dc79db4f3bc0b7b02d7d9db4ed39a6278bf1","DamianOsipiuk","2023-10-25 13:49:44","true","perf(vue-query): remove redundant type wrappers (#6243)",7,49,1
"TanStack/query","0cbd1fdc02ff746ba8158bd23c94ae559abe6e78","alexanderson1993","2022-03-22 16:25:49","true","docs: updates for new react-query course (#3414)

* docs: updates for new react-query course

Change removes convert kit for email capture and migrates it to Bytes. Copy updates to promote the new React Query Course are included.

* Add the PPP discount banner for the ui.dev React Query course.

Co-authored-by: Benjamin Adam <benjamin.mark.adam@gmail.com>",19,30,0
"TanStack/query","39ca48cad308812938419da8beedb390176eb757","TkDodo","2023-07-24 10:11:30","true","chore: trigger release

RELEASE_ALL",23,46,1
"TanStack/query","94ab4a01f96ae25c0504c9384dd33aef441934a2","bbigras","2020-12-14 23:49:13","true","docs: add missing 'resolve-from' dep to examples/nextjs (#1417)",7,15,0
"TanStack/query","ee9bb150773ac86381b10a9f26a554d9c1fb52e8","tannerlinsley","2020-03-23 19:10:23","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",3,6,0
"TanStack/query","f16104a5812b9ac834404e8e88e6641ea6e48ff1","tannerlinsley","2020-02-17 05:07:56","false","v0.3.27-test.0",14,5,0
"TanStack/query","ef9d47b1f7fb657d01daa311961b57ba1922f64c","orther","2020-07-15 23:13:22","true","docs: Update updates-from-mutation-responses.md (#759)",9,10,0
"TanStack/query","3cba6d80e2b253af7e98cb18e095ca9613c1e2ff","Ephem","2023-09-15 10:08:52","true","Hydrate existing queries in a useEffect (#5989)

* feat(react-query): improve hydration timing

BREAKING CHANGE:

* hydrate queries that already exist in the cache in an effect instead of in render
* HydrationBoundary no longer hydrates mutations

* fix(react-query): remove mutations from HydrationBoundary options type

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",19,48,1
"TanStack/query","c2cec1b2e36f31631fb77678036ae1f6af401c07","tannerlinsley","2020-12-15 01:41:38","true","Update index.js",8,15,0
"TanStack/query","f9c5af2a797fa051d072caaa8b574f94aedf2f90","tannerlinsley","2020-07-08 14:36:48","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",7,10,0
"TanStack/query","198c97f255ae35a2933dff158748ab0dea9704a2","Avi98","2020-06-11 04:05:45","true","docs: add avinash as a contributor (#573)

Co-authored-by: Avinash <aviesdfsdfsdnash.kumar@instarem.com>",17,9,0
"TanStack/query","2815b1cb342a416a82351b498ced3b43c97b2541","strdr4605","2020-04-13 04:50:23","true","docs: fix typo in Rollback examples (#335)

* docs: fix typo in Rollback examples

* docs: add comma

Co-Authored-By: Kamran Ayub <kamran.ayub@gmail.com>

* docs:  add comma after rollback()

Co-authored-by: Kamran Ayub <kamran.ayub@gmail.com>",4,7,0
"TanStack/query","00fb29fac676ee3ee9c2d992aa973f2188a9cd09","tannerlinsley","2020-03-26 06:29:33","false","Simpler custom hooks example",0,6,0
"TanStack/query","be5226cfe271e969f459a801ce62d87a33340ed0","tannerlinsley","2020-03-25 21:03:16","false","Update CHANGELOG.md",0,6,0
"TanStack/query","4b96233e6a42faa6a36dce70ce4a9c2507cca6f0","tannerlinsley","2020-03-24 20:18:43","false","Add onMutate lifecycle event",1,6,0
"TanStack/query","cfa02f7c43d6be90c357d7295db5ea344cc10d90","tannerlinsley","2020-03-10 22:41:27","false","v1.0.24",0,6,0
"TanStack/query","92bdf704d3ab776d26b7759e0e95fefa9796e0f7","tannerlinsley","2020-02-17 06:28:29","false","v0.4.1",3,5,0
"TanStack/query","d916d8c1169135a49f3ce1e7577289f2ed32c942","mskelton","2020-01-09 00:05:25","false","Fix prefetchQuery link (#90)

The prefetchQuery link was not working due to it being camel cased instead of lower case.  This will fix that and make the link work again!",14,4,0
"TanStack/query","5874b2f879ce669d7f930ca5cc650f96191d2a78","Ephem","2023-10-06 09:49:21","true","docs: SSR/prefetching docs fixes (#6110)

* docs(vue-query): add back old prefetching docs for vue

* docs(react-query): update suspense prefetching example",12,49,1
"TanStack/query","57f47e13e1eb73ef1c52e9bf1119d77edd08ab03","TkDodo","2021-11-12 12:19:37","true","docs: improve cancellation docs (#2932)",30,26,0
"TanStack/query","462c5573de6b10811ea61d8c345bcca88acf2300","DamianOsipiuk","2023-09-15 10:57:47","true","feat: fine grained storage persister (#5125)

* feat: fine grained storage persister

* feat: persister option

* fix: invalidate query just after restoring

* fix: types, prettier, added comments

* fix: move pieces

* fix: prettier

* fix: add error handling

* fix: drop client dependency, fix type inference

* fix: formatting

* fix: pass query as param

* chore: some cleanup

* test: add tests

* test: fix import order

* test: add react test for fine grained persister

* feat: queryFilter predicate

* fix: test import

* docs: add docs and migration guide entry

* docs and filters

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",18,48,1
"TanStack/query","eb4e863cf44d30ef8b936068fce09f9632def68a","eltociear","2022-02-14 14:24:59","true","docs: Update CONTRIBUTING.md (#3299)

Github -> GitHub
github -> GitHub",20,29,0
"TanStack/query","9579dd893656d0a4a7ac0207a204d4b3735c329d","ardeora","2022-10-12 11:09:54","true","fix(solid-query): fix disappearing data key during fetching state (#4308)

* fix(solid-query): fix disappearing data key during fetching state

* Add prettier formatting

* Fix prefer-const rule",17,37,1
"TanStack/query","cfc57edfb15b00c9c9e0f7a3b23b5c57f8026b83","timrbula","2019-12-10 20:50:56","false","Update README.md (#77)",2,3,0
"TanStack/query","9b5569261ee133ef01a1f554325ce2f3ae55fd3d","femincan","2023-09-25 06:06:38","true","docs(devtools): update devtools installation version (#6057)",9,48,1
"TanStack/query","1005d5405a396208fd8b38ef80b6f64621e4e839","tannerlinsley","2020-07-08 05:42:50","false","Update logo.sketch",7,10,0
"TanStack/query","3a3d871ad88feada9e0396168cfa91a0bb58c1f3","benlongo","2023-01-13 12:45:15","true","docs: clarify interaction of query filter predicates with other criteria (#4532)

* docs: clarify interaction of query filter predicates with other criteria

* Update docs/guides/filters.md

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* Update docs/guides/filters.md

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",33,40,1
"TanStack/query","e328ca0bc3815572114c7c41d4ead0d63cb43b54","arnaudbzn","2022-01-16 08:16:17","true","docs(examples): react-native: regenerate yarn.lock (#3197)

Regenerate a clean yarn.lock file without versions issues.",25,28,0
"TanStack/query","b02f8dd01ad72f1aa79948525946809567110f7c","tannerlinsley","2020-05-11 14:06:57","false","fix(concurrentMode): refetchOnMount now only considers non-placeholder instances

Fixes #465",15,8,0
"TanStack/query","93c9aa2ad5ec431a7474a28a290901b0b2a461e4","tannerlinsley","2019-11-04 21:21:52","false","Add `includeInactive` option",0,2,0
"TanStack/query","020bb92d9cc6c44068a3d7f442505664804f5668","arnaudbzn","2021-10-26 20:09:11","true","test(react): improve code coverage (#2826)",19,26,0
"TanStack/query","aac9488944866bde0bd2a13d370390593f327fba","TkDodo","2023-03-06 14:56:49","true","fix(core): make sure mutations get updated options (#5085)

this fixes an issue around stale closures where callbacks are not updated, thus are called with wrong values in the closure",28,42,1
"TanStack/query","32b3aac5378af696ddb88a880d968e79363706d0","TkDodo","2022-11-13 07:50:11","true","fix: lock dependency of @tanstack/match-sorter-utils to 8.1.1 (#4501)

because the newer versions have trouble with esm and webpack4

RELEASE_ALL",18,38,1
"TanStack/query","67ab1bb7c037bf98a3c0e9f360c538471380e43d","fum4","2023-06-12 08:26:10","true","docs(react/comparison): update rtk-query refetching support (#5558)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",23,45,1
"TanStack/query","80cecef22c3e088d6cd9f8fbc5cd9e2c0aab962f","mike-shtil","2020-12-14 15:41:48","true","fix(queryCache): stop deepIncludes exception comparing null (#1403)

typeof null === 'object'

Co-authored-by: mike-shtil <mike.shtil@gmail.com>",9,15,0
"TanStack/query","0edc116856cf19f267a17515b26820c04be7d845","mattwilkinsonn","2021-05-07 16:07:29","true","chore: node 16 warning (#2249)",34,20,0
"TanStack/query","009244b60f21a3390dbc35cf67c801b02697b09a","benmonro","2020-03-02 12:05:41","true","add test badge & remove travis (#182)

* add test badge

* Delete .travis.yml",2,6,0
"TanStack/query","d33df62c8573741a3c15e25760c44543f15289b8","TkDodo","2023-10-17 06:26:59","false","Merge remote-tracking branch 'origin/main' into rc

# Conflicts:
#	packages/vue-query/package.json
#	packages/vue-query/src/__tests__/useQueries.test.ts
#	packages/vue-query/src/__tests__/useQuery.test.ts
#	packages/vue-query/src/types.ts
#	packages/vue-query/src/useBaseQuery.ts
#	packages/vue-query/src/useIsMutating.ts
#	packages/vue-query/src/useQueries.ts",6,49,1
"TanStack/query","7be6d89d689eb61a057d238c95b6701c2a92b7f5","ASchwad","2022-03-03 19:28:40","true","docs: Extend simple example to handle failed request (#3322)",19,30,0
"TanStack/query","755702dd78efadb66038fb2535b7c513c128a918","TkDodo","2022-01-12 13:53:10","true","fix(queryObserver): fix data stability (#3183)

by making sure to memoize the structurally shared version of data rather than the raw one",24,28,0
"TanStack/query","9c618f37d5d2cb0dad7d0fdc210b16c032ab127d","tannerlinsley","2020-06-22 23:43:14","false","fix(retries): cancel retry timer when query is cleared",0,9,0
"TanStack/query","3838db750af7387516c965d8464fd8cda131cd9e","VanTanev","2021-08-12 11:03:30","true","docs: Add a note on suppressing console errors in tests (#2567)",25,23,0
"TanStack/query","379297a74b7a6bb7635e26d1ff46f7eb7033bcaf","juvirez","2022-11-26 00:03:12","true","fix(vue-query): export proper useQuery return type (#4513)

* fix(vue-query): export useQuery return type

* fix(vue-query): export useInfiniteQuery return type

* fix(vue-query): re-export UseQueryDefinedReturnType

Co-authored-by: Aleksandr Semenov <juvs@ecwid.com>
Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",17,38,1
"TanStack/query","c2548a0473050893efc5da9570f17838b5096fd1","tannerlinsley","2019-09-11 17:29:25","false","v0.0.13",0,0,0
"TanStack/query","bd687db34f133e4117a5071f606d0004b8873bde","tannerlinsley","2020-03-04 20:00:40","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,6,0
"TanStack/query","accecddd167545fd8b8e78af5ed1ec677c3cbb27","tannerlinsley","2023-06-16 09:24:23","false","release: v4.29.14",21,45,1
"TanStack/query","4abce31572171b9b33886f4680adcc780eeec45c","tannerlinsley","2022-12-14 19:01:15","false","release: v4.20.4",15,39,1
"TanStack/query","6618b1e6a884d1a2ea002115f9fd2798110cc04f","tannerlinsley","2020-12-14 02:46:24","false","docs: update example dependencies",8,15,0
"TanStack/query","a86b10f17afc01238b27df71fa7419182c95b542","tannerlinsley","2019-11-07 00:15:23","false","Support force for fetchQuery",1,2,0
"TanStack/query","4bbfe2ab97b83a40553e7c78c6174907cb708682","tannerlinsley","2021-02-23 04:26:36","true","feat(broadcastQueryClient): experimental support for tab/window syncing (#1793)

* feat(subscriptions): add event types and metadata to subscriptions

* feat(broadcastQueryClient): experimental support for tab/window syncing

* better types, update tests

* feat(broadcastQueryClient): experimental support for tab/window syncing

* rebase and update

* use transactions

* update docs

* Update broadcastQueryClient.md

* Update index.ts",15,17,0
"TanStack/query","3dac094b3ac2b5793b94d71084bea9726558b513","eliranlevi","2021-08-19 07:17:12","true","docs: Update QueriesObserver.md (#2585)",22,23,0
"TanStack/query","55001bfe92985d524628bf4b2a6886cba12ee4d2","bvleur","2022-12-29 08:01:37","true","docs(examples): Fix react-router example (#4719)

Use `queryKey` attribute to check for existing data.

Co-authored-by: Bram van Leur <bvanleur@bol.com>",37,40,1
"TanStack/query","6312d1297614738e14ef07892a40d0d825aae0c2","TkDodo","2023-10-17 14:36:14","true","docs: Update testing.md",6,49,1
"TanStack/query","8d235134ab85b6ad6307dfc1eca6391b3c714ecd","TkDodo","2023-03-05 07:12:34","true","feat(query-core): Add global onSettled callbacks for QueryCache and MutationCache (#5075)

* feat(query-core): Add global onSettled callbacks for QueryCache and MutationCache

* test: tests for query onSettled callback

* test: tests for mutation onSettled callback

* docs: onSettled callbacks",30,42,1
"TanStack/query","62a7c38e7a3936e8938b991c89132bc5f640f7b0","TkDodo","2023-03-17 07:55:49","false","chore: fix publish script",23,42,1
"TanStack/query","dc4f24d187364d0eec5dced04bb52479da0b0cff","TkDodo","2023-09-17 13:19:45","false","fix(types): widen types for structuralSharing

fixes #5806",16,48,1
"TanStack/query","915d5e95c223b2f25d802daf9231b90c08cd7bd9","matthewhausman","2022-10-22 23:16:07","true","fix(vue-query): improve useMutation reactivity, allow params to be refs (#4339)

* update

* Update utils.ts

* Update types.ts

* potentail fix to parseArgs typing

* change name of maybeRefArgs

* Update useMutation.ts

* update

* revert some stuff

* Update types.ts

* Update types.ts

* update

* Update types.ts

* Update types.ts

* Update useMutation.ts

* update

* update

* Update useMutation.ts

* Update useMutation.ts

* PR feedback

* Update useMutation.ts

* Update types.ts

* Update useMutation.ts

* Update types.ts

* Update types.ts

* Update useMutation.ts

* Update types.ts

* Update useMutation.ts

* update

* update fn names

* change subscribe to const

* Update types.ts

* Update useMutation.ts

* wrong arg passed in useMutation, unnecessary changes in testing files potentially

* update

* update

* Update useMutation.test.ts

* Update useMutation.test.ts

* update

* Update useMutation.test.ts

* Update useMutation.test.ts",18,37,1
"TanStack/query","57ecd3277665417a33c51cee7d456f4727d79931","DamianOsipiuk","2022-12-13 19:30:56","true","feat(vue-query): allow to pass queryClient directly in useQueries options (#4625)

* feat(vue-query): allow to pass queryClient directly in useQueries options

* chore: fix formatting

* fix: remove deprecation message in production

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",19,39,1
"TanStack/query","198017b75da6542058e560496108cad4497e06d3","DamianOsipiuk","2022-12-16 09:25:43","true","docs: align routing with framework switcher (#4608)

* docs: align routing with framework switcher

Co-authored-by: Aryan Deora <adeora@iu.edu>

* docs: remove angular from docs config

* docs: add doc ref redirect example

Co-authored-by: Aryan Deora <adeora@iu.edu>",17,39,1
"TanStack/query","150da1e4d5472c820c8d236a7855e8413145078c","TkDodo","2022-07-20 19:03:24","true","fix: force release

RELEASE_ALL",24,34,1
"TanStack/query","6df7b6f97182e5d5eff68848de9e2a11e4671c6a","TkDodo","2022-12-03 13:49:10","true","fix(query-core): revert isServer check to check for window (#4592)

because document is not defined in react-native
additionally, we can check for `Deno` being available on the window to support the Deno runtime",18,39,1
"TanStack/query","1c8d978150a7ee1bfc44f71c6606b10c4b22815d","tannerlinsley","2022-10-09 16:10:08","false","release: v4.11.0",15,37,1
"TanStack/query","f6178773f0bafc3327863378fc4214c38a887551","Glazy","2020-04-04 01:36:07","true","docs: fix typo in docs. quiries -> queries (#313)

Co-authored-by: Luke Glazebrook <Glazy@users.noreply.github.com>",0,7,0
"TanStack/query","4cbc2ba6864ec3508fe1451169b821de6ceb0318","barrymay","2020-02-24 15:41:59","true","#124 Refetched query fetch should catch the promise call directly (#142)

*  #124 Refetched query fetch should be a caught promise

* Update index.js

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",1,5,0
"TanStack/query","e35b36c9adc8a14a6a29dae9d6e7609c1152568b","cherniavskii","2020-03-09 18:44:01","true","Fix useQuery infinite loop after query key is changed to falsy (#215)

* add failing test

* add link to issue

* fix failing test

* wrap expect into act?",3,6,0
"TanStack/query","f561605b6dfb649587f9a6109e31d31a9b8f2ea7","cherniavskii","2020-03-09 18:41:20","true","fix queryCache not notifying listeners, when query with initialData is added (#213)

* add passing test

* add failing test

* format code

* fix failing test",3,6,0
"TanStack/query","8669fadb8141b8ffbdc2ba0730f10b208547c24c","cseas","2020-10-04 17:04:01","true","docs: Elaborate on usage of queries (#1133)",14,13,0
"TanStack/query","26b39546cc1f37a3fff1e43515b65e640f532ad6","DamianOsipiuk","2022-01-21 12:10:11","true","fix(types): export QueryClientConfig interface (#3203)",27,28,0
"TanStack/query","07c96311a50a2aa45f516fa2c153ce68ca8f1a9b","Kuirak","2022-10-22 09:58:27","true","feat(query-core): Expose retry error as `failureReason` (#4315)

* feat(query-core): Expose retry error as `failureReason`

* feat: Add `failureReason` to mutation as well

* fix: mutation `failureCount` not being reset to `0` on success

* chore: Add tests for mutation loading state reset

* fix: linting + tests",21,37,1
"TanStack/query","76e314d0887edbd702369e8554cc840508561b94","babycourageous","2021-08-05 11:45:47","true","feat (QueryClient): getQueriesData for matching multiple queries (#2513)",25,23,0
"TanStack/query","e31087cf9f5c8348ddc05c20ff3fa94f3e200bd4","martypowell","2023-11-06 13:23:37","true","docs: fix link to community Query Key Factory Package (#6316)",2,50,1
"TanStack/query","1bf08358638f0c73b8fc6d5d54c4f9f61a6682af","lachlancollins","2023-01-29 17:15:55","true","fix(svelte-query): Fix createQueries result type (#4877)

* fix(svelte-query): Fix createQueries result type

* Fix prettier

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",34,41,1
"TanStack/query","de282541591a7c350035a2fb5c27f5404c5daffa","flybayer","2021-04-15 16:27:51","true","fix: useInfiniteQuery suspense bug (#2119)

* fix useInfiniteQuery suspense bug

* real fix

* move fix to infiniteQueryObserver",28,19,0
"TanStack/query","db670ee2c4297e7290617d9c8460ff0f293039ab","owinter86","2020-02-27 14:26:59","true","Update useMutation return types in readme (#162)

* Update useMutation return types in readme

* Update wording of idle status",3,5,0
"TanStack/query","4361a8803ac413d8e9c86943d7da5854fa37c512","boschni","2020-09-17 12:09:17","true","docs: prefer default config of QueryCache (#1034)",12,12,0
"TanStack/query","9023b0d1f01567161a8c13da5d8d551a324d6c23","bviebahn","2021-03-19 21:12:30","true","docs: fix useIsMutating docs (#1989)",28,18,0
"TanStack/query","cb88b4dfcbb4740d78abbf8df55d82e014ace9ea","sedlukha","2020-12-17 15:39:59","true","docs: typo on ssr guides (#1464)",10,15,0
"TanStack/query","21e160d86f275d4411e595c7813c1f428b1044fc","nguyenyou","2020-07-18 01:42:55","true","docs: fixed a typo (#779)",9,10,0
"TanStack/query","155b94b47d45011b221d3168e8f40f0583ead14a","orther","2019-11-19 02:57:21","false","Fix typo 'ge' -> 'be' in README (#45)",4,2,0
"TanStack/query","2d7803f5659b1d2827b09cf62549824996edb014","JaminFarr","2020-05-12 22:45:46","true","fix: falsy query key clears resolvedData in usePaginatedQuery (#482)

* Add clearOnNoQuery to usePaginatedQuery

* Change: make clearOnNoQuery the default

Co-authored-by: Ben Farr <ben.farr@marmalade.co.uk>",12,8,0
"TanStack/query","64dec9eb9b4dc232e17a587f88a6e487e8cfe5d8","ianschmitz","2021-04-22 17:55:02","true","docs: fix event pooling info (#2174)

* Fix React event pooling link

* Update mutations.md",35,19,0
"TanStack/query","8aeb209c3b9c84382a88059afbc398be93a69b33","asdofindia","2020-12-11 10:07:54","true","docs: make hook return all necessary variables (#1391)",10,15,0
"TanStack/query","1fe93566c43dd10d4f4adf307bfe337b6fc01a09","zorzysty","2022-10-29 19:34:38","true","test: stabilize flaky tests (#4397)

* test: stabilize a flaky test for notifyOnChangeProps

* test: stabilize a flaky test for cacheTime 0 and rerendering

* test: add sleep to make sure no additional renders are happening after data is successfully fetched for the second time

* test: stabilize test for switching to a disabled query

* test: small improvements to a test for disabled query

* test: stabilize test for ""previous data on disabled query when keepPreviousData is set""

* test: run prettier",17,38,1
"TanStack/query","b98f5469b91f40618cdd1d2d0fd6b70979ec0bbd","tannerlinsley","2023-11-04 15:40:21","false","release: v5.7.0",6,50,1
"TanStack/query","ed1a88ad4023b924f6b4b53f60449be6464bbfd7","tannerlinsley","2022-09-11 18:03:20","false","release: v4.3.4",19,36,1
"TanStack/query","04a83401f0e94a090edb13f7193696e36e78c017","tannerlinsley","2019-09-23 01:15:34","false","Add custom queryID",1,0,0
"TanStack/query","1da1372564cba4d8bb21338517d73095fe8efe57","tannerlinsley","2019-12-09 19:42:46","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",3,3,0
"TanStack/query","69cc49b7c5add1733fef11b9f7e5104a82ae2b9c","binayachaudari","2022-03-13 08:15:48","true","docs: update gitpod link in `contributing.md` (#3376)",19,30,0
"TanStack/query","60c4930d4fe363a3ec54d4b4d42540221680a2ac","coryhouse","2020-06-23 18:39:53","true","docs: Typo fix (#605)",0,9,0
"TanStack/query","2ac58a18c6f2ad11cb62db59f162849dce958fa8","owinter86","2020-02-27 20:38:11","true","Update useMutation memoization (#166)

* Update useMutation memoization

* Update useMutation.js

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",2,5,0
"TanStack/query","5a57af629b8a4604bfe00b03f9e64b07e63a2b2a","TkDodo","2022-09-28 16:34:57","false","chore: fix release

okay but now for real",15,37,1
"TanStack/query","a8f04519827200254ca193f380eca2ffe1224027","TkDodo","2023-09-18 07:04:23","false","Merge branch 'main' into beta

# Conflicts:
#	docs/react/reference/useInfiniteQuery.md
#	packages/react-query-persist-client/package.json
#	packages/react-query-persist-client/src/PersistQueryClientProvider.tsx
#	packages/react-query-persist-client/src/__tests__/PersistQueryClientProvider.test.tsx",13,48,1
"TanStack/query","634b3971307cf90b3dd1a8e62653621db48d08fe","Mini-ghost","2023-06-30 22:13:14","true","refactor(vue-query): reduce redundant `ref()` (#5639)

* refactor(vue-query): reduce redundant `ref()`

* chore: run prettier",26,46,1
"TanStack/query","dd574803d8bfbdb3e41d0a35e73390af47cffd43","jgabriele","2021-01-12 16:01:16","true","docs: fix typo in ssr guide (#1618)",15,16,0
"TanStack/query","770d454fefce88083b36fdab15fa12160b2d54b0","tannerlinsley","2023-08-21 06:40:12","false","release: v5.0.0-beta.19",23,47,1
"TanStack/query","41e2af25e8a9f5469dff6acc4325277c0628292b","tannerlinsley","2022-11-11 20:13:06","false","release: v4.14.8",18,38,1
"TanStack/query","8001abb2f08b7e13d7514f51564e03e125b26122","tannerlinsley","2020-10-12 02:21:08","false","docs(examples): fix sandbox version",6,13,0
"TanStack/query","2c44e5355c101a229c5e8e1bb37702d9ca448967","tannerlinsley","2022-07-20 19:11:13","false","release: v4.0.8",24,34,1
"TanStack/query","70391e83cb2bdac49935ca63b0525823ebd2d5cf","boschni","2020-09-17 12:12:20","true","fix: include config callbacks in batch render (#1036)",12,12,0
"TanStack/query","e7a3207f74b27bc112d6ab583831cceac60f94c5","jcready","2021-10-30 18:26:57","true","feat(useQuery): Provide AbortSignal to queryFn (#2782)",21,26,0
"TanStack/query","c376158afaddf7cd92a85491c3f18c1b123efe4b","TkDodo","2022-11-01 10:55:49","true","feat: add deprecation warnings

* feat: deprecate isDataEqual

* feat: deprecate contextSharing

* feat: deprecate custom loggers

* test: fix ssr-hydration tests

we need to compare against actual console.log here (and not our own logger), because react hydration mismatches are also logged to the console if they exist. This has surfaced another issue because of how we import react for react17/18 differential testing.

* fix: remove useEffect

that would wind up empty in production, and since this is just during development mode, we can just log during render

* test: adapt tests

we can remove most of these in v5

* chore: fix console.mock declaration

* feat: deprecate placeholder data function

* chore: scope test execution to src directories

if we do `pnpm test` locally, it first does typechecking, which produces output in `build` (including test files). Those will then be tested as well and the svelte tests fail with that.

* test: fix vue query test

* un-deprecate placeholderData function

we might still need it after all - to be discussed

* un-deprecate placeholderData function

* fix auto import",15,38,1
"TanStack/query","cf09241fc6ae12324616acb7178e8520060253df","TkDodo","2021-06-28 08:47:40","true","docs: update asyncStoragePersistor docs to match the current api (#2411)",25,21,0
"TanStack/query","5a5ad749e7ebdbd3e8130a294d2e14d534fb25a1","tannerlinsley","2020-06-27 01:19:51","false","fix(useMutation): ensure all side-effects are always called

Fixes #249

Now all we need is the new test from #641",3,9,0
"TanStack/query","3ce9786dfbd5085d8128e3e85524ddb00e87fa5c","tannerlinsley","2022-11-01 11:07:49","false","release: v4.14.0",14,38,1
"TanStack/query","cc58b7f542df594305dceab8e546d0e6178898bc","tannerlinsley","2021-01-01 19:30:04","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",17,16,0
"TanStack/query","b3cbb85bef81d26ece6434b83b6b9b6f0269f6d2","zorzysty","2022-08-11 15:54:51","true","docs(examples): Migrate default query function example to vite (#3954)

* docs(examples): migrate examples/react/default-query-function to vite - adjust file structure

* docs(examples): migrate examples/react/default-query-function to vite",34,35,1
"TanStack/query","017867eff4d8c5ed536c9c8282ad64884e64eb43","Ephem","2023-03-20 08:27:26","true","feat(react-query): preserve 'use client' directives (#5161)

* chore: preserve 'use client' directive in unbundled builds

* fix(react-query): add 'use client' to files missing it

* chore: lock version for rollup-plugin-preserve-directives",23,42,1
"TanStack/query","dc70f7d65631d28aa27b9dd0f003147140a5351a","boschni","2020-08-19 17:51:03","true","feat: add structural sharing of data between query results (#883)",13,11,0
"TanStack/query","66f462c2f9552ca2bbda8ac0fd7595bdb1a4008e","navin-moorthy","2020-05-26 13:34:43","true","docs: Update useInfiniteQuery API (#519)",12,8,0
"TanStack/query","b40055c67275ef01c9ae1bebbbb3875f589c4049","ottomated","2023-01-11 08:52:11","true","docs: fix sveltekit SSR link (#4792)",35,40,1
"TanStack/query","ca767771f3720ba9abb541871c22ea106172e9ab","Jungzl","2022-09-23 08:55:22","true","chore: force type import (#4202)

* chore: force type import

* lint: prettier format

* lint: rollback some eslint config

* lint: fix react-query-tools",18,36,1
"TanStack/query","2bcc893255818ee2093b6e7889d8b3bdeb612a97","boschni","2021-02-15 07:31:45","false","test: add ssr test for infinite queries",13,17,0
"TanStack/query","28b7e70aaa6b0af97489ee989d1b57afaacf5f26","jonicious","2020-12-15 10:23:30","true","docs: Fix syntax error (#1428)",11,15,0
"TanStack/query","1a18671584815c220e9c3a27f5cca25c13c8cb94","kamranayub","2020-04-13 04:51:09","true","Ensure we await the rendered text we expect (#338)",4,7,0
"TanStack/query","1570afff850e83223f9cbff9690a84d7e1edb2eb","tannerlinsley","2020-03-27 03:15:31","false","v1.1.7",2,6,0
"TanStack/query","05930e2320a0b5ecb71845130a5cdba42e08ec52","choznerol","2019-11-11 17:13:32","false","useQuery API typo: 'pagination' -> 'paginated' (#29)

https://github.com/tannerlinsley/react-query/blob/master/src/index.js#L414",2,2,0
"TanStack/query","4d29dfa24fd318138093c85b13c0ef580d60a399","tannerlinsley","2020-02-17 04:37:33","false","v0.3.25",17,5,0
"TanStack/query","21f7b89e916852129e996b0141abcc2e1af554d4","tannerlinsley","2021-08-31 19:08:26","false","Update comparison.md",22,24,0
"TanStack/query","21803e3f02e095cffdc422ad8be9d05ea3ff1a39","tannerlinsley","2020-10-12 02:14:45","false","docs(examples): fix sandbox version",6,13,0
"TanStack/query","9ba9a4aa82519e3f61e5e0662df2fcaec0245ed1","tannerlinsley","2020-02-17 06:24:03","false","Update tests",4,5,0
"TanStack/query","6ba86dbbb654b201eb1dc357684137f44f313b5b","tannerlinsley","2020-03-24 18:14:34","false","v1.0.36",2,6,0
"TanStack/query","3be9b4580ef8face761e354e5dc57bb56c9ff4a1","tannerlinsley","2023-10-17 12:25:15","false","release: v5.0.0",6,49,1
"TanStack/query","a9dbadbe1cbd7dcb50b5389a9371ee54e8fc79a5","TkDodo","2022-09-26 15:59:08","false","fix(query-persist-client-core): add missing build config",16,37,1
"TanStack/query","542ad07ca865c29d79f0085926ce95cc183856b1","TkDodo","2021-04-30 09:32:46","true"," docs: update query-key docs (#2214)",33,20,0
"TanStack/query","e25259de57883d9dacd623518d490a878f8c6c1c","ZackDeRose","2023-03-17 12:21:35","true","chore: fix test:format task giving false positives (#5147)",23,42,1
"TanStack/query","b977cf4ddd912d2ff369ef06683e462be4155ebd","DamianOsipiuk","2021-12-23 09:13:10","true","refactor(types): use core types in useMutation instead of redefining them (#3122)",20,27,0
"TanStack/query","e2a3ebdf9d3e68ebf3a72c82b6873c6bb773c3c8","ardeora","2023-10-25 22:59:24","true","fix(query-devtools): Inherit font size from parent instead of root (#6246)

This change allows setting a custom font size for the query devtools. The value is inherited from it's parent container",6,49,1
"TanStack/query","2e80cf7413a2e1fe8b2184fc74f6df0b5e9e5714","Newbie012","2022-12-25 12:28:51","true","fix(eslint-plugin-query): prefer object syntax should not remove generics (#4703)",41,39,1
"TanStack/query","62fec8c90b5425958734e4cce9ec6adacc8f409e","tannerlinsley","2019-09-11 18:21:20","true","Update README.md",0,0,0
"TanStack/query","b65725cce764aff486dc5c0953adf38a5a677604","prateek3255","2022-11-01 07:11:51","true","perf(devtools): Memoize QueryRow (#4416)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",16,38,1
"TanStack/query","033dffcfa945bd86a4beda607c4d96161ab17aa9","akhila-ariyachandra","2020-12-14 16:28:21","true","docs: Fix typo (#1405)",6,15,0
"TanStack/query","feb8eb822a0d72d7849924c9cd17ab1356f43485","Ken123777","2022-03-13 06:32:38","true","docs: fix a typo in mutations.md (#3386)",19,30,0
"TanStack/query","8c1bb1f43417254036e17546281c134e9f4af3d9","Pau1fitz","2021-06-25 12:02:20","true","docs: Update comparison.md (#2407)",31,21,0
"TanStack/query","7c32aa4b517bd3d8818c199954f911f80fc37fe3","kizivat","2020-06-24 16:29:00","true","chore(types): Add missing params for mutation types (#617)

* fix(types): Add variable to mutate function

The MutateFunction didn't accept variables when not undifined as expected

* fix(types): Add onMutateValue param to onError mutate option",1,9,0
"TanStack/query","387b106e8b751e66ab062a7c8c0125a5412f34d0","tannerlinsley","2020-03-26 06:33:05","false","Fix usePostId",0,6,0
"TanStack/query","0b3763d31daa7a851597f4c605098d85611c2780","tannerlinsley","2020-03-15 19:58:35","true","Update README.md",6,6,0
"TanStack/query","ee1095be76794f298d7d1cac85bb58ff94743ede","tannerlinsley","2020-03-10 22:14:47","false","Update README.md",0,6,0
"TanStack/query","44d187ad28e286ffbf0da6ace4eb7970eeda1fee","tibotiber","2020-01-10 05:41:48","false","add try/catch in addTodo mutate call (#102)

* add try/catch in addTodo mutate call

* oups, missed the unstaged changes",3,4,0
"TanStack/query","780bdb65f8fbd5eff7b9ab7fd345375750732e5c","owinter86","2020-01-09 00:03:26","false","update guard against missing `document` (#88)

Pull request https://github.com/tannerlinsley/react-query/pull/38 added the guard for missing document on react native, but this only caught a single references and if you are to add an interval for example, this will cause the same missing document issue, this PR has included the fix in the PR linked, but adds it to the isDocumentVisible function.",14,4,0
"TanStack/query","1032804426f8db2ca3239b601914accbc4c1ddee","mateuszCiezczak","2021-02-02 18:35:23","true","chore(examples): update axios version in examples folder (#1679)",29,17,0
"TanStack/query","6722d06d224c9babcc763ff156d00b2b8de19200","arnaudbzn","2022-01-14 08:16:34","true","docs(examples): react-native basic app in typescript (#3174)

* examples: react-native

Same example as in the Expo snack but in Typescript

* docs(examples): react-native: add link to the typescript version in the repo

* fix: use proper type for onAppStateChange",26,28,0
"TanStack/query","0b6b9fc47cf9f6b155f17687be172236ec3f691e","ardeora","2023-10-19 22:02:00","true","fix(query): Fix lockfile and build pipeline (#6199)

* fix(query): Fix lockfile and build pipeline

* Update svelte vite plugin version",14,49,1
"TanStack/query","512d059a03f85289edf7e56bccc1ce5f050b5c90","tannerlinsley","2023-02-04 20:51:23","true","Update overview.md",32,41,1
"TanStack/query","f715b305dedca12ac22812145fa29e42dbd6dfa1","DamianOsipiuk","2022-10-02 20:24:21","true","chore: ignore coverage from index and types files (#4257)",17,37,1
"TanStack/query","373b5d5db544060f87275cf5599f0f2d74b6dc47","ZackDeRose","2023-04-28 09:06:38","true","chore: Adding DTE to the PR workflow (#5256)

* setting up pr workflow for dte

* fixing yml syntax error

* fixing more pr workflow errors

* fixing more pr workflow errors

* removing coverage upload step from agents

* starting the ci run

* making the test:build cacheable

* setting matrix down to 4 total agents

* rm NX_VERBOSE_LOGGING env var in workflow files

* rm option to skip nx cache

* testing with parallel option of 1

* adding affected base option

* busting cache

* adding root package.json as dep

* adding parallel=2 option and busting cache

* default parallel option and busting cache

* rm debris from cache-busting for time tests

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",22,43,1
"TanStack/query","18c9f77a4f08f13f24a44be5c87e8535ade882ae","manudeli","2023-06-12 08:49:42","true","docs(@suspensive/react-query): update latest content (#5539)",23,45,1
"TanStack/query","ddcebdb287cf9d15c665dc3873b5d300e51f1aa6","TkDodo","2022-09-28 16:58:03","false","chore: fix release

- duplicate workspace peerDependencies as devDependencies due to this issue: https://github.com/pnpm/pnpm/issues/4164
- remove --non-interactive as it doesn't exist for pnpmn
- add --no-git-checks because otherwise, we cannot publish with changes in package.json",15,37,1
"TanStack/query","2c1d74baf79ac2faf413eae3263e8c3348aca1a8","artysidorenko","2021-10-23 14:12:00","true","feat(useQueries): enable types in useQueries (#2634)",20,25,0
"TanStack/query","8eec19ac65f0bfe382d8680234769132814e1af5","tannerlinsley","2020-06-22 22:00:22","false","fix(types): temporarily disable types for 2.0",0,9,0
"TanStack/query","ce64708f0e095edbed16e4ff117a42897ac6dd10","tannerlinsley","2020-04-02 20:46:59","false","Update README.md",0,7,0
"TanStack/query","67755ce19883b8292b466039df4acb1ed2fa03a9","kamranayub","2020-04-08 23:47:29","true","fix(scheduleGarbageCollection): Do not garbage collect newly cached queries of the same hash (#332)

* Add manual/prefetch cleanup test that fails

* Prefetch both queries in second test

* Add cleanup comment that will make the tests pass

* Store when the GC was initiated and compare against updatedAt

* Replace solution with state marker check and streamline test

* Undo setting.json change

* Undo setting.json change",1,7,0
"TanStack/query","20bf765117e7eefb89d5eeae49fc84cc14fa0ca3","tannerlinsley","2020-03-26 06:35:07","false","Update index.js",0,6,0
"TanStack/query","8cb487bdac31d28218efdcfc6afd2fecad551c67","tannerlinsley","2023-10-14 20:11:14","false","release: v5.0.0-rc.14",8,49,1
"TanStack/query","845751180decd86b2feab669e487a2887e12f8b5","tannerlinsley","2023-08-23 07:43:38","false","release: v4.34.0",24,47,1
"TanStack/query","d7d98a9789426a8e1b964166ea9cba9971da83b3","tannerlinsley","2023-01-04 08:34:17","false","release: v4.20.9",37,40,1
"TanStack/query","30ac34f1f949258e4a3cd528b9916bdf8616bc48","tannerlinsley","2022-10-22 10:02:13","false","release: v4.13.0",21,37,1
"TanStack/query","7ae67bb3833348d43e582c939075fc090232192b","TkDodo","2022-07-21 11:05:15","true","docs: reformat codemod blocks

this should fix the layouting of the migration page",23,34,1
"TanStack/query","d246b68f1d31b8c66bdfb508217bd42b631f9cc7","tannerlinsley","2020-07-09 06:19:25","false","docs: update comparison",7,10,0
"TanStack/query","e632ab9d1c3836ccd1bfb871bbc7a866d0fe313c","tannerlinsley","2020-02-26 19:48:23","false","v1.0.1",1,5,0
"TanStack/query","ac2a21f73061cccd9605a96521678de85f31deaa","tannerlinsley","2020-06-27 05:27:53","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",4,9,0
"TanStack/query","e903fffb60d9fed7cc4c4a00d072139af4cfe80f","tannerlinsley","2020-07-08 15:56:50","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",7,10,0
"TanStack/query","ce53c3ccc58fcd1950007f35e6555e6d92af7d81","tannerlinsley","2019-11-19 22:38:34","false","Update CHANGELOG.md",5,2,0
"TanStack/query","dcf1c412bb69221139cf982641f7a7b8b46e6c35","tannerlinsley","2019-10-24 21:16:39","true","Merge pull request #9 from AminZibayi/patch-1

Fix Query Updates from Mutations Example",2,1,0
"TanStack/query","d06353a6146facc608eb73a4ef62ffb2944b6cb5","tannerlinsley","2020-02-26 19:47:16","false","Remove outdated types dependency",1,5,0
"TanStack/query","aaafc2185e8bebdc55dee847a4c5ca240f7af57a","tannerlinsley","2023-09-27 12:59:11","false","release: v4.35.6",8,49,1
"TanStack/query","9edbd6790e8097ebf0ea890620114c796181d0aa","prateek3255","2021-09-18 21:01:56","true","refactor(devtools): Add types for devtools (#2688)",25,24,0
"TanStack/query","445ae1fa1af5f72d68c358a6845f71deec3b14be","boschni","2020-09-02 15:51:44","true","fix: ignore errors from background fetches (#953)",7,12,0
"TanStack/query","381dbe2e0934f90cf23a6a3c77cfccd2eee3504e","boschni","2020-07-30 12:36:24","true","fix: check if the document global exists before usage (#817)",14,11,0
"TanStack/query","c21e88cbd86ac292611c609c1dfd5dcc81a4b27a","boschni","2020-12-29 08:11:50","false","fix: use query data when getting next and prev page params",16,16,0
"TanStack/query","126790ba968abd95edf5effc29e867c6c9601f7e","MichaelDeBoey","2020-07-29 22:56:42","true","refactor: Update useBaseQuery.ts (#813)",13,10,0
"TanStack/query","1c5ed073e503ad102f957ce582d4af632ad6258a","tannerlinsley","2019-09-17 20:12:09","false","Respect manual in refetchQueries",1,0,0
"TanStack/query","9df60c9b03c4ba13a5305ff41c47ae953e763c78","tannerlinsley","2020-09-17 21:23:41","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",12,12,0
"TanStack/query","3fce2ec026101046ce7d08617df596ca771573e7","tannerlinsley","2020-10-21 19:42:07","true","feat: add placeholderData to queryObserver (#1161)

* feat: add placeholderData to queryObserver

* Add docs and a few tests (one failing)

* Add isPlaceholderData

* Update api.md",13,13,0
"TanStack/query","188d7d4ec0661b7424976b8e15542962870cc684","tannerlinsley","2020-03-26 06:56:03","false","Add dev tools to examples",0,6,0
"TanStack/query","3bb4031a4f5a804a486f0304407da14a25d82db8","tannerlinsley","2020-03-26 05:53:14","false","Update README.md",0,6,0
"TanStack/query","a6ce0f5aaf23ae8ec5d7212cd65a34ff857c7bda","tannerlinsley","2020-07-08 17:25:59","false","docs: add nozzle back as sponsor",7,10,0
"TanStack/query","fc832dcba0629cae58eab383ce673c2290ad9d46","kentcdodds","2020-03-27 01:34:24","true","add unminified esm build (#290)

* feat: add unminified build

Right now, anyone using modern tooling is going to get the minified version which makes debugging really difficult.

* set package.json ""module"" to unminified version",2,6,0
"TanStack/query","ca6b0b2751627d69e9140b5d0bc4c8a2aeb8a6e3","tannerlinsley","2019-11-08 15:33:48","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",0,2,0
"TanStack/query","9f79d04473b703e15b9dd2e175977765933b6775","yayvery","2020-12-24 03:19:25","true","fix(devtools): Remove debug statement in devtools (#1516)",10,15,0
"TanStack/query","535027bd4bc69cdc4ddc362be8e1ac460c3b47f6","Newbie012","2022-11-01 13:56:18","true","fix(eslint-plugin): downgrade auto-fix to suggest (#4425)",14,38,1
"TanStack/query","58dc1ce6264cbfebcdb76f0231867b149a6f083f","TkDodo","2021-11-20 07:57:36","true","fix(useQuery): fix tracked queries and error boundaries (#2993)

if you useErrorBoundary, you're likely not observing the error, because you're not using the returned error field - the ErrorBoundary handles the error for you. So when the actual error then happens, we don't inform the observer about it, because we're only informing them if a prop has changed that they are interested in, resulting in the error boundary never being shown.

The solution would be to always track the error property if you've set useErrorBoundary",21,26,0
"TanStack/query","fbd3488a3c13eeef3d9eb4d5cd536787ac75ecf3","TkDodo","2021-02-23 12:01:43","true","feat: pass error as second parameter to retryDelay function (#1838)

this streamlines the interfaces of retry and retryDelay functions",15,17,0
"TanStack/query","2bcc2a92803342e1bd74627416ee3acbc6075119","tannerlinsley","2022-11-12 07:32:04","false","release: v4.15.0",17,38,1
"TanStack/query","89bec2039324282a023e4e726ea6ae2e1c45178a","tannerlinsley","2020-05-01 17:43:38","false","Use deep equal to compare incoming data for referential stability

Fixes #430",7,8,0
"TanStack/query","66a9019a3f4329d5f5d1f02b055912577f91879a","zweck","2020-12-21 09:15:02","true","docs: Grammar correction (#1498)",9,15,0
"TanStack/query","3b066412c1216f1a83714fb676d5d3964dbae279","tannerlinsley","2020-09-02 14:38:23","false","docs: update supporters and comparison",7,12,0
"TanStack/query","4a4e62ad0d26d313f1cddc8eb5567c4dfbc80a2e","tannerlinsley","2023-05-27 08:52:07","false","release: v4.29.11",22,44,1
"TanStack/query","a67fdc2185d343314841b13af2d98a8494772d46","tannerlinsley","2019-12-09 20:34:26","false","Update README.md",3,3,0
"TanStack/query","1b41e6e0cc9f68cdb6bbe3442cd09d6ebfd9da96","tannerlinsley","2022-07-18 22:57:56","false","release: v4.0.2",24,34,1
"TanStack/query","66190c4109540c3a280a8167b5b565c07e41af15","tannerlinsley","2022-09-11 09:39:48","false","release: v4.3.3",19,36,1
"TanStack/query","ceb5bb6637915e560e0de772225bf927ca126b31","tannerlinsley","2022-10-04 12:55:31","false","release: v4.10.0",16,37,1
"TanStack/query","5e40bf797c197e948c9da0e102a6cc9c623183c6","johngeorgewright","2021-02-22 15:15:35","true","fix: toggle button position (#1848)

Thus far, the toggle button can take up the full height of the page when
using a `top-` position.",15,17,0
"TanStack/query","51a226ec1f8f5bac316543d0e17ece8ce20476f1","noccer","2021-07-23 11:40:27","true","docs: Very minor grammar updates. (#2485)",26,22,0
"TanStack/query","292f021aa10f44acc10ed2f8cf52e7d3ab82af6c","davidjbng","2022-09-03 08:51:13","true","docs(migration-guide): multiline codemod commands (#4116)",22,36,1
"TanStack/query","c3711e7dd205a221d803ceeef53bed59808a50f5","tannerlinsley","2020-07-27 14:51:36","false","docs: add learn link",10,10,0
"TanStack/query","a0c6d59d8ae3a9c1f806b71e44242feb1030be49","tannerlinsley","2023-10-23 16:25:08","false","release: v5.1.0",6,49,1
"TanStack/query","db09965324a6cca2ac381f07c40480bcff2a1b89","tannerlinsley","2022-10-02 20:32:58","true","Update config.json",17,37,1
"TanStack/query","b01d26973d89780b045860b2c4086591f90ea0aa","strdr4605","2020-07-20 01:22:53","true","chore: remove jump2header, doctoc scripts (#781)

As react-query docs are now on a separate site maybe there is no need for jump2header, doctoc scripts",11,10,0
"TanStack/query","ec65515a88798c8445466717eae2d7283767ef64","TkDodo","2021-10-09 07:10:00","true","docs(hydration): Document that hydration api requires values to be JSON serializable (#2780)",28,25,0
"TanStack/query","4336a52a6846c6814e859511faee06c90ded750e","razh","2020-05-20 14:20:27","true","docs: fix resolvedData typo (#502)",7,8,0
"TanStack/query","1fdab1514f451d15858eeb3a737e33edc971c9e6","zorzysty","2022-07-29 09:27:14","true","chore(examples): improve simple example

* build(examples): update README.md to reflect new way to run simple example

* build(examples): provide ""main"" property in package.json to point embedded codesandbox to index.jsx file",25,34,1
"TanStack/query","07f144a28452037c43ae07c8525f6cfa996a4b62","zorzysty","2023-01-15 09:44:50","true","docs: clarify the documentation on running examples (#4818)

* docs: clarify the documentation on running examples

* docs: use the proper watch command in docs for running examples",31,40,1
"TanStack/query","ae9c1101ef0faa4e2c6e3657dc2a04af702ca7d4","tannerlinsley","2020-06-28 16:21:13","false","Update test-and-publish.yml",2,9,0
"TanStack/query","981f485f7c9d1075f80b8b2a4827826464367a7d","tannerlinsley","2020-03-06 17:12:29","false","Fix object syntax, functional keys; infiniteQuery; Add tests

Fixes #208",2,6,0
"TanStack/query","25a776d98dfbd629b301abce4dc9b76e5409c881","tannerlinsley","2020-11-06 21:08:15","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",7,14,0
"TanStack/query","8ac9823663b2690d43ce81b0d3d4d69f840909a3","tannerlinsley","2022-07-18 22:19:03","false","fix: persist-client cjs, react-query cjs",24,34,1
"TanStack/query","d44aec4cc2c1ce5a02996810d23ee914cee45eba","tannerlinsley","2020-07-07 04:08:18","false","docs initial",3,10,0
"TanStack/query","6a1485420753851d09898e5986ad5c7845a34e1c","tannerlinsley","2023-09-08 12:13:12","false","release: v5.0.0-beta.23",15,48,1
"TanStack/query","023fef50b661b0973e12401226c7252a6d73ee14","tannerlinsley","2020-02-27 15:34:56","false","Update sandbox deps",1,5,0
"TanStack/query","fd804b23d8d5bc602b7e4386ee0d5f34e94fba73","tannerlinsley","2023-08-01 20:02:31","false","release: v5.0.0-beta.11",19,47,1
"TanStack/query","874f73a820b4823fcbfe5c124361501d19bbaacf","tannerlinsley","2020-12-18 23:08:04","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",10,15,0
"TanStack/query","5f7363518a8e0549bc7f9707cb257f09384c7b09","orouz","2021-04-21 15:31:39","true","fix(types): use MutationKey in UseMutationOptions (#2164)",32,19,0
"TanStack/query","368959fce4ca59feaefb352f627f45ed71a009d4","Ehesp","2021-09-11 13:23:37","true","docs: update testing example to check data (#2664)",24,24,0
"TanStack/query","a61958ea9bd5729923b5e858a71ea757175e04fb","tannerlinsley","2023-10-10 12:05:24","false","release: v5.0.0-rc.7",8,49,1
"TanStack/query","17816d6eedc7450fd4c6fcdfa2fad87272327c2a","tannerlinsley","2023-02-21 23:54:44","false","release: v4.24.10",27,41,1
"TanStack/query","13f53470e7b8cec10de264aa55c7397a48f18a75","Newbie012","2023-01-28 06:51:02","true","feat(eslint-plugin): support query key factory (#4879)

* add support for queryKeyFactories

* add test

* lint fix

* format

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",34,41,1
"TanStack/query","e5f0bb36c658cabf2b95c0cb0dd472678a9b62f5","thebuilder","2020-06-02 04:39:12","true","fix: Add error types (#525)

* Add error types

* Fix indentation",20,9,0
"TanStack/query","ec69fda040e196326c0ac2daf511f0916667a7d0","gargroh","2019-12-03 06:22:51","false","minor typo (#61)",2,3,0
"TanStack/query","81f00b634006dbb3e4fd951ca4e9df4c776d733e","tannerlinsley","2023-10-10 22:16:25","false","release: v5.0.0-rc.9",5,49,1
"TanStack/query","77ae01bc17e76b1e4f8110dc3567faacc1a281a4","fernandoabolafio","2020-03-10 17:25:05","true","Fix queryCache.removeQueries and add test (#221)",3,6,0
"TanStack/query","99fa7a095e0979e40d9e4ba3b0cf09a694b0ed4d","nhevia","2020-07-27 13:03:33","true","docs: fixes markdown links (#796)

* docs: fixes markdown links

Dependent Queries & Query Keys are pointing to api.md headers when they're documented in /guides/queries/(...)

* docs: fixes links with mk extension",10,10,0
"TanStack/query","6b9549f07c1be4a026d83e3e0eb7f8f367a7793a","zorzysty","2022-11-26 08:53:50","true","docs: fix docs for queryClient.getQueryData (#4545)",15,38,1
"TanStack/query","cf1846e330af4d9b412145c4cf5a485f4be4b2c8","tannerlinsley","2023-01-03 16:57:32","true","Update README.md

All contributors was out of date.",37,40,1
"TanStack/query","0e98eddff2923a0ff66b903322efe38e8f23aa8c","tannerlinsley","2023-03-17 15:45:02","false","release: v4.27.0",23,42,1
"TanStack/query","4bd66a3018663a1fefc67803ea80156ea4b6a21d","maciekmaciej","2022-04-21 13:18:34","true","docs: Fix async/await syntax (#3543)",21,31,0
"TanStack/query","c8b3ff2153e57d1464f9e1fc9dc44f8294bd3a61","boschni","2021-05-07 15:54:47","true","fix: do not throw errors while a query is retrying (#2147)",35,20,0
"TanStack/query","7b44a50441effac018fb04245d27af7c1b749dca","boschni","2020-09-16 20:37:50","true","fix: should throw error when using useErrorBoundary (#1016)",12,12,0
"TanStack/query","05bfd3e8016fbc8e4efe5f13621157208e0417a3","TkDodo","2023-09-25 09:11:24","false","docs: get examples to point to rc branch",9,48,1
"TanStack/query","9677b30944e14da8bb55a6d773692becb42bf8c6","tannerlinsley","2020-07-08 05:41:08","false","docs: fix build",7,10,0
"TanStack/query","ac342e237ae9fab6759f2d7be616662da6c16225","tannerlinsley","2020-12-14 02:34:19","true","v3 (#1360)

* feat: initial v3 changes (#1079)

* force website deploy

* docs: v3 updates

* docs: More documentation improvements

* docs: update query filters page

* docs: update query keys

* docs: more updates

* docs: updates

* feat: support multiple subscribers in observers

* docs: useMutation updates

* fix: mutate argument types and state update order

* fix: remove cache argument in cache callback

* fix: move optimistic fetching state into query observer

* fix: make sure default options can be overridden

* fix: type improvements

* feat: memoize select function result

* fix: only suspend when mounting

* docs: refactor to top level pages and multiple api reference pages per export

* test: add remove query test

* feat: add filters client isFetching and useIsFetching hook

* docs: temp move docs back to docs directory

* docs: solve conflicts

* docs: fix queryClient reference

* docs: reorg directory structure

* docs: fix queryClient reference

* docs: fix links

* docs: better phrasing

* docs: force docs build

* docs: update examples

* fix: use updatedAt to check for existing data

* feat: add structural sharing to select result

* refactor: update hashing terminology

* test: add ability to wrap react query updates with React act

* refactor: replace console with logger implementation

* docs: add migration page to navigation

* docs: update installation docs

* refactor: reduce file size

* docs: update examples

* fix: always compare query keys as arrays

* refactor: mark observers as private

* test: update timings in hydration cache time test

* docs: Update queries.md (#1134)

* feat: split mutate into mutate and mutateAsync (#1130)

* feat: split mutate into mutate and mutateAsync

* docs: Update docs/src/pages/guides/mutations.md

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>

* feat: add bi-directional infinite query support (#1135)

* refactor: reduce file size

* feat: revert to previous state on cancellation

* fix: wait for all queries to cancel

* docs: update cancellation docs

* build: force

* build: add beta build

* build: add beta build

* docs: update comparison

* fix: support infinite cache time when hydrating

* refactor: explicitly mark package side effects

* docs: update comparison

* docs: update comparison

* fix: remove excess exports

* feat: add support for default options when hydrating

* docs: fix links

* feat: add options to setQueryData

* fix: align notify terminology

* feat: Major semver bump

BREAKING CHANGE: Increment Major Version

* fix: always try to fetch if enabled

* feat: bump version

* fix: refetch should create new query when removed

* chore: do not publish beta until we figure this out

* make beta prerelease

* dry run releases

* fix: test dry run semantic release

* release beta releases for realzies

* test: add eslint rule

* docs(useQuery): change manual to enabled (#1167)

* feat: move mutations into the core (#1162)

* feat: tree shake infinite query and support manual updates

* docs: update comparison

* refactor: remove observer factory

* refactor: add subscribable

* refactor: move hasListeners

* refactor: optimize bundle

* fix: add status bools to use mutation result

* feat: api update

* fix: add defaults to UseMutationOptions type

* docs: add pages

* fix: cleanup

* refactor: use queryCache property directly

* docs: Add placeholder data guide

* docs: fix typo

* fix: keep previous query status when fetching

* fix: stop retry when observers unmount

* feat: add additional notify flags

* fix: only keep notify on stale option

* refactor: only batch react callbacks

* test: update timings

* refactor: also batch in suspense

* feat: add hydration support for mutations

* fix: remove query immediately if cacheTime is 0

* fix: prevent infinite fetch loop

* refactor: move refetch logic into observer

* fix: match query key correctly when setting defaults

* test: add query defaults test

* fix: re-add useMutation callback composition

* feat: use set defaults also for observers

* test: add enabled assertion

* feat: add ability to manually control the online and focus state

* docs: update onlineManager documentation

* feat: add discriminated unions for query results (#1247)

* fix: only set state in listeners when provided

* docs: add testing page

* feat: add query function context (#1261)

* feat: add errorUpdatedAt property

* fix: only trigger suspense when loading for the first time

* fix: make sure suspense is always triggered when loading a query

* fix: add ability to type the query key in the query function context

* refactor: make isDataEqual type more specific

* docs: update react native focus code

* fix: make sure to remove the correct query from cache

* test: remove only

* feat: add granular component re-render control

* fix: make sure component re-render when they should

* feat: throw error when QueryClientProvider has not been used to set a query client (#1309)

Also updated docs

* test: add invalidateQueries test

* fix: prevent state update after mutation unmounted

* fix: add defaults to setQueryData

* fix: cancellations for useInfiniteQuery (#1359)

* chore: update TypeScript version (#1314)

* Merge branch 'master' into beta

* fix(hydration): set fetchMeta to null by default to make it serializable (#1371)

* fix(hasPageParam): look for (undefined | null | false) values

* chore: fix linting

* fix: cross-bundle/version query client context

* docs: Update Examples

* docs: update example deps

* docs: keepPreviousData not set in paginated queries docs (#1376)

* docs: typo infinite instead of ininite (#1379)

* feat: devtools are now native to the core repo/npm-package

* feat(persist-localstorage-experimental): temporarily persist cache to disk

* tests: fix linting

* chore: attempt codesandbox import fix

* chore: revert codesandbox fix

* fix(persist-localstorage): add ssr-safety

* docs: fix typos in migration and queries guide (#1387)

Fix typos in guides/migrating-to-react-query-3 and guides/queries.

Fixes #1378

* docs(typos): fix typos in mutations guide (#1392)

* docs: update migration guide

* docs: update comparison

* chore: remove vercel.json

* docs: update comparison

* Update logo.sketch

* feat: reset query utils (#1375)

* feat: reset query utils

* Update queryClient.ts

* Reset query docs and tests (#1393)

* docs: Add resetQueries

* test: Add resetQueries tests

* remove unnecessary queryCache.reset methods

Co-authored-by: Aaron Jensen <aaronjensen@gmail.com>

* types: fix mutation context type

* fix: isFetched and isFetchedAfterMount should include failed fetches

* docs: Persist localstorage plugin

* feat: resetQueries refetches active queries (#1397)

Co-authored-by: Niek Bosch <just.niek@gmail.com>
Co-authored-by: Abhijeet Singh <contact.abhijeetsingh@gmail.com>
Co-authored-by: JP Angelle <jp@angelle.me>
Co-authored-by: Jake Ginnivan <jake@ginnivan.net>
Co-authored-by: Tom Klaver <tomklav@gmail.com>
Co-authored-by: Dmitry Ivanov <liseniss@gmail.com>
Co-authored-by: Corentin Leruth <tinencor@gmail.com>
Co-authored-by: ConneXNL <contact@ivia-solutions.com>
Co-authored-by: Rubén Moya <rmoyarodriguez@gmail.com>
Co-authored-by: Pascal Wegner <p.wegner1992@gmail.com>
Co-authored-by: Amen SOUISSI <48829921+amen-souissi@users.noreply.github.com>
Co-authored-by: Aaron Jensen <aaronjensen@gmail.com>",9,15,0
"TanStack/query","e1477f2c2bc364e10f0cd725fa3b361260343e18","tannerlinsley","2020-03-11 21:26:28","true","Update README.md",1,6,0
"TanStack/query","2e4e941ae4cc20086670b9da05d9dd8ecbb158b7","Ephem","2020-07-17 04:33:58","false","fix(queryCache): caches from makeQueryCache should be unfrozen/cache by default in node (#749)

Fix so the default behaviour matches the one described in the Readme.
Add tests for the above behaviour.

Closes #706",8,10,0
"TanStack/query","aebc5553d9faa714f0d465b5521a700235c34e3a","PepijnSenders","2021-02-12 20:08:31","true","fix: devtools hydration error (#1727)",18,17,0
"TanStack/query","dc491460d51e832746b239b9fd32955c0bc81115","tannerlinsley","2019-11-05 02:04:36","false","Update suspense example",0,2,0
"TanStack/query","fcb4170ec5e7175fca77a1e8bbbcb7fcaf187587","ZackDeRose","2023-03-14 12:18:20","true","chore: turning off Nx daemon in CI (#5128)",26,42,1
"TanStack/query","782afcd0400d81f236b50e74a2c0efc1719688e4","tannerlinsley","2022-07-18 22:36:09","false","Force release

RELEASE_ALL",24,34,1
"TanStack/query","efd86546698f0a5c2f8dcba152707ed8321fa76e","tannerlinsley","2020-05-12 22:37:23","false","chore: update example logging",13,8,0
"TanStack/query","443b5a89186bae584cb4c48276797656fcae6569","tannerlinsley","2022-12-14 07:32:25","false","release: v4.20.2",16,39,1
"TanStack/query","833f5186b59d4c53054aaea1ee06199e901ad6be","tannerlinsley","2020-10-05 20:57:27","false","build: add beta builds",7,13,0
"TanStack/query","64dc3afc737c9238af04ceb03e434ecf32a14317","adriencohen","2023-01-30 09:47:20","true","fix(query-persist-client-core): Move query-core to dependencies (#4899)

Co-authored-by: Adrien Cohen <adrien@eshot.io>",31,41,1
"TanStack/query","21439e6ba9aab15d660c05d81b401f89331333ed","tannerlinsley","2023-02-12 09:29:38","false","release: v4.24.7",35,41,1
"TanStack/query","2283d265b347fa25f852c069962e0af658e8fe13","tannerlinsley","2020-07-08 06:27:28","false","docs: fix og images",7,10,0
"TanStack/query","dd711b638353e3a6b23f139693aa2ba2697b0dbc","tannerlinsley","2020-02-17 06:05:08","false","v0.4.0",5,5,0
"TanStack/query","b35fe32f58960bc4b6e89fa8b7bd00f7f000700b","lachlancollins","2023-10-23 01:16:56","true","fix(svelte-query): Make `combine` work for createQueries (#6222)",6,49,1
"TanStack/query","6b68723302a5278322494bc025b646c489cabd55","tannerlinsley","2021-01-05 19:16:35","false","docs: new sponsors format",21,16,0
"TanStack/query","45055deea66cef2643a423bdc2c8f4cfe6f7390c","tannerlinsley","2023-09-25 08:52:30","false","release: v5.0.0-rc.1",9,48,1
"TanStack/query","4bbf888fac9d1b90d3c16aa25ef21ea9aa2660a2","tannerlinsley","2020-07-01 14:24:29","true","Update README.md

Fixes #683",3,10,0
"TanStack/query","c3b311408a7a0a332ae0733a24723fcb5348c4dd","tannerlinsley","2020-07-09 23:40:49","true","Update videos.mdx",7,10,0
"TanStack/query","d80179aca123c22b7e3bbe9abd96024e8307fee9","tannerlinsley","2020-02-27 17:48:56","false","Fix: No more infinite render",1,5,0
"TanStack/query","ce92bc2a086228e9000e6973fbc994f1bde9e195","raoufswe","2020-07-08 07:18:36","true","docs: correct spelling mistakes (#716)",7,10,0
"TanStack/query","f6e3c299647ab232cb6b5d3d80c01f5fc64467bb","alan2207","2019-12-08 16:21:25","false","Update README.md (#66)

update README.md to include cacheTime and refetchInterval options in the useQuery API example",3,3,0
"TanStack/query","c290906d667b6e8e2e0a466fc2426beea31d9e1c","TkDodo","2023-05-29 11:30:12","true","fix(react-query): fix missed updates between creation and subscription (#5474)

* fix: fix missed updates between creation and subscription

* chore: fix persister tests",23,44,1
"TanStack/query","9686426915ffb4401685ab27cf6656ac5ae72feb","TkDodo","2021-04-29 19:54:57","true","chore: add prettier to pipeline checks and include .ts files (#2205)",34,20,0
"TanStack/query","97ee73382bb6b848caa3633eaa60d4a8816e1375","TkDodo","2020-12-14 13:32:49","true","docs: typescript example (#1400)

* (docs): add typescript example for optimistic updates

* (docs): add a Counter to show off the ""select"" option in TypeScript

* (docs): simplify TypeScript example

There is no need to add generics to userQuery now - it will be inferred correctly by the options

* return context from onMutate and define types on the `onMutate` function

* add missing select option to useQuery api reference",9,15,0
"TanStack/query","2ec1979f9c42572060ee2c9fbebbc6356cf895eb","jvuoti","2021-12-04 21:56:37","true","fix(queriesObserver): fix getOptimisticResult, order of returned observers (#3052)

* fix(queriesObserver): fix getOptimisticResult call

Fix queriesObserver to call getOptimisticResult as before.
This was a bug introduced in PR #2866

* fix(queriesObserver): return observers in same order as queries

Sort returned observer entries to match the order of queries.
Previously, with keepPreviousData: true, the repurposed observers
would be returned last, potentially in different order than the queries.",19,27,0
"TanStack/query","b8126319070f87fe52004c386d21617af527a97d","tannerlinsley","2019-11-04 21:09:17","false","Better Pagination support, better examples",0,2,0
"TanStack/query","532b90ac1822c4486e1e323f68ef84ae19901130","TkDodo","2023-01-15 07:26:18","true","docs: update tkdodos blog (#4820)",31,40,1
"TanStack/query","e989725e2732c38f719d1d7d51a3cd0b385adbad","zorzysty","2022-10-12 10:54:23","true","docs: describe a way to run examples using local builds (#4310)

* chore: repair `watch` command in the main package.json

* docs: describe a way to run examples using local builds of packages without linking with yalc",17,37,1
"TanStack/query","4c741f74994a3d8f87f229e4fb313736616600a0","tannerlinsley","2020-06-24 17:45:13","false","feat: added queryCache.resetErrorBoundaries

Info can be found in the docs under the `Resetting Error Boundaries` section",2,9,0
"TanStack/query","110374afaa77c46daa59c97237428793a7d631be","tannerlinsley","2020-02-28 16:21:01","false","v1.0.6",1,6,0
"TanStack/query","8969dc1649e4f7c49103032ef565b076f05a9ee6","tannerlinsley","2023-04-03 14:25:51","false","release: v4.29.0",19,43,1
"TanStack/query","c27dd7a2a61f2949f6938e7568450a41b13c1109","tannerlinsley","2022-11-06 15:46:01","false","release: v4.14.5",15,38,1
"TanStack/query","c331b1f57a4b9964a1f6bf34d40d54d5b1c1acbe","tannerlinsley","2023-07-14 14:35:46","false","release: v4.29.22",32,46,1
"TanStack/query","88031d8c0f531e10a64516056cf0e19e98752e61","tannerlinsley","2020-05-12 22:54:07","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",12,8,0
"TanStack/query","5227246ed7516033967301a5380b91ecb8b04867","LarsJK","2023-10-20 12:57:50","true","fix(query-devtools): Make sure all id attributes are unique (#6192)",9,49,1
"TanStack/query","7a628d6497e6f71242f9af84de46997083f12549","Aung-Myint-Thein","2021-06-28 07:19:11","true","feat: asyncStoragePersistor for React Native (#2360)",25,21,0
"TanStack/query","939c94af206ef53e55757315213fd2d17c622ccc","tannerlinsley","2019-11-07 16:36:29","false","v0.3.1",3,2,0
"TanStack/query","c917ff7210719495fdb00782ebbfb08552ac3b0c","louiscklaw","2021-11-08 16:25:01","true","chore: add missing eslint-config-prettier for example, (#2898)",19,26,0
"TanStack/query","8fcd0023646bdd196e4faf76e1f587bfe7129ba0","boschni","2020-08-03 16:35:56","true","refactor: remove gc flag (#825)",5,11,0
"TanStack/query","6adaed533e311c557f7654875ce23b0dc814095d","TkDodo","2022-09-28 16:15:56","false","chore: use pnpm to run cipublish",15,37,1
"TanStack/query","39c021cd76ed8c18a94b983dfdf255ae12c4ebce","tannerlinsley","2020-10-12 02:13:53","false","docs(examples): fix sandbox version",6,13,0
"TanStack/query","e67b9e831437672ff3c572611457235f9f6bbbe3","tannerlinsley","2020-12-19 00:07:04","false","docs: update sponsors",9,15,0
"TanStack/query","65cd5968be883f97f11340d64b377e08a2567b21","tannerlinsley","2023-01-30 09:53:49","false","release: v4.24.2",30,41,1
"TanStack/query","b829fca5595c27b4d9d984f99c1c4a1bfb3c26f2","tannerlinsley","2019-11-19 23:34:06","false","Update README.md",3,2,0
"TanStack/query","0d1eb9356693d98844a4445dda708e0653a1785f","tannerlinsley","2020-09-16 21:48:40","false","docs: Update comparison.md",11,12,0
"TanStack/query","6582671fb8107a02c8efdf1d7ed2203b08921070","tannerlinsley","2023-09-17 14:16:44","false","release: v5.0.0-beta.31",13,48,1
"TanStack/query","f01ff6c794064181738d61b7a4820e47415fc5a9","tannerlinsley","2021-02-23 04:28:13","false","docs: add link for broadcastQueryClient",15,17,0
"TanStack/query","a0fae505d9af7c99015129412937001b542b8dad","posva","2023-08-30 08:11:28","true","feat(vue-query): support injectable contexts (#5886)

* feat(vue-query): support injectable contexts

This feature requires Vue 3.3.0, which has been out for a while now. It
allows using vue-query APIs in places where it is valid to use them but
currently throws an error.

- `hasInjectionContext()`: https://github.com/vuejs/core/pull/8111
- `app.runWithContext()`: https://github.com/vuejs/core/pull/7451

* refactor: add dev warning for effectScope

* fix: add memory leak warnings, fix tests

* chore: bump vue-demi

* chore: bump vue version in integrations

---------

Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",13,47,1
"TanStack/query","fd9c8a1b815d24edd0dfc013708cb89fd3bf5eb3","tannerlinsley","2020-06-28 23:10:49","false","refactor: break out query and queryInstance into their own files",0,9,0
"TanStack/query","bc40b58a87b57919089f7668aad2eca19314f1a1","dgreuel","2020-01-17 21:48:39","false","remove extraneous curly brace from default query keys (#111)",10,4,0
"TanStack/query","77f79468f1d8e25d7e44f45d9876a07c0bd3302a","tannerlinsley","2019-09-10 20:26:09","false","v0.0.4",0,0,0
"TanStack/query","5766c08222702812d23d3fc311c42b15d0e8733a","cherniavskii","2020-03-02 19:10:32","true","Continue retry on focus (#187)

* add failing test

* format

* add loading state check

* fix failing test",1,6,0
"TanStack/query","7a62494628744239c681deebb6475da87929c1c2","TkDodo","2023-01-30 08:11:47","false","chore: only run ci.yml on main branch

because we run a separate pr.yml for PRs and the previous check didn't really work",32,41,1
"TanStack/query","fc4671f0731d1dd757f9fd037fd8e6755b3393d1","tannerlinsley","2022-03-24 20:21:28","false","docs: comparison",19,30,0
"TanStack/query","d898f1681cdf33cafc2f25af3485bd02c5c1bc53","tannerlinsley","2019-11-19 22:37:11","false","v0.3.14",5,2,0
"TanStack/query","6b15ae02b951e7866e078e448be29db4238c1f72","tannerlinsley","2020-09-18 18:51:34","false","docs: update sponsors",14,12,0
"TanStack/query","1a02702c106c8b20602f417109824ff6058fa773","tannerlinsley","2022-07-18 19:04:52","false","release: v4.0.0",23,34,1
"TanStack/query","02852dd6b3ef6d77a454df28c6c4e5ceaf0150f7","DamianOsipiuk","2023-02-10 23:03:28","true","chore: fix ci warnings (#4940)",39,41,1
"TanStack/query","5d5c0f0f80a801aa4094d8f6708651e7bb53e5f9","Newbie012","2022-11-01 11:00:42","true","feat: eslint-plugin-query

* add @tanstack/eslint-plugin-query

* fix .eslintrc rule name

* make rule compatible with babel parser

* fix script typo

* remove dedicated example in favor of the basic example

* align package version with the other packages

* align eslint-plugin-query version

* fix displayName

* remove typescript from package

* omit call expressions from keys without the need of whitelist

* lint queryKey instead of useQuery

* update pnpm-lock.yaml

* fix auto-fix suggestion for complex ast

* better inline query key

* fix typo

* update scripts

* restore .eslintrc

* update typescript-eslint packages

* support member expression keys

* format

* should not fix with duplicate keys

* format

* empty commit (flaky test)

* should ignore keys from callback

* Update packages/eslint-plugin-query/package.json

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* add prefer-query-object-syntax rule

* fix indention

* fix headline

* add rule description

* fix lint errors

* widen import check for all adapters

* add support for solid-query (createQuery)

* docs: add eslint plugin section

* prettier

* move docs

* EsLint -> ESLint

* fix typo

* add missing dep

* update lockfile

* give credit where credit is due

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",14,38,1
"TanStack/query","7a44a79c88042e351e42024a7d178a1e8cbd20ed","ChrystianDeMatos","2022-10-08 04:46:04","true","docs(mutations): Fix spelling error (#4285)",17,37,1
"TanStack/query","255f7c66a8d4a5c33a3b167304f787c7c4acf6f5","TkDodo","2021-10-15 10:44:04","true","feat(queryClient): respect cancelRefetch flag (#2798)",23,25,0
"TanStack/query","023de41c70744ff43945f260fd8fbf626678df9e","lachlancollins","2023-07-15 09:46:45","true","fix(svelte-query): Mark svelte v4 as supported (#5716)",26,46,1
"TanStack/query","5c14392ab2f5b9dce992d2890fd42b4e44cb15b3","tannerlinsley","2020-09-02 15:42:56","false","docs: fix sponsors rendering",7,12,0
"TanStack/query","f741dd2a5ab367ac9d0fb07da067f48125aca0fb","ardeora","2023-09-24 07:11:12","true","feat(query-devtools): Add clear cache and remove btns (#6051)

* feat(query-devtools): Add clear cache and remove btns

* Fix remove button classname",10,48,1
"TanStack/query","7cf74a47512d71ee363cdfd0ca0b97d61ad46eab","justinthareja","2021-03-28 20:13:45","true","docs(examples/optimistic-updates): fix typo (#2044)",30,19,0
"TanStack/query","5f046151e197f9608c603a0f0a7724f568c039a2","AjaxSolutions","2021-01-15 21:43:32","true","fix(hydration): useMemo -> useEffect (#1643)",24,16,0
"TanStack/query","6922cda1f1b0ddbc99922904a519464773bc0a4e","Dman757","2020-06-24 18:14:20","true","docs(README) typo fix (#623)",0,9,0
"TanStack/query","35a4dd7a7ad4c0be7fa7dbede17f9f6aabbb8d8f","Mini-ghost","2023-09-07 08:06:51","true","fix(vue-query): ensure built-in types are not being unwrapped in queryFn context (#5954)

* fix(vue-query): ensure built-in types are not being unwrapped

* chore: prettier

* feat(vue-query): rename `Builtin` to `UnwrapLeaf` and add mor leaf",15,48,1
"TanStack/query","53813e45e126dcd8f846addf69c5b78322f868b8","seriousManual","2023-05-02 10:45:11","true","docs: fix the react example for infinite queries (#5361)

The example talks about a projects API that returns data in the form of
```
{ data: [...], nextCursor: 3}
```

In the example though the data returned from the API is referred to
as having a `projects` entry.
This commit uses the correct entry from the sample API.

Co-authored-by: Manuel Ernst <manuel.ernst@inovex.de>",20,44,1
"TanStack/query","5c93a2ec3dd744e73ba5dbeab74a75a7e44c6134","boschni","2021-01-09 20:31:50","true","fix: prevent missing renders (#1608)",24,16,0
"TanStack/query","0147a8ee1f05d95971baaebd6b0b06c9bdf64fbe","tannerlinsley","2020-06-24 18:11:02","false","Update README.md",0,9,0
"TanStack/query","1265818213bf63a5723880873fd14626212df050","tannerlinsley","2020-06-24 16:19:13","false","Update README.md

Fixes #620",4,9,0
"TanStack/query","f84dde04b7d49b75b3fde24b6d1867cc0c24fecf","tannerlinsley","2019-09-11 16:42:36","false","Update package.json",0,0,0
"TanStack/query","5be253017837a13554d75cff5a467557bcc7938f","lachlancollins","2023-04-15 03:40:13","true","docs(svelte-query): Fix SSR example and update svelte templates (#5243)",23,43,1
"TanStack/query","709ebdd7cbe4bd5d451c0eb715d6a3770d29a388","tannerlinsley","2023-01-11 10:48:10","false","release: v4.22.1",36,40,1
"TanStack/query","b462044b91e655dfa91d62350d44dcf396ab9871","tannerlinsley","2022-08-17 13:41:30","false","release: v4.2.1",20,35,1
"TanStack/query","02edb22f1009c06a8a72f4ef8ffd23b14a563a16","tannerlinsley","2021-01-05 19:41:03","false","docs: add axios dep",20,16,0
"TanStack/query","213ff9510d4c699c66b4dbc6237bc1b088d00d55","tannerlinsley","2020-03-04 22:28:27","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,6,0
"TanStack/query","95d47da36c7961bb93920dfa0083968a4962cb7e","tannerlinsley","2023-10-23 01:20:52","false","release: v5.0.5",5,49,1
"TanStack/query","76199778a0592df09d42c7ded86cedbf47738a4f","tannerlinsley","2020-04-20 15:55:53","false","Fix timeouts to not fire in server-like evironments

Fixes #381",5,7,0
"TanStack/query","d23d8934ce08ef0f359e77a50a03dc02aafc0932","nfm","2023-03-17 16:45:48","true","fix(query-sync-storage-persister): Relax undefined check against storage to handle null values (#5095)

* fix: Relax undefined check against storage to handle null values

Fixes #4957.

On Android WebView if `setDomStorageEnabled` is not configured,
`window.localStorage` will be `null` (rather than `undefined`).

Relax the existing conditional to check if `storage` is present to
handle both `null` and `undefined` values to remove a gotcha here.

* docs: update storage type

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",23,42,1
"TanStack/query","047005e13485afb5d637e746a67cdaae8a8fe551","CoolSpring8","2023-08-05 12:23:01","true","docs(query-cancellation): reflect AbortController is now required (#5843)",16,47,1
"TanStack/query","c1ad811f0e1dd3b1bf508e1e417425c20141aa6e","tannerlinsley","2020-08-13 20:43:29","false","Update README.md",9,11,0
"TanStack/query","4003d967e7e70a5d5738af71ea6030511157b80f","tannerlinsley","2019-09-19 05:27:19","false","v0.0.18",1,0,0
"TanStack/query","b9cb5f1464bcf3b2690e75e885093c3b239bfc9a","efilion","2023-01-25 07:18:20","true","docs(ssr): add experimental app directory guide (#4568)

* docs(ssr): add experimental app directory guide

* fixup: consistent code formatting

* Revert ""docs(ssr): add experimental app directory guide""

This reverts commits:
f6ef0164d6cbcc341ef15c999cf1e3eedf3a7336
5c48c7cffeadbdf953e45d7e4ec3080696a3d455

* [draft]: add experimental app directory guide

* fixup: drop dehydrate options

* fixup: layout.jsx consistent with create-next-app

* fixup: note on using query-core vs react-query

* docs(ssr): remove HydrateOnClient

* docs(ssr): rewrite suspense and server-side fetching section

* docs(ssr): tweaks

* docs(ssr): prettier

* docs: replace query-core imports with react-query imports

Co-authored-by: Fredrik Höglund <fredrik.hoglund@gmail.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",32,40,1
"TanStack/query","e8c72a908b23391720bc7d2f22596de5c8da7665","tannerlinsley","2020-07-08 05:01:37","false","Readme + media",7,10,0
"TanStack/query","ddd6e5a75815154f30d37441bbdf839c5095083f","Newbie012","2023-05-18 16:34:08","true","fix(eslint-plugin): fix component and hook lookup (#5426)",23,44,1
"TanStack/query","e7e5c96d5bf0b8b50fdd369871faff0727875437","tannerlinsley","2023-01-05 14:05:21","false","release: v4.20.10",36,40,1
"TanStack/query","f9f9cce852740e170974e1436d3112ce50a648ea","boschni","2021-02-12 20:44:55","true","fix: queries should not end up in an error state when a component unmounts (#1781)",16,17,0
"TanStack/query","c51498a93598cf6b308a9e017c9d59ddbb68a776","jvuoti","2021-11-26 20:06:00","true","fix(useQueries): search for unused observers if keepPreviousData (#2680) (#2866)",19,26,0
"TanStack/query","2e189a5096ce337c2fd0471cd5cad723050f8f6f","tannerlinsley","2020-12-16 14:28:59","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",14,15,0
"TanStack/query","0b8493af0580d2272d94d23ce184b8716e8044c2","tannerlinsley","2020-07-09 04:22:55","false","docs: update comparison",7,10,0
"TanStack/query","802a742cb493fb7be70321ff64353b6426736c8a","tannerlinsley","2020-07-09 06:14:03","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",7,10,0
"TanStack/query","eb462acac739be93f6b93f53fd3dc6b87568426a","TkDodo","2023-10-17 11:34:47","false","chore: new repo-header.png",6,49,1
"TanStack/query","24ac9f9e00f28a317c7bd2be2f28de0131b40b25","tannerlinsley","2022-12-01 20:18:31","false","release: v4.19.0",16,39,1
"TanStack/query","3e8f499abae9d1ca7888f73c0c38fbc9dec05ae2","ElForastero","2022-02-25 18:59:11","true","docs: update rtk-query comparison.md (#3328)

rtk-query stars counter points to an archived repo.

Query now lives in the main repo as a package.

I understand that this isn't totally right, but at least it seems reasonable not to count start of an archived repo.",24,29,0
"TanStack/query","7b14ef519a544d725f2cff99574f0a01f92b8c94","TkDodo","2021-04-02 06:57:07","true","fix(useQuery): type of initialData now corresponds to the type returned by the query-fn (#2069)",25,19,0
"TanStack/query","685dafc54029149e89c8a7d1cbd90904c3d0860d","tannerlinsley","2020-03-30 16:44:37","false","Update README.md",1,7,0
"TanStack/query","9f23b64396255722d8e874df9b7192d234e64aed","Liam-Tait","2022-03-27 12:08:07","true","fix(devtools): add keys to mapped entries for Explorer (#3446)",16,30,0
"TanStack/query","42596acbf44bf79e368454524f606d1eab8a1b5d","tannerlinsley","2023-10-13 06:04:53","false","release: v5.0.0-rc.13",7,49,1
"TanStack/query","99fd14540c91978c8823679ac11cf27cb2e488dc","henryqdineen","2020-05-14 04:10:05","true","perf(babelrc): enable externalHelpers option for babel-plugin-transform-async-to-promises (#490)",11,8,0
"TanStack/query","eb2da76592e04ae15d97314abc73ab759e63d7c4","zorzysty","2022-08-11 15:54:58","true","docs(examples): Migrate playground example to vite (#3955)

* docs(examples): migrate examples/react/playground to vite - adjust file structure

* docs(examples): migrate examples/react/playground to vite",34,35,1
"TanStack/query","debece31a5aa5f4a1c800c7be84ed669fba5a092","statico","2023-10-18 20:29:04","true","docs: Typo in optimistic-updates.md (#6182)",9,49,1
"TanStack/query","a5b2216be6b84764ff93280741c3ebf8677ffa93","TkDodo","2021-06-05 10:23:00","true","refactor: use react-state for one-time initialization over instance refs (#2253)",23,21,0
"TanStack/query","9f5c70d45d170f12bfb9bd5065d5ccbd7a5b35b8","tannerlinsley","2019-11-06 15:20:33","false","v0.3.0",1,2,0
"TanStack/query","046f354d93b1d6f91b874d8f8941dd6bae610bee","tannerlinsley","2020-07-15 17:41:48","false","docs: update example dependencies and lock files",10,10,0
"TanStack/query","fec3daa38173d9905e78df60f58e76395c0a1e5d","TkDodo","2022-09-28 18:58:29","false","chore(ci): fix yml syntax",15,37,1
"TanStack/query","128e578c08c19f50306db4de34321d6d34016cdb","TkDodo","2021-12-14 12:08:19","true","fix: unsubscribe correctly in onlineManager and focusManager (#3092)",20,27,0
"TanStack/query","78a1e8a37ed80944e60559c0fde9fc6172a77bfe","melanieseltzer","2021-01-15 21:44:29","true","docs: clarify setting cacheTime for persistWithLocalStorage to work properly (#1612)",23,16,0
"TanStack/query","15f53ca614facb8999ff557b62ab081fd6d1ef43","boschni","2020-08-20 16:54:03","true","refactor: move prevent set state in render logic to useIsFetching hook (#874)",16,11,0
"TanStack/query","1317b04e91ffa5b80e6ceb45f8d4ad8b85c0194a","tannerlinsley","2020-03-30 21:00:32","false","Update README.md",2,7,0
"TanStack/query","7eebeb0bb6a8429e638f6c42d84959b825e80a48","Songkeys","2022-07-20 17:46:13","true","fix(react-query-devtools): support cjs in noop build (#3884)

* fix(react-query-devtools): support cjs in noop build

* fix: typo",24,34,1
"TanStack/query","ade0757344dacb085e721504b1362923746e0f09","tannerlinsley","2022-11-04 15:26:46","false","release: v4.14.3",15,38,1
"TanStack/query","bffdc0e8ddebc1adfd1f9e5ed59b55ba7e39b2e7","boschni","2020-12-19 10:29:23","true","fix: prevent redundant renders (#1487)",9,15,0
"TanStack/query","588d54cfc54d3c62e486d8f6cdfd12eed98c36b4","jcmnunes","2020-05-15 00:00:43","true","Add cancelQueries types and missing links in docs (#494)

* fix(Types): add queryCache.cancelQueries types

* docs: add missing links to cancelQueries",11,8,0
"TanStack/query","15f4186f355ca5f97481b590efd1244a18826a42","boschni","2020-08-24 16:18:39","true","refactor: reduce infinite query renders and bundle size (#914)",11,11,0
"TanStack/query","4c9039d5275a7dab7dd240451ae7668b67c8c503","ardeora","2023-09-25 06:16:29","true","feat(query-devtools): Devtools Compact UI (#6055)

* patch(query-devtools): Devtools Compact UI

* Add settings header

* Fix font family on settings popup

* Fix sub-section button font-size

* Add height to query status count",9,48,1
"TanStack/query","df37d35609a66bdac2f1505f97711d66f032e514","lachlancollins","2023-06-14 03:04:48","true","chore: Reorder and rename config files (#5579)",21,45,1
"TanStack/query","70fd5bb46391a5e6f727e7ec236abea58c6c2731","KevinVandy","2022-11-28 07:02:57","true","chore(react-query-devtools): upgrade match-sorter-utils (#4561)

* Upgrade match-sorter-utils in react-query-devtools

match-sorter-utils should no longer have the bad transpilation problem anymore.

* run install",16,39,1
"TanStack/query","0bf38da923abc1b2e098f60cff9ca1f38d5d1c45","tannerlinsley","2020-06-24 22:41:48","false","chore: revort index in basic example",0,9,0
"TanStack/query","9b26181b0afbbb0f99ec6ab3b37c0d6edbd6c6e1","tannerlinsley","2020-03-26 06:53:21","false","Add Star Wars example",0,6,0
"TanStack/query","faae5e1c248ccdbf80bbdd654cb0c319a5e0b1cf","tannerlinsley","2019-09-11 16:43:39","false","Update package.json",0,0,0
"TanStack/query","37e635a04c7f09e2a2ba5e091a043ab8875d2a0a","tannerlinsley","2019-09-11 16:27:10","false","Update README.md",0,0,0
"TanStack/query","e4e893056bb4d29f45e2e96cbd3c91f6bf81c23d","tannerlinsley","2023-10-29 13:35:52","false","release: v5.4.3",4,50,1
"TanStack/query","f81218204fa66075948935893305e69fcbbfc26e","TkDodo","2022-07-19 06:09:52","true","fix(react-query-persist-client): define react-query as externals (#3851)",23,34,1
"TanStack/query","2b26c1ab0dd025584a8b02b2f54a38b58ad25e7f","ruisaraiva19","2020-08-20 02:30:27","true","chore(actions): add cache to NPM packages on GitHub actions (#888)",15,11,0
"TanStack/query","3a9dc43f607759b8f3f4ea658ee768fe5fc1c179","DamianOsipiuk","2022-09-18 09:38:24","true","fix: serve esm.js for webpack 4 (#4183)",22,36,1
"TanStack/query","216453059f77b14fed6db7aeb034335eea4f687a","ashwinGokhale","2021-02-04 08:53:44","true","feat(types): Add optional cancelRefetch field to ResultOptions interface (#1663)

* feat(types): Add optional cancelRefetch field to ResultOptions interface

* feat(docs): Add cancelRefetch documentation for the refetch function",25,17,0
"TanStack/query","3e25f51d0e70fb118de6296bf65047e24b3ad9ee","TkDodo","2023-06-25 14:19:15","true","refactor(rect-query): prefer client-only import over 'use client' (#5626)

* refactor(rect-query): prefer client-only import over 'use client'

for things that cannot work on the server, like the QueryClientProvider or the hooks; this will give better error message when attempted to be used in a server component

* chore: update rollup-plugin-preserve-directives to 0.2.0",24,45,1
"TanStack/query","5e83bd3a311de0cbc8be091d1620cb8433899660","tannerlinsley","2023-08-04 13:37:46","false","release: v5.0.0-beta.13",16,47,1
"TanStack/query","1833366714db3aa343c7739bd4df4078cc2a360e","tannerlinsley","2023-09-10 18:35:21","false","release: v5.0.0-beta.24",16,48,1
"TanStack/query","48fe7412204b1f95b97280c1c17e1e96a7e7eb44","bastibuck","2023-10-11 03:52:48","true","feat: allow editing of boolean values (#6131)",5,49,1
"TanStack/query","75a042580a04bfbf9c929b0ce87d3cd6370cbc09","boschni","2020-12-18 10:05:01","true","fix: make sure typed query fn contexts are accepted (#1476)",9,15,0
"TanStack/query","93db5b61246dcd381d699054de48fca685bef73b","boschni","2020-09-11 14:21:15","true","feat: add reset error boundary component (#980)",10,12,0
"TanStack/query","c5f4439f3115bda7fbc42210062022e0433df015","tannerlinsley","2020-03-04 18:46:40","true","Update README.md",1,6,0
"TanStack/query","d6b1f4bad9cbd1ecb2f5dd58bfeb6ca8cd3361a2","tannerlinsley","2020-07-29 16:38:54","false","docs: fix RQE callout padding",12,10,0
"TanStack/query","79b513c63311ee1efaa037e4e17138767fc96c14","tannerlinsley","2023-09-16 15:45:21","false","release: v5.0.0-beta.30",16,48,1
"TanStack/query","38da8fca806a506f5e757f72d0ad1c1d1dccf58f","tannerlinsley","2022-09-26 11:34:42","false","release: v4.6.1",16,37,1
"TanStack/query","a1d65df46b1ecb9b2989527e8894fa433f364875","tannerlinsley","2022-11-28 09:02:05","false","release: v4.18.1",15,39,1
"TanStack/query","6c334e8bb76fa146a57db079a9e75c40b46fa963","tannerlinsley","2023-03-03 19:43:33","false","release: v4.24.13",30,42,1
"TanStack/query","a536773b00f9387463a7bac8a436c45fee4eec07","jmsims2","2022-02-05 07:34:37","true","fix(types): export QueriesOptions and QueriesResults types for useQueries (#3251)

* refactor(useQueries) export QueriesOptions type

export the QueriesOptions type

closes #3250

* refactor(useQueries): add export to index

Add the export of the QueriesOptions type to the index file

* refactor(useQueries) export QueriesResults type

Export QueriesResults type

Co-authored-by: Jeffrey Sims <jeffreysims@Jeffrey-Sims-Mac.local>",24,29,0
"TanStack/query","eb301fc908cc456352699041e9717bf232e354a3","boschni","2020-12-16 01:46:16","true","fix: allow queries to be fetched with zero cache time and do not hydrate it (#1442)",16,15,0
"TanStack/query","228b1f0f2b604047cb52ea5070fa3328b62c176f","nahtnam","2023-01-08 18:56:12","true","feat: export default hydration methods for easier extension in `dehydrateOptions` (#4751)

* export default hydration metods to allow for easier extending

* pretty

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",36,40,1
"TanStack/query","6ac08b4a00c4e17cb9b45c373f330f4f4edc173d","TkDodo","2023-09-07 12:00:09","true","chore: Merge remote-tracking branch 'origin/main' into beta (#5974)

Merge remote-tracking branch 'origin/main' into beta",15,48,1
"TanStack/query","afcba6066d238b9ef34386e6da4f372b3e6f7ca0","TkDodo","2021-08-20 17:36:04","true","feat(devtools): show disabled badge for a query if all observers are disabled (#2592)",22,23,0
"TanStack/query","08857a42e4a5f58d1a3730bfabd40855c0ce94fa","tannerlinsley","2022-09-18 09:45:42","false","release: v4.3.7",21,36,1
"TanStack/query","816a20fa0644e6695bf88168911bfaaae5bc23e6","tannerlinsley","2019-11-13 21:27:33","false","Update now.json",1,2,0
"TanStack/query","35346218bc1d5aeb23079ffc2d4848e2a926d0c1","BerniWittmann","2021-11-11 07:58:20","true","docs(optimistic-updates): ease wording in introduction (#2908)",20,26,0
"TanStack/query","d97d50048f390795b1dfed3142c1e4eace1bdc4b","tannerlinsley","2019-11-04 21:15:17","false","v0.0.16",0,2,0
"TanStack/query","3d967bf8ae9404404d20824cc4ff263e6aa0f757","boschni","2020-09-12 15:11:02","true","feat: add support for tree shaking (#994)",10,12,0
"TanStack/query","c1aa2a5c21edcfd3f19eff17b889fb1e3c013c15","TkDodo","2022-08-19 12:22:29","false","docs: update blogposts",23,35,1
"TanStack/query","e4138ecda1d566e7a851fac2cb03062a924b7c19","maciej-baruch","2023-11-05 11:01:34","true","fix(react-query): non continuous suspense with useSuspenseQueries (#6298) (#6303)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",5,50,1
"TanStack/query","932dbc4abe6ae622c766b8e03aa353cf0171f0a8","DamianOsipiuk","2022-09-19 06:26:22","true","fix: react native uSES (#4185)",18,36,1
"TanStack/query","a8b0a3bb053e25bb660b2b7e8953af29fca8f935","gavinsharp","2022-07-28 14:07:46","true","docs(useQuery): clarify behaviour of useQuery ""select"" with regard to caching (#3933)

Clarify that the `select` function passed to `useQuery` does not affect what gets cached; it only affects what gets returned to the consumer.",23,34,1
"TanStack/query","3ebb4547561185f79d3767ce060a59ff848dbe43","kachkaev","2020-08-24 15:35:02","true","fix: Fix typing for refetchInterval (#908)",11,11,0
"TanStack/query","31bcaf1b54b88ea8b583c0fe7918b6493ca68643","TkDodo","2022-03-24 19:33:19","true","fix(useIsFetching): account for fetches happening in the same render cycle (#3438)

if a fetch happens in the same render cycle as useIsFetching is mounting, but it is mounted after the query, what happens is that:

- the initial state of `isFetching` is `0` because the effect to fetch the query hasn't started yet
- the query effect runs before the isFetching effect, which means we miss the event, thus the next event we get from the subscription gives us 0 again

so we need to check for isFetching in the effect that runs to set up the subscription as well. This catches fetches that basically started in the same effect cycle, but before ""our"" effect ran",20,30,0
"TanStack/query","23f19fa661c35da1b054c3054bc2af7b56fef3c9","tannerlinsley","2023-10-25 13:51:37","false","release: v5.4.1",7,49,1
"TanStack/query","a1bb543837276235293a7cc72997ffdfa089c9b2","tannerlinsley","2019-09-23 01:03:24","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,0,0
"TanStack/query","48a0507f5a528f6fec47910ccb1caa2d26bd942e","tannerlinsley","2020-02-17 06:57:44","false","0.4.2",1,5,0
"TanStack/query","e494c772bf26d3e71f8b0760ff748f7355463d1c","tannerlinsley","2022-08-12 18:49:29","false","release: v4.1.2",24,35,1
"TanStack/query","00eda9da9a81a974f0f4190eb108fe9ac18a7a96","tannerlinsley","2019-09-17 20:12:34","false","v0.0.17",1,0,0
"TanStack/query","112baa515400f3ebb42fc1133f186b3097d27748","tannerlinsley","2019-11-05 05:26:50","false","Rename autoRefetch to refetchInterval",0,2,0
"TanStack/query","37ab5cc61925393c9e0f6150aa783f7768bafdba","tannerlinsley","2019-11-04 21:40:53","false","Update README.md",0,2,0
"TanStack/query","b8b05623497ca42075baea2e744073a7b2b73009","leon-fong","2023-03-11 08:56:08","true","docs(queries): rename `success` (#5110)",30,42,1
"TanStack/query","fc1425062f79723fbe32a634cd0d5a65a78c1272","TkDodo","2021-03-08 08:05:51","true"," fix (QueryClient): disable context sharing per default (#1912)

* fix (QueryClient): disable context sharing per default

but still allow for it by adding a `contextSharing` boolean prop when creating the QueryClient context

* document the contextSharing prop",27,18,0
"TanStack/query","a1050eb0d7c7c44731fc7e6839e77f69f83bab67","TkDodo","2022-08-26 09:28:16","false","docs(query-cancellation): remove reference to old cancel function

This doesn't exist at all anymore in v4",20,35,1
"TanStack/query","75cea4d537404b45121a67eb76583fd76117b964","dglsparsons","2022-07-19 13:14:39","true","docs: Change docs code-snippet types to tsx (#3857)

* Change docs code-snippet types to tsx

The tanstack.com site shows the code-snippets as `bash` as a fallback,
as js is not expected as a language type. (see
[here](https://github.com/TanStack/tanstack.com/blob/main/app/components/CodeBlock.tsx)
for allowed language types).

In addition to allowing JS as a snippet type (https://github.com/TanStack/tanstack.com/pull/17),
changing the documentation to be `tsx` ensures that syntax
highlighting and the language type appears correct.

* Apply suggestions from code review

* Update docs/guides/disabling-queries.md

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",25,34,1
"TanStack/query","ff28925e46584806ed8449b163e9a36cbad2e913","tannerlinsley","2020-07-08 15:39:07","false","docs: add discord section",7,10,0
"TanStack/query","0b66a6306debebfef2f137544970f9340677d95f","medayz","2020-12-18 17:12:37","true","docs: fixed wrapp typo (#1480)",10,15,0
"TanStack/query","3993a1f0c92fe9a28f1865e0e064b1093e23a37a","tannerlinsley","2022-10-02 20:11:44","false","release: v4.9.0",17,37,1
"TanStack/query","934b8941ec5d8b8566343224ad2c1278a282d059","tannerlinsley","2022-12-30 08:37:28","false","release: v4.20.8",37,40,1
"TanStack/query","956b0b4a3b86131016413233fc062e3a18d3fb40","tannerlinsley","2022-07-18 22:36:14","false","Merge branch 'main' of https://github.com/TanStack/query",24,34,1
"TanStack/query","7e98e1ca3c4f4e90a682cc3d26857339b8d72037","tannerlinsley","2021-02-16 23:51:31","false","fix: do not attempt to use global for context sharing",12,17,0
"TanStack/query","b32da31e383151b6bc078bf056af61e161322cd5","emzet93","2023-02-18 11:05:41","true","perf(persist): subscriber calls persistQueryClientStore only on cache-related events (#4884)

* perf(persist): subscriber calls persistQueryClientStore only on cache related events

* refactor(persist): extract NotifyEvent type shared between query and mutation cache

* refactor(persist): move cacheableEventTypes declaration outside the function

* test(persist): add test checking `persistClient` calls frequency

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",31,41,1
"TanStack/query","901e826f394d185f2e7f7b9641c20ee77327bea1","janlat","2023-01-22 15:56:54","true","fix(core): do not call mutate callbacks if mutation started after unmount (#4848)

* test: add mutation callback after unmount test

* test: make test more resilient

* fix(core): do not call mutate callbacks if mutation started after unmount

* test: adapt tests to what we have in v5

- one test has been removed (because setState was removed entirely)
- the second test has been re-written to not use internals anymore, and it works in v4 as well

* fix(core): do not call mutate callbacks if mutation started after unmount

by making sure the callbacks are only invoked if we have an active listener

* chore: prettier again

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",31,40,1
"TanStack/query","79825b66e9bf1badbdb8baae4f385ee0355efcf6","tannerlinsley","2020-07-08 14:54:46","false","docs: fix nav sizing",7,10,0
"TanStack/query","787efb5d327e1cae89903140ec8861469a081753","tannerlinsley","2023-08-19 19:12:13","false","release: v5.0.0-beta.17",22,47,1
"TanStack/query","714592205f6f0ad06ebbfb2dea62546b5b7bec01","tannerlinsley","2023-07-24 10:13:53","false","release: v5.0.0-beta.0",23,46,1
"TanStack/query","44ab28d4f29725229460d0ba19382d0ebff59807","tannerlinsley","2020-02-28 16:19:38","false","Fix: Rapid paginated data requests don't trigger an unecessary loading state

Closes #169",2,6,0
"TanStack/query","b57dc17f4e0f2e90db56d5f4278916a1fabb8ba6","tannerlinsley","2022-07-18 22:19:04","false","Merge branch 'main' of https://github.com/TanStack/query",24,34,1
"TanStack/query","8e13afa259fdc6560754d7b3614f409da305667f","ZackDeRose","2023-03-17 07:49:50","true","chore: Local Task Caching for all Revelant tasks (#5134)

* caching added for eslint for packages

* project definition added for scripts project and test:eslint target

* adding task caching for test:types

* adding appropriate dependsOn and outputs to test:types

* updating test:react:17

* running many on test:ci for nx scripts

* adding output to test:types

* adding root project and format task

* adding caching for build and test:build

* fixing frozen lockfile error in ci

* fixing pnpm build to include the build of the eslin-plugin

* adding build for svelte-query as well

* parallelizing bundlewatch and validate pacakges script

* cleaning up a bit more

* moving build config to the root project",23,42,1
"TanStack/query","d7b1b841c84d1171c9b4d116c6e37d42c9d6f177","TkDodo","2023-08-01 10:47:22","false","chore: fix import order",18,47,1
"TanStack/query","ba81870efbf0e0d5f900b1daad1b50b1057ed323","HenriqueDerosa","2022-03-26 07:28:47","true","fix(devtools): serialize bigint types (#3440)

* fix(devtools): serialize bigint types

* test(devtools): Add missing test for displayValue

* refactor: Improve code for displayValue function",18,30,0
"TanStack/query","f37fcf3f39fe55e1f6dec72749d89c0a91460cba","TkDodo","2023-10-20 08:58:13","false","docs: hashKey",13,49,1
"TanStack/query","f57c8dc15ec7cc20c674892eacd7596a4df39085","girishsontakke","2023-01-24 10:52:11","true","feat(client components): add `use client` directive at the top of files having client components (#4738)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>
Co-authored-by: Fredrik Höglund <fredrik.hoglund@gmail.com>",33,40,1
"TanStack/query","55bdf7794ba7f6ceac4333d7bc0aff0ba6a930f0","ZackDeRose","2023-04-02 07:14:26","true","chore: switching to an affected strategy (#5215)

* switiching to an affected strategy

* updating base affected option for ci and ci-v3 workflows

* Update .github/workflows/ci-v3.yml

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* checking github context

* checking pnpm version

* fix?

* does not like main - let's use a sha then

* checking git head

* checking git in general

* fix????

* fix???????? pleeeease

* still in detatched head state

* try checking out the pr head sha?

* checking out pr branch

* checking githubref

* full gh ref

* dumping context again

* try to checkout head ref

* adding repo prop

* git logging

* trying with sha for base

* fixing other jobs

* fixing other jobs again

* reverting root specific projects to run many

* removing special stuff from build test

* testing affected

* reverting change

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",24,43,1
"TanStack/query","667efe37a3c2fcf82aa37fb44aa046687be04501","DamianOsipiuk","2022-10-07 16:02:30","true","fix: use match-sorter-utils, simplify sorting (#4258)

* fix: use match-sorter-utils, simplify sorting

* fix: change localstorage key

* fix: exclude babel preset for vue

* test: fix test",16,37,1
"TanStack/query","56faa1fb6837f176061d5ba85bd5b61da96feea9","tannerlinsley","2023-08-19 11:34:36","false","release: v4.33.0",24,47,1
"TanStack/query","397d8b71eb4c904783c7091ca94e52de30d7e036","boschni","2021-02-04 07:50:29","true","fix: notify on updates between mounting and subscribing (#1737)",29,17,0
"TanStack/query","bb3535d0ea52d770fb3c30d895182109b18e2588","jelteliekens","2020-06-29 15:37:41","true","fix(types): improve v2 types (#655)

* fix(types): add variables argument to onError and onSettled and add generic TSnapshot

* refactor(types); add generic result type in BaseQueryOptions",2,9,0
"TanStack/query","1e1e0f67e63c4efa08eab0861de03249053ff8d6","kentcdodds","2020-06-24 18:19:12","true","fix: don't schedule garbage collection unnecessarily (#627)

This doesn't actually fix the issue I'm looking into, but I did notice that this timeout is scheduled even when the query is cleared and I *think* it shouldn't be. If we do need to garbage collect something, that should happen in `clear` I think.",0,9,0
"TanStack/query","06feac8a2daf720b0973c894f1f8f4a33c535baf","CreativeTechGuy","2020-06-15 01:15:18","true","chore: upgrade dependencies (#583)

* chore: upgrade dependencies

* add workaround for suspense test

* remove size workflow",13,9,0
"TanStack/query","7fa3c027cca843f18d513f1a26242837b1c1ffd1","tannerlinsley","2020-03-26 06:00:58","false","Rename example",0,6,0
"TanStack/query","84139325de1d4d35cbeb66a13fd6f17229583e1d","adibfirman","2020-07-22 15:57:29","true","docs: add axios library to prefetching example (#791)",12,10,0
"TanStack/query","16131c30f8a2797ffac9b0f2056464ec3e58c685","Andrewnt219","2021-11-17 17:16:16","true","fix(devtools): improve devtools a11y (#2947)

* fix(devtools): improve devtools container a11y

default element changes to aside from footer because aside
represents a portion of a document whose content is only indirectly
related to the document's main content.
aria-label is also added to replace the text ""generic"" in a11y tree.

* fix(devtools): add aria to devtools toggle button

aria-expanded indicates open/closed of the menu
aria-haspopup indicates this is a menu button
aria-controls to link to the menu, also added aria-label on the menu to
label it.

Read more: https://www.w3.org/TR/wai-aria-practices/examples/menu-button/menu-button-links.html

* fix(devtools): menuitem are visible in a11y tree in closed devtools

This is because the element is just hidden visually, but is still inside
the DOM. The added conditional display only affects the inner container,
which means the animation of opening/closing is reserved.",25,26,0
"TanStack/query","7cb82a7268a91618ee104c1942eb181826c2f72d","tannerlinsley","2023-10-30 13:37:52","false","release: v5.5.0",4,50,1
"TanStack/query","b5d1f0d5464f849efb76d8eeb6486eedaef212a2","boschni","2020-08-04 13:25:01","true","test: fix suspense test (#831)",5,11,0
"TanStack/query","21b9b01e5dd6eb84ee24fd3e9f753657e44a0be4","CreativeTechGuy","2020-06-14 02:45:49","true","fix(types): change return type of removeQueries (#582)",17,9,0
"TanStack/query","0c3fa76d1c936b42ca29974080e43608f00ab00c","tannerlinsley","2020-03-30 16:53:17","false","Update CHANGELOG.md",1,7,0
"TanStack/query","6b2bb21079e47dd292c0c39a63437a06bcd6414b","ericchernuka","2021-01-07 04:39:47","true","docs: Fixes incorrect prop variable in Todos example (#1590)

The prop referenced `completed` But the variable used was `todoId`.",23,16,0
"TanStack/query","a325801d95acb69d747eb9bce3ddd6906db57ecc","KATT","2022-04-21 12:21:08","true","test: add test for status=error (#3411)",21,31,0
"TanStack/query","48612006306fd9006aacc7cd4b9cf97b68dcbcf5","TkDodo","2022-11-06 15:26:34","true","refactor(core): derive meta from options (#4463)

this simplifies code because we don't need to pass meta around manually; we can keep the same public interface with a getter",15,38,1
"TanStack/query","ac944144d47abbede16a4513e6ef4693742a5d10","MichaelDeBoey","2020-07-29 22:55:52","true","fix: Update utils.ts (#812)",13,10,0
"TanStack/query","2771a15403cb2e7c70022b850e8c54c6d2b3d8a0","arnaudbzn","2021-10-23 14:11:16","true","fix(useBaseQuery): set cacheTime to 1 in Suspense mode when cacheTime is set to 0 (#2821)",21,25,0
"TanStack/query","5335294c671d58adb78a283c37bae012d03412e8","ZackDeRose","2023-04-13 07:13:40","true","chore: removing docs from default inputs (#5212)

* removing docs from default inputs

* fixing caching so touching md files does not invlaidate the cache

* rerun ci

* rerun ci

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",21,43,1
"TanStack/query","5d4108426965070182c4b93fbb0e5e41599aa904","raoufswe","2020-07-09 01:23:14","true","docs: center TWButton children horizontally in small screens (#722)",7,10,0
"TanStack/query","6b0cd191a454c678fdcb6470b15089cedd23e719","raoufswe","2020-07-11 16:00:44","true","docs: fix incorrect active nav link (#741)",7,10,0
"TanStack/query","3fe2b4af439ee057691c2e6ae2d0e88cab18046f","peter-lim91","2021-07-23 11:38:13","true","docs: fix typo (#2480)",26,22,0
"TanStack/query","be6bfbb1bcd0ef5521413e92e9746eef07486276","CurtisHughes","2021-06-11 09:38:54","true","feat: session storage persistor (#2282)

LocalStoragePersistor is now integrated with WebStoragePersistor, which can take any `Storage`",26,21,0
"TanStack/query","b6b05d5e7a2342f48cc546495cea2d3ad7fde271","matthis-d","2020-07-21 15:32:23","true","docs: fix `fetchMoreVariableOverride` description (#786)

There was a reference to a previous API instead of `getFetchMore`",11,10,0
"TanStack/query","1bb13e2d2330fb4abcfcdb48a234504e7c986034","aboqasem","2022-10-04 11:35:43","true","feat(react-query-devtools): use `superjson` to display values (#4085)",17,37,1
"TanStack/query","e23f9343fa5530b9e4175a8639909071cde860ba","boschni","2020-07-29 20:47:01","true","refactor: add typescript support (#767)",12,10,0
"TanStack/query","75274571747a65a8706da3f8f63df79da912dc54","wolverineks","2020-06-29 00:01:27","true","fix(types): v2 (#626)

* enable types, update simpleQuery

* update MutationState

* stricter query type

Co-authored-by: Michaël De Boey <info@michaeldeboey.be>

* verify imports

* verify import 2

* update fetchMore

* move ready condition to enabled

* update MutateOptions

* update config

* fix QueryResulltBase

* remove queryKey function

* remove duplicate type

* update prefetch

* functions are not valid queryKeys

* add option to queryFn, formatting

* Add dtslinting to ci test

* remove deprecated variables

* add types to formatting

* add resetErrorBoundaries

Co-authored-by: Michaël De Boey <info@michaeldeboey.be>",0,9,0
"TanStack/query","a130369c02ac551709925a92b594b8378110325d","tannerlinsley","2020-06-11 21:13:06","false","Create config.yml",17,9,0
"TanStack/query","09797c2c536808278326a3ae49110a584d3edf0f","cschwebk","2020-01-09 00:05:06","false","call queryFn cancellation methods if provided (#94)",14,4,0
"TanStack/query","5c6d98d453313805e8f6ceab5df33fbe761b5cbf","lachlancollins","2023-07-24 11:12:45","false","chore: Fix Nx config for beta branch",23,46,1
"TanStack/query","a46bc87bc70df1c4407d8bd3f097593ab7fe9b55","ardeora","2023-10-10 19:13:59","true","fix(solid-query): Default `reconcile` to false (#6125)",8,49,1
"TanStack/query","bbb7f901c9694d7c2e524dbbea4c87ce0b622a81","tannerlinsley","2023-09-29 14:58:22","false","release: v5.0.0-rc.2",7,49,1
"TanStack/query","27b31f3b3fd7eb3cbe3bd6274216e85fa71636dd","TkDodo","2023-09-25 08:24:16","true","feat: rc release (#6058)",9,48,1
"TanStack/query","418c48f611817caf323c2b127f9e51f522109dad","TkDodo","2021-08-10 09:00:34","true","fix(useQuery): apply placeholderData also to disabled queries (#2541)",24,23,0
"TanStack/query","195772e8f2768d1d8db064ae8955b2dd7e0efd0f","lachlancollins","2023-04-23 02:23:39","true","chore(svelte-query): Update @sveltejs/package to v2 (#5242)",22,43,1
"TanStack/query","55b8f022eafe2c1ac4dbdde60ee94833b4e8f1ab","TkDodo","2023-10-17 09:04:59","false","chore: suspense docs",6,49,1
"TanStack/query","b20f1f79b89e8f019a19e80aad579e14f28d2f4f","TkDodo","2023-08-04 13:33:10","true","feat(react-query): useSuspenseQueries (#5836)

* docs: suspense

* feat: remove suspense boolean from useQuery and useInfiniteQuery

* feat: useSuspenseQueries

* docs: useSuspenseQueries

* test: fix suspense in tests

* docs: offline caching is not experimental

* tests: there is no throwOnError on useSuspenseQueries

* chore: exports

* chore: try to stabilize a flaky test",16,47,1
"TanStack/query","7677c64b10055c3084507e4eb6c5ecdd68b2f0a8","TkDodo","2023-10-16 10:56:32","false","docs: remove references to suspense:boolean",6,49,1
"TanStack/query","0f581b4c89d12c6b1f3e1b0ab1239d1428ed7ea0","Newbie012","2023-10-01 14:49:33","true","feat(eslint-plugin): add stable-query-client rule (#6077)

* feat: add stable-query-client rule

This commit introduces a new rule in the eslint-plugin-query package. The rule, named 'stable-query-client', ensures that the QueryClient is
stable. It checks if the QueryClient is either extracted from the component or wrapped in React.useState. If not, it suggests a fix to wrap
the QueryClient instantiation in a React.useState call. This rule is recommended to be set as an error.

* update recommended snapshot

* fix eslint

* check only immediate instantiation

* fix:  allow QueryClient invocation in react server components

Updated the stable-query-client rule to allow the invocation of QueryClient inside react server components.

* docs: stable-query-client

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",9,49,1
"TanStack/query","53e8424041d1b6765d03fcf61d6d6e754b51c4c8","bugzpodder","2020-06-27 05:48:21","true","fix: disabling query in suspense mode (#643)",4,9,0
"TanStack/query","89e3c07a0bbbb0e35c1127a196e61e918486b606","DamianOsipiuk","2023-08-01 20:00:33","true","fix(vue-query): prevent uncaught exception in suspense() (#5825)

Co-authored-by: ssendev <mt@ssen.dev>",19,47,1
"TanStack/query","f28f7c9a04e12a2caf43cea7d44e4d95b730bb9c","tannerlinsley","2019-11-13 17:28:54","false","Fix issue where variable hashes could contain arrays or similar number/string pairs",2,2,0
"TanStack/query","1d480c394dd6bc499a9fd9ada983aeff24942948","tannerlinsley","2020-05-05 18:01:35","false","Update README.md",10,8,0
"TanStack/query","6f7d8aa8c37a59afe74e81d7cd82c1d57343d428","tannerlinsley","2022-03-26 14:28:26","false","Update comparison.md",17,30,0
"TanStack/query","1aa1452fdb9208ca5ec3cf4f71bb13793847593f","tannerlinsley","2019-12-02 08:01:05","false","v0.3.19",3,3,0
"TanStack/query","7b0bda797b15bfdaefd3899a44bb312538273dff","tannerlinsley","2020-09-24 13:56:31","false","docs: fix suspense example

Closes #1078",10,12,0
"TanStack/query","737110d6b71b536d93ef3c2559f202b8ad3b05b9","tannerlinsley","2023-09-01 05:46:08","false","release: v4.34.3",12,48,1
"TanStack/query","c6dbee7a96384ed78749a99ebaed1c7ce333a043","tannerlinsley","2020-07-09 06:37:20","false","docs: reorg comparison table",7,10,0
"TanStack/query","4d762a4ffe16ea126c432460699f04bf73463f23","tannerlinsley","2021-10-26 15:04:56","true","Update index.js",19,26,0
"TanStack/query","a317633b37e90111f1c7373b7263d4609bb6580e","AEmad01","2023-04-10 09:39:59","true","perf(useQueries): optimize findMatchingObservers fn in queriesObserver for large datasets (#5247)

* perf(useQueries): optimize findMatchingObservers fn in queriesObserver for large datasets

* optimize finding unmatchedObservers in queriesObserver

---------

Co-authored-by: aemad01 <ahmedeamd199824@gmail.com>",22,43,1
"TanStack/query","f61b908014bf936ebd6f51758c746cd07eedf460","zorzysty","2022-09-18 06:20:08","true","refactor(tests): Get rid of TS errors in tests files (#4180)

* chore: get rid of TS errors in tests files

Test files in most packages were importing `tests/utils` from the root of the repo causing hundreds of typescript errors. This commit collocates these utils in each of the packages and removes 'exclude' statements from all tsconfig files as they are no longer necessary for the typechecking to pass.

* style: fix formatting

* fix: resolve broken references",22,36,1
"TanStack/query","6b5bcbcf39bfa4d6cfa31d95f576afaf22fa5c34","TkDodo","2023-01-30 16:49:22","true","fix: Revert ""fix(core): make sure pausedMutations always execute in serial (#4902)"" (#4905)

This reverts commit 8991d7c0193c91fb17a97998bdbcda4363943f35.",30,41,1
"TanStack/query","b528564f20c6993483032a4638664ccfce9be8b8","TkDodo","2020-06-02 16:33:17","true","fix(types): adapt type definition of dataOrUpdater in setQueryData (#540)

since the updater receives `T | undefined`, it is difficult to construct a `T` from that. oldData can legitimately be `undefined`, but since `getQueryData` can also return `undefined` at any point, it makes more sense to have the updater be able to return `undefined` as well, which also means that `data` itself can be `undefined`",15,9,0
"TanStack/query","ba96f0b415fbba238a485fbd812a0304e666e685","TkDodo","2023-10-10 06:23:14","false","Merge branch 'main' into rc

# Conflicts:
#	docs/react/devtools.md
#	packages/vue-query/package.json
#	packages/vue-query/src/useBaseQuery.ts",8,49,1
"TanStack/query","46a55845127c9d2a7e678334a14eff866a746535","kamranayub","2020-07-31 21:06:41","true","fix(types): Fix defaultConfig typing for makeQueryCache (#807)

* Add failing type test

* Add failing error test

* Passing type test

* revert settings.json dangit

* ci",14,11,0
"TanStack/query","4d859e9ab16169da45b2f863c9380224301e6fb4","jomefavourite","2023-09-08 12:28:23","true","docs: Update dependent-queries.md (#5963)

* Update dependent-queries.md

This is to show how the useQueries hook can also be dependent

* Update dependent-queries.md

* Update dependent-queries.md

* Update docs/react/guides/dependent-queries.md

Thanks

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* Update docs/react/guides/dependent-queries.md

This makes things easy, sometimes I forget we have the select option 😅

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* Update dependent-queries.md

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",15,48,1
"TanStack/query","21bf4df6d202d51d78790002a2af8c2cb85cc463","tannerlinsley","2019-12-01 23:22:46","false","0.3.18",2,3,0
"TanStack/query","a2d1f76b6a3518e10f820d3509319199e16986c9","tannerlinsley","2020-07-14 22:37:30","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",10,10,0
"TanStack/query","b8a0b99367f4c5419f8dc8ca96fb803000afbbaf","lgenzelis","2020-08-20 16:54:32","true","docs: Update api.md (#862)

Added description for a couple of return values missing from the `useMutation` documentation.",16,11,0
"TanStack/query","12a3f315aff3add5350b3f235ff6dec8407cb6f5","tannerlinsley","2019-12-02 00:05:05","true","Update .travis.yml",2,3,0
"TanStack/query","c4fa60eb4d2fc8a17ddf9641ee633c472f43fd8d","Minhshi","2021-11-01 20:43:55","true","docs: Minor typo (#2865)",21,26,0
"TanStack/query","361935a12cec6f36d0bd6ba12e84136c405047c5","apuyou","2021-01-07 07:59:31","true","docs: fix typo on Initial Query Data page (#1565)",22,16,0
"TanStack/query","d37e64ec84f1f33b23584e0cfefc3ff551b88b97","TkDodo","2023-01-30 07:51:20","false","chore: upload code-coverage during build process

by decoupling test running from publishing; we now always run the tests when pushed to main
this should help us get a correct baseline",32,41,1
"TanStack/query","9a7357363985298220497f25616b26d95f02b5f7","julio73","2021-07-16 08:52:44","true","docs: remove unnecessary apostrophe (#2464)",29,22,0
"TanStack/query","db5a51e087c7984d98da51ee6831780a5b3a64aa","bishwenduk029","2020-06-27 05:56:00","true","fix(query-cache): Prevent re-run of query for refetch interval if update is disabled (#640)

* fix(query-cache): Prevent re-run of query based on refetch interval if update is disabled

* Update src/core/queryCache.js

Co-authored-by: Bishwendu Kundu <bishwendu.kundu@broadcom.com>
Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>

Fixes #635",3,9,0
"TanStack/query","fa9ee84b75c1d869c3c6041fc95b2f976c8f8571","tannerlinsley","2019-11-04 21:39:58","true","Update FUNDING.yml",0,2,0
"TanStack/query","23846f5a51b67e3a3772a5e077c38bf2ac520bda","bjarkehs","2021-03-02 06:02:06","true","docs: add isFetched to useQuery (#1810)",23,18,0
"TanStack/query","0b54fecee8a7a0a5e2c3e7a3ad55133b9db8997a","tannerlinsley","2020-04-18 16:01:59","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,7,0
"TanStack/query","3775e3198771c7d68a2df705bdebe7dbe9f51a70","tannerlinsley","2020-03-10 17:32:47","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,6,0
"TanStack/query","9898413cc1b9ed0124bbefadb60bbab5a027cb6b","tannerlinsley","2023-05-27 08:28:34","false","release: v4.29.10",25,44,1
"TanStack/query","b6a926af07a754febda5398c8e0d38d9d896888e","tannerlinsley","2022-07-18 22:26:01","false","fix: npm pack now includes all build files",24,34,1
"TanStack/query","cee6175ee27166dc0c43c52a91707efa32f3b517","tannerlinsley","2020-07-01 14:44:00","false","tests: fix suspense test",2,10,0
"TanStack/query","e1f8e79e437991e22e856cb300c0ada62708d563","tannerlinsley","2023-07-25 15:06:49","false","release: v5.0.0-beta.4",23,46,1
"TanStack/query","e41f5c63afae082df325ab9d95c8b29f374ed38d","tannerlinsley","2022-03-24 20:17:33","true","docs: update comparison",19,30,0
"TanStack/query","7c43c94acb3468a39039c7962c36cecb8994130e","tannerlinsley","2020-03-20 22:44:53","false","v1.0.30",5,6,0
"TanStack/query","456e5eeff46afff2b30d115101dd43592567db7b","Andarist","2023-07-21 09:21:47","true","feat(types): cheaper `WithRequired` (#4922)

* feat(types): cheaper `WithRequired`

* fix(types): intersect with `{}` (`NonNullable`-style) instead of `unknown` in `WithRequired`

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",24,46,1
"TanStack/query","ba3c827746defcaf31a29f058b7fb39c757fb45c","tannerlinsley","2023-10-01 10:16:19","false","release: v4.35.7",8,49,1
"TanStack/query","8de0aacb3088a7573ae0995aae8fd35e3f68b704","tannerlinsley","2020-07-08 05:45:58","false","docs: fix build",7,10,0
"TanStack/query","35060bde533607fddfb6179550006a4bf62d49e8","tannerlinsley","2020-10-12 02:11:46","false","docs(examples): fix codesandbox version",6,13,0
"TanStack/query","2c49b5d29ccd9204bd7e30b23efd08224b0f7560","TuckerWhitehouse","2020-07-22 16:01:44","true","fix(ReactQueryConfigProvider): correctly update defaultConfigRef (#775)

`useConfigContext` will always be populated. Checking the context value before defaultConfig update",12,10,0
"TanStack/query","ae1009496c78073980b7b9ebef734175245b1c5b","liaoliao666","2020-12-07 04:10:33","true","fixed(queryObserver): fetch data twice when mounted  (#1320)

* Only work once when forceFetchOnMount is ture or refetchOnMount is 'always'

* fixed(queryObserver): fetch data twice when mounted

* optimization(query): reduce unnecessary recursion",14,15,0
"TanStack/query","03614d1a9882322d2f57a6d587c69e813621f5c6","Grimones","2020-05-11 14:02:37","true","test(suspense): ensure that query instance is removed when component unmounts (#455)",15,8,0
"TanStack/query","25a0eb5e3303e27acdd6f6d257b384d82af93900","wghglory","2021-05-05 06:47:27","true","docs: Update initial-query-data.md (#2215)",36,20,0
"TanStack/query","85d14d3a7e85dd96985618840b62177c33ac468c","fnune","2021-05-30 12:33:07","true","docs: document that setDefaultOptions overwrites previous defaults (#2321)",27,21,0
"TanStack/query","93824ec731c0e971cd38b5eddebd93b697cc107b","DidrikLind","2021-12-28 21:12:04","true","refactor(examples): use triple equal instead of double equal (#3135)",20,28,0
"TanStack/query","d0977465465c59d806cc2ac87a040ad95fa378ac","TkDodo","2022-07-18 20:43:22","true","chore: repair examples (#3845)

* chore: fix examples

they should now have the package.json point to tanstack

* docs: cleanup plugin docs

* chore: update package-lock",22,34,1
"TanStack/query","f7ead297e8781d15d52951537e267e35e93ef82f","TkDodo","2023-09-16 15:21:27","false","Merge branch 'main' into beta

# Conflicts:
#	packages/react-query-persist-client/package.json
#	packages/react-query-persist-client/src/PersistQueryClientProvider.tsx",17,48,1
"TanStack/query","befad586d5add1b18592bc26f943182d88965ddf","lachlancollins","2023-07-25 11:18:19","true","chore: Exclude react-query/build/codemods from pnpm workspace (#5781)",23,46,1
"TanStack/query","c5b49be4c861d95c63e84cb7c99d3bb3cc8e7eac","promer94","2020-05-16 04:19:26","true","tests: Add test for refetchInterval (#498)

* Add test for refetchInterval
Close #405

* Trigger CI

* avoid use snapshot

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",10,8,0
"TanStack/query","d018dfa46083ce059e0aadc06b48f729faade825","tannerlinsley","2022-10-04 13:32:16","false","release: v4.10.1",16,37,1
"TanStack/query","c1ae82ba188fd5abda5e256cac070145e5941447","tannerlinsley","2021-11-12 21:18:11","true","Update README.md",29,26,0
"TanStack/query","639dd9bc1f3d97027fcbd4c4c301c64e7f01b33c","tannerlinsley","2020-07-01 14:36:02","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,10,0
"TanStack/query","6c6fdef2a6fc3f4323be1ca63591e64ec70d82af","tannerlinsley","2019-11-25 16:48:44","false","0.3.16",3,2,0
"TanStack/query","63701411e8291326e1c89907d80f4c075d27b582","tannerlinsley","2019-12-01 23:59:39","true","Update .travis.yml",2,3,0
"TanStack/query","6532ed3cbe49f04b3cb31f80ea88b5886416d51a","tannerlinsley","2023-10-07 07:10:16","false","release: v4.36.1",11,49,1
"TanStack/query","d3d7fc4451184b9744ceb1bdb1b351ca706aab61","TkDodo","2021-11-12 13:34:08","true","fix(useQuery): make sure that disabled queries in error state don't throw (#2933)",30,26,0
"TanStack/query","51913558a24ee43a0a30b4112e2084b2a54e9723","liaoliao666","2022-10-15 05:36:06","true","docs: add ReactQueryKit link (#4325)

forgot to add the link😓",16,37,1
"TanStack/query","a535d0d80565071ec2f8d3f8f1bc7ea8e1af78e1","TkDodo","2022-09-27 14:07:03","false","chore: fix missing dependency conflict",16,37,1
"TanStack/query","f39e960dc323f5695aeb8927eda1600834137ecd","TkDodo","2022-08-17 13:34:33","true","fix: force release

RELEASE_ALL",20,35,1
"TanStack/query","7fd50a7c624c2efff2768d4362f7f2505029e227","lachlancollins","2023-04-28 21:04:08","true","docs(svelte-query): Use API wrapper to simplify SSR logic (#5322)

* Use API wrapper to simplify fetch logic

* Fix prettier

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",22,43,1
"TanStack/query","74a0322853b62c24f49e4514a1088646bdbe5579","jbovone","2023-06-16 09:18:13","true","fix(types): notifyManager method typedef (#5569)

Co-authored-by: jbovone <bovonejulian@gmail.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",21,45,1
"TanStack/query","c444286ab5991693d3053bace18fa245bb889c19","tannerlinsley","2020-04-03 20:23:47","false","v1.2.1",0,7,0
"TanStack/query","7e51776bff00b2f6f8496a7a64b3a048238a4ee7","DamianOsipiuk","2022-08-11 18:14:34","true","feat: notify about observer options change (#3989)",34,35,1
"TanStack/query","6182360c81f12c44219ab8cd3133559ea239ffa5","tannerlinsley","2021-02-08 20:12:08","false","chore: allow next releases",17,17,0
"TanStack/query","aae2c46552013274f24b1280b86a8f2c0528ed87","tannerlinsley","2023-04-15 18:40:11","false","release: v4.29.3",21,43,1
"TanStack/query","88bd699fc8452f18d3dfe87ad95a4fdf1ddb3a14","dbasilio","2023-08-04 07:43:12","true","fix: Change pinned peerDeps to a range (#5833)

Peer Dependencies should be ranges to allow consumers to change versions more freely.

RELEASE_ALL",17,47,1
"TanStack/query","dd5333e1b1b55942e9ca078671ef159fd1610f89","tannerlinsley","2019-11-05 05:27:36","false","v0.2.0",0,2,0
"TanStack/query","e9208b240170eda4a6fe5ba448df4ed65999771e","kripod","2021-01-15 21:39:47","true","fix(onlineManager): listen to 'offline' events (#1656)

Fixes #1654",25,16,0
"TanStack/query","75a1d3d36f9666968dbd61bdcb98b473cf91424b","boschni","2020-08-19 19:55:12","true","feat: replace query instance with query observer (#867)",14,11,0
"TanStack/query","f16e413a8f7b9a5fc53a71502b7e7bacd21b2507","DamianOsipiuk","2023-06-13 20:59:21","true","fix(vue-query): do not subscribe on server - nuxt2 memory leak fix (#5576)",21,45,1
"TanStack/query","58f3cec65411d0922e2fff8efd959f1d33b8d8a5","DamianOsipiuk","2022-11-11 08:58:57","true","docs(vue-query): vue2, nuxt3 examples (#4384)",20,38,1
"TanStack/query","2e2bf69d658e972582ac727caa45fef95e27ecd3","ianduvall","2022-08-11 15:36:18","true","docs(query-functions.md): fix broken links (#3969)

Removes `.md` from the end of links.",34,35,1
"TanStack/query","b3301acd651e1019624e8011a5d4392e53e2cea9","tannerlinsley","2023-08-01 22:02:38","false","release: v5.0.0-beta.12",17,47,1
"TanStack/query","ae015f1cd6b3157c333fac66cf8078aabe0f4998","tannerlinsley","2023-05-18 16:36:59","false","release: v4.29.8",22,44,1
"TanStack/query","1a0d6c7725743db989a7345b7fda02265c6b7f91","tannerlinsley","2020-07-08 17:59:06","false","docs: update favicon",7,10,0
"TanStack/query","cdbedc443e224284d9e10f28cc1569a6900c6162","tannerlinsley","2020-07-08 22:27:40","false","docs: update comparisons",7,10,0
"TanStack/query","0d3b92a7568f7b67154f45a4415a815cb9fb79ef","tannerlinsley","2020-03-05 18:01:03","false","v1.0.16",1,6,0
"TanStack/query","df512e539358f5c9d4dfef4d5a1b254edfdfafbc","Newbie012","2023-03-06 20:30:48","true","fix(eslint-plugin): improve object property checks (#5079)

* fix(eslint-plugin): improve object property checks

* prettier",27,42,1
"TanStack/query","8766a35d2cfcd9ef4adddb1e7992923c49f00736","boschni","2020-07-21 16:35:44","true","fix: reduce the number of renders (#754)",11,10,0
"TanStack/query","d37594a99ad6ef04f96e4c3bb13becb08f107ba5","zorzysty","2022-11-19 18:01:40","true","test: stabilize useQuery tests (#4525)

* test: stabilize the test for onSettled callback

* test: stabilize the test re-renders when tracking but not using props

* test: stabilize the test for onSuccess callback on disabled query

* test: stabilize the test for online/offline scenario",17,38,1
"TanStack/query","b18426da86e2b8990e8f4e7398baaf041f77ad19","lachlancollins","2023-07-06 20:47:24","true","chore: Update to Nx 16.5.0 (#5686)",34,46,1
"TanStack/query","724cd0b620b457a5a23ad1e3d3d78b5db6cebd9e","lachlancollins","2023-07-24 12:00:47","true","fix: Update solid dependencies (#5773)",23,46,1
"TanStack/query","b46c6467389538ccf0fe9e20bb772a2ac5b42458","verekia","2021-08-29 15:42:56","true","fix(devtools): do not render DevTools during SSR (#2615)",22,23,0
"TanStack/query","f364fbbf491a986c17a931c575b2e912496b249f","allanloji","2022-11-29 20:13:57","true","docs(useInfiniteQuery): add isRefetching to returned properties docs (#4567)",16,39,1
"TanStack/query","c5738db39f814a5fbc62efa262e1b9fbcb24d31e","boschni","2020-09-16 20:36:11","true","fix: should be able to invalidate queries (#1006)",12,12,0
"TanStack/query","0051b915e25c2af207d39455d5ff24455708b93f","michaelrambeau","2020-07-11 11:54:36","true","Add Best of JS badge to README.md (#739)

Add a badge showing the number of stars on GitHub added yesterday, from Best of JS data",7,10,0
"TanStack/query","5e958af2d40ce5afc998c49bec10672cff6c236e","Mini-ghost","2023-08-25 20:42:32","true","perf(vue-query): reduce unnecessary `computed()` in useIsFetching (#5905)

* perf(vue-query): reduce unnecessary `computed()`

* chore: rename function

* refactor: use `watchSyncEffect` instead of `watchEffect`",24,47,1
"TanStack/query","ed7d9f82fa5882f4febbd1a61611dd7cb9a74610","TkDodo","2023-03-14 15:25:11","true","chore: downgrade chalk to v4 because v5 is ESM only (#5130)

see: https://stackoverflow.com/questions/70309135/chalk-error-err-require-esm-require-of-es-module",26,42,1
"TanStack/query","c532d81313a9c036f48eaa8e3e6dd808e9587631","TkDodo","2022-01-21 12:24:22","true","fix(core): make sure batching finishes if exception is thrown (#3216)

incrementing and decrementing transactions need to happen in an atomic operation, no matter what happens in between; if we increment, but never decrement, we will get to a state where transactions can never become zero - we're basically ""leaking"" an open transaction. This leads to no observers being informed ever again because we think we still have an open transaction

this can be fixed by using try/finally to always decrement the transactions",26,28,0
"TanStack/query","6eb399727fe414998539889424759d7ab54a5b47","cherniavskii","2020-02-28 17:37:21","true","Make sure query is refetched specified number of times (#168)

* add failing test

* fix failing test

* add failing test

* fix failing test

I would expect useQuery to refetch data once if retry is set to 1

* increase test timeout

* increase timeouts

* fix test in travis

* try higher timeouts

* try --maxWorkers=2

* increase timeout

* increase timeouts

* add console.log

* remove timeouts

* add debug log

* fix tests

* fix garbage collection check

* remove console logs",2,6,0
"TanStack/query","1d366808815e9f609beb8a49cad679d48d305e60","Andarist","2023-07-31 07:48:00","true","fix(types): infer the narrowest type with `queryOptions` (#5805)",20,47,1
"TanStack/query","86161ca6ec7b29f71576b555206aca04831499e6","lachlancollins","2023-01-14 16:25:20","true","docs(svelte-query): Add recommended defaults to prefetchQuery setup (#4815)

* Add recommended defaults to prefetch example

* Move SSR docs up in sidebar",31,40,1
"TanStack/query","34ca5581217dae4133046f6cfbc746a22be14dd9","zorzysty","2022-09-24 18:37:18","true","feat(react-query): error boundary handling for useQueries (#4177)

* feat: handle useErrorBoundary option in useQueries

* chore: update .all-contributorsrc

* style: fix formatting issue

* test: stabilize a test that fails on production but passes locally

* refactor: rename query to options

* refactor: extract reusable code of error boundary handling

* style: apply prettier

* test: reject promise with Error instead of string to avoid TS error

* test: cover a case where useErrorBoundary is a function

* refactor: improve typing of getHasError

* style: apply prettier formatting

* fix: add type keyword for imports

* refactor: revert renaming `query` to `options` for more consistency",17,36,1
"TanStack/query","e49afc04a72554ce7c02796be48914c573b9464b","MichaelDeBoey","2021-04-24 07:40:22","true","chore: add tests for Node 16 (#2165)",37,19,0
"TanStack/query","e0405faedef3c068f0e12d02a6f5b95143e30d24","tannerlinsley","2022-08-26 11:39:36","false","release: v4.2.3",20,35,1
"TanStack/query","4403cc827ea07b5399caa93a335845166dca0477","tannerlinsley","2022-08-13 09:13:28","false","release: v4.1.3",24,35,1
"TanStack/query","16c6dfbc8c04a5b85298a37c0c2c38e1824f14f1","tannerlinsley","2020-04-13 06:18:16","false","v1.2.2",2,7,0
"TanStack/query","5057043dfcc15c5b149a077a6f5793d53795771e","tannerlinsley","2020-06-28 20:40:54","false","docs: comments on noop promise",2,9,0
"TanStack/query","50329b39a180e51f0f1c74b93b6163bfde318a4c","tannerlinsley","2020-06-28 16:16:06","false","fix(invalidateQueries): respect enabled flag

Fixes #648",3,9,0
"TanStack/query","058f030f4f8031fdf397888cedc736b60e8c20e6","Newbie012","2023-04-21 11:24:03","true","fix(eslint-plugin): ignore queryClient from exhaustive-check (#5291)

* fix(eslint-plugin): ignore queryClient

* Update packages/eslint-plugin-query/src/rules/exhaustive-deps/exhaustive-deps.test.ts

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",22,43,1
"TanStack/query","f819674a69bc2495da761c6ba9e18e704e88dd32","sneridagh","2023-02-19 05:52:18","true","Revert ""docs(react): Fix SSR custom framework guide -  should be deconstructed (#4998)"" (#5002)

This reverts commit aa94a946c29a88934a72faabac523fed7cd5b411.",30,41,1
"TanStack/query","c7e342a91a79ea9d005ffa93e491a6c879a1a7e8","boschni","2020-09-12 21:54:15","true","fix: useInfinityQuery fetchMore should not throw (#1004)",10,12,0
"TanStack/query","213df4a4fd87b705789c09d6eb63491e6c7b74c7","thatzacdavis","2020-02-28 21:22:47","true","Change 'todos' ID to 'projects' (#172)

We are fetching projects in this example, so calling it 'todos' didn't make sense to me.",1,6,0
"TanStack/query","e3f0ad58e8f63d1c83c0fe18d4711c8c7f52b7c2","melanieseltzer","2021-01-15 21:44:07","true","fix: suppress SSR warnings for devtools (#1613)",24,16,0
"TanStack/query","280682e9a91026c6833eaaf392b7be4a5361267b","TkDodo","2023-08-29 08:56:52","true","fix(query-broadcast-client): allow passing all broadcast-channel options (#5925)

* fix(query-broadcast-client): allow passing in type for the channel

allowed values are: 'native', 'idb', 'localstorage', 'node'

* fix(query-broadcast-client): allow passing all broadcast-channel options

* docs: options",15,47,1
"TanStack/query","7933834b3878c84aecd4d60abb1058d185aa3fc8","balazsmatepetro","2023-10-20 09:28:32","true","fix(codemod): remove the function overloads when the second argument is a function expression (#6191)

* fix(codemod): remove the function overloads when the second argument is a function expression

After a quick sync with @TkDodo, it turned out in this case it's safe to do the transformation, because the second argument is a function expression, so it means the first parameter must be the query key.

* fix(codemod): add the `useQuery` hook to the transformation list, because it was missing

* chore(codemod): rename the `parameters` constant to `functionArguments`

The naming was wrong from the beginning. The codemod does transformations with the arguments of the functions, not with their parameters. :)

* chore(codemod): fix the import order

The CI was failing because of it.

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",11,49,1
"TanStack/query","ac43ac10a50dc4b5c0e28d76363f7c8259583929","tannerlinsley","2019-11-03 18:30:40","true","Update README.md",0,2,0
"TanStack/query","bb5657910f4ca20e56916f61d8e983a3b9e2de0a","TkDodo","2022-11-01 11:28:38","false","fix(eslint-plugin-query): build & publish the plugin

RELEASE_ALL",14,38,1
"TanStack/query","560b5290f51e8627ebd0764451148542060a753c","tannerlinsley","2020-04-01 16:13:45","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",0,7,0
"TanStack/query","4f358169223ba56dfdefbdd4fe6dad467363ad87","tannerlinsley","2019-09-10 20:27:45","false","v0.0.5",0,0,0
"TanStack/query","3d67644570c5c37be660607db3c220429c89f6b3","lachlancollins","2023-07-25 10:11:39","true","fix: Add missing react peer dependencies (#5779)

Fixes tsup/esbuild resolution of internal vs external imports",24,46,1
"TanStack/query","ff1bfb2dbca9086c87cfdff3057b50793f246d0c","macklinu","2020-11-11 22:23:47","true","docs: fix graphql-request typo (#1277)",8,14,0
"TanStack/query","64be5738b0094d99a07a44190ce4a60c92aed8ea","tannerlinsley","2020-08-31 21:16:13","false","fix: add hydration.js to npm files",11,12,0
"TanStack/query","c95cebc078f9995805f83c50d7536c8d3d5398aa","tannerlinsley","2020-12-23 23:11:45","false","fix(devtools): guard against window for server envs",11,15,0
"TanStack/query","b89aebeb6059df76a86e7a3e7887f4d42e744be6","gargroh","2020-04-18 14:45:41","true","Adding all-contributors support (#366)",2,7,0
"TanStack/query","86592d6aa3a5023ac75a2698f0f500f3fe3a5ffe","Faithfinder","2022-08-12 18:42:19","true","fix(types): allow returning non-promise values from mutation callbacks",25,35,1
"TanStack/query","09a375badc27f42c1eb4263e1e01570f267fb7c1","TkDodo","2022-05-01 20:36:24","true","fix(queryObserver): cache select errors (#3554)

there is no need to re-run the select function if it is referentially stable, even when it throws an error. if no dependency has changed, we can re-use the cached error, as the select function should be idempotent and thus return the same error anyway.

further, if we have cached data from a previously successful select, that should be returned as `data` alongside the error.",21,32,0
"TanStack/query","d23077ff004ed342d1e28ae927a638eef3ff76d3","tannerlinsley","2020-02-27 16:13:28","false","Examples: Added a query cancel demo to the sandbox example",1,5,0
"TanStack/query","7d786c7631d75d4cc30d744b4f0fd3c4b67e4c6a","tannerlinsley","2020-05-01 15:53:13","false","Fix suspense double rendering

Fixes #324",8,8,0
"TanStack/query","229d16edabac6c7c5f219371042755dfcbf13808","tannerlinsley","2020-07-01 02:05:18","false","tests: ensure cache clearing does not notify in tests",2,10,0
"TanStack/query","0022dff9f7c42e2dea88f05286bdd9ca5d3b477a","tannerlinsley","2019-12-01 23:41:42","false","Update .travis.yml",2,3,0
"TanStack/query","3fcfd5828e291ad2717b057733df1f41cff201e8","tannerlinsley","2020-09-23 19:24:39","false","docs: update faq",8,12,0
"TanStack/query","d0f7238c0093df007c6a46ba574f70c1129891a3","tannerlinsley","2023-10-02 08:58:56","false","release: v5.0.0-rc.4",7,49,1
"TanStack/query","40944e10df984dba9250e747b4817ec086976c7b","tannerlinsley","2020-10-12 02:18:43","false","docs(examples): fix sandbox version",6,13,0
"TanStack/query","f199cc0b313380a8787a9cb1b4367a1f483faeae","mikesten","2020-03-02 12:28:42","true","Tidy the queryCache.clear() documentation (#186)

Remove redundant callback definition.",2,6,0
"TanStack/query","e9731faa5ea9e1e667b2435c7950600bb8bb7fb7","tannerlinsley","2020-03-04 21:31:29","true","add unit test (#197)",2,6,0
"TanStack/query","e1ac418870a5e4f2de28a2f541ca775e28bdbcdc","cherniavskii","2019-11-09 15:48:58","false","add license (#27)",2,2,0
"TanStack/query","60bd38ca6c29272cda04fab14ac4779402ea65f4","ardeora","2023-11-07 04:27:00","true","fix(query-devtools): Add styleNonce prop to devtools components (#6320)",1,50,1
"TanStack/query","b38eed6326bb0bc9b116abfa0c0fc7c5e2a46cf7","TkDodo","2022-02-06 08:47:24","false","chore: fix prettier",23,29,0
"TanStack/query","5a8a1a9f6cbee57ce06d6e76762309d642ea133f","tannerlinsley","2020-07-29 16:35:55","false","docs: improve RQE callout",12,10,0
"TanStack/query","61a04b8202f0f919c7dc41eaa3367fc92fade4ff","tannerlinsley","2020-03-11 17:09:34","false","v1.0.26",2,6,0
"TanStack/query","5c3943ef4d94e2d429592f316a51ee82eb320c50","tannerlinsley","2023-04-02 08:12:33","false","release: v4.28.1",23,43,1
"TanStack/query","b72428e8218ac3d2dbb29f3a5f202ff00d0fb447","tannerlinsley","2020-03-04 21:04:51","false","v1.0.14",2,6,0
"TanStack/query","7786867cd73918960333744c04fb97cb8386a868","tannerlinsley","2020-12-09 18:54:48","true","Update index.js",8,15,0
"TanStack/query","188453f2b15ee79247b5b95fedb645b4966e468f","tannerlinsley","2022-11-01 07:15:24","false","release: v4.13.6",15,38,1
"TanStack/query","6ede79bf3c1ce4eed8803a68815dc222aad90096","tannerlinsley","2022-07-18 19:43:17","false","Update package.json",22,34,1
"TanStack/query","2b76550106562d41279ddcd1b69ae37569e50bfb","liaoliao666","2023-10-20 06:37:53","true","docs: update the doc of react query kit (#6194)",14,49,1
"TanStack/query","b421e74ca2b77de43d37ae356bfea668ee9cf579","bennettdams","2022-11-09 10:23:49","true","docs(eslint-plugin-query): Prefer dev install (#4489)

This change adds the CLI flags to install the ESLint plugin as a dev dependency instead of a normal dependency.",20,38,1
"TanStack/query","6ba663f25a8d9a80df14e3ea71ce687abf86cbbf","arnaudbzn","2021-10-27 11:30:48","true","test(devtools): devtools sort queries test fails on Apple Silicon M1 pro (#2832)",22,26,0
"TanStack/query","45ef8f8c6bb9a146a41f7ebe72231cc11ccffbe3","TkDodo","2023-09-08 12:08:27","true","feat: suspense error handling (#5979)

only hard errors are thrown to ErrorBoundaries",15,48,1
"TanStack/query","cec8f6cbd4b032c1c1e93aaddd31f09d650c1f7d","Colonel-Sandvich","2023-10-01 22:16:04","true","refactor(vue-query): Fix typos (#6084)",8,49,1
"TanStack/query","90308e1f9e5b8703b06207e792f5440e37b13459","ohansemmanuel","2021-04-14 05:33:20","true","docs(useQuery): add the useErrorBoundary option (#2084)",26,19,0
"TanStack/query","68c3e19bca66b07cc9f0224436d97243bb870410","nicolasmendonca","2023-01-25 07:18:49","true","docs: Fix variable reference issue on sveltekit doc (#4861)",32,40,1
"TanStack/query","a9ddb4d0b6aa346c88052aa4fec52e29a4fda7ad","manudeli","2023-04-15 20:10:07","true","docs(community): add @suspensive/react-query community contribution (#5259)",21,43,1
"TanStack/query","12665c34e087d2bfd69e07c00412a0156a841c70","tannerlinsley","2020-06-18 01:39:29","true","Update README.md",11,9,0
"TanStack/query","da81b9f63544626c443bf6a33b2d61fd4fe7759b","tibotiber","2020-04-21 04:32:58","true","add note to the docs about shared options (#384)",3,7,0
"TanStack/query","52ce234d4f224731ce8bb5970c22064a5078c387","bviebahn","2020-07-11 01:23:52","true","fix: include undefined in IniniteQueryResult data type (#738)

* fix: include undefined in IniniteQueryResult data type

* fix: dtslint

Co-authored-by: Benedikt <benedikt.viebahn@bringmeister.de>",8,10,0
"TanStack/query","1720134607f2fd5bea8134020edba6785bedd801","tannerlinsley","2019-09-23 01:03:30","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,0,0
"TanStack/query","e140b6cf32a2073546b7bf88ac05969310e3ed9a","TkDodo","2022-07-21 07:47:25","true","docs: fix next-js based examples (#3891)",24,34,1
"TanStack/query","0c84afed469f409d93b68deb9c2c78392209dce6","TkDodo","2021-08-29 20:38:42","true","docs: add tkdodo's blog to the docs (#2616)",22,23,0
"TanStack/query","f6f211fd5797510bcee97e196773e97d41b06b09","TkDodo","2022-08-28 07:13:17","true","docs(examples): react-router example (#4058)",21,35,1
"TanStack/query","003345d73543c1f51549a3a67c6dc8a746e9a1ed","babycourageous","2021-02-02 18:34:09","true","docs (useQuery): add some missing items to api (#1707)

The useQuery reference was missing some return value documentation as well as some option values.",29,17,0
"TanStack/query","67394db8c4b7645bcfbaf9961c19c721bdc19777","bviebahn","2020-07-15 19:27:04","true","fix: use generic Error type in ReactQueryProviderConfig.queries (#742)",10,10,0
"TanStack/query","f87a9986e56ae6385c8867e17d62d6146a5a30f7","zorzysty","2022-08-11 15:54:42","true","docs(examples): Migrate suspense example to vite (#3953)

* docs(examples): migrate examples/react/suspense to vite - adjust file structure

* docs(examples): migrate examples/react/suspense to vite",34,35,1
"TanStack/query","74f2e2881274e004aede676e4da0ac29c378385f","paulobmarcos","2023-07-21 08:27:40","true","feat: add new function type to notifyOnChangeProps (#5734)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",24,46,1
"TanStack/query","a846524d6ad2ef96bc6f7789cc137909391b74d0","dpyzo0o","2020-06-30 10:26:53","true","fix(types): Add missing type definition for queryFnParamsFilter (#671)",4,10,0
"TanStack/query","60eb97425f7f39dc94805cf4a929777ccfb29e8a","dorelljames","2021-07-28 07:08:26","true","docs: Fixes axios example for cancelling request (#2504)",24,22,0
"TanStack/query","61c3d94a94cee551834d573984c932df25e264ad","louis-young","2023-01-20 12:24:26","true","docs(useMutation): clarify `mutationFn` option default (#4837)

* docs(useMutation): clarify `mutationFn` option default

* Make optionality consistent with `useQuery` documentation

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",32,40,1
"TanStack/query","812f1e9939f18598a14ca46aa5bf4c32dba271e0","nisarhassan12","2020-10-10 14:37:08","true","fully automate the dev setup with Gitpod. (#1155)",3,13,0
"TanStack/query","69a7d72d34b06925d41ec3cb487a21330118570c","Joehoel","2023-01-23 12:08:09","true","docs: add QueryClient import (#4856)",32,40,1
"TanStack/query","b88cda4105d4723132f53ecbd2f5b90a96ee2228","Andrey-Bazhanov","2021-09-15 08:22:14","true","docs: use hydration utilities from core (#2643)",23,24,0
"TanStack/query","11456a8f6d818a4a4b1c672a996710cbd0b59b4d","henryqdineen","2020-05-14 04:05:21","true","chore(rollup): run terser plugin for react-query.min.mjs bundle (#488)",11,8,0
"TanStack/query","ac4cc06fe0ba2ade2e30d1d94f5d0cd9f7f862fb","tannerlinsley","2022-09-18 19:21:06","false","release: v4.3.8",20,36,1
"TanStack/query","f826edf0b5f880d6806021acf30dfa7f85c0799f","tannerlinsley","2021-01-06 20:00:44","false","docs: update comparison",21,16,0
"TanStack/query","7b24b7e433c9ac7e8495ad9525c362e2bf325a35","tannerlinsley","2020-07-09 22:55:35","false","docs: supporters get to be bolded :)",7,10,0
"TanStack/query","3a589bb50ac35589dfe1ef4208234b5bf10d26a1","tannerlinsley","2020-06-02 04:44:53","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",18,9,0
"TanStack/query","211260ffbda378a7a4b8660bf32afb2a2b04b584","AntonNiklasson","2021-02-26 18:42:23","true","docs: Reorder pages in the introductory docs (#1865)

* docs: reorder pages in introduction docs

* docs: link from quick start page to key concepts",20,17,0
"TanStack/query","b162309f01db76f6cea5da42e60b6803048fcddf","TkDodo","2022-10-04 13:27:01","false","fix(react-query-devtools): add superjson as dependency

rather than devDependency

RELEASE_ALL",16,37,1
"TanStack/query","d12d0cf5bc7c0c4161c5d8b5482a9b697e69cc98","TkDodo","2022-01-02 11:44:19","true","chore: issue template (#3154)",22,28,0
"TanStack/query","1dc4186756e258a6344653848dd8430fed364dd0","arnaudbzn","2021-11-15 13:09:00","true","docs(cancel): add graphql-request example (#2948)",26,26,0
"TanStack/query","f99e39e4fbb428e7e5cbb2ee5f0acf8afc162f3f","loiacon","2020-05-04 15:38:52","true","fix(utils): compare equals first to prevent error on null variables (#440)

* fix(utils): compare equals first on includes

* test(queryCache): added setQueryData updater test",7,8,0
"TanStack/query","df536e8f2f3a4597c790979a2b5b83b850cdf695","kamranayub","2020-04-03 20:16:14","true","fix(prefetchQuery): Throw error when throwOnError is set (#310)

* Add test for throwOnError

* Uncomment throw error",2,7,0
"TanStack/query","6cb35d125b83ba90820ae68676fab9376b37e458","tannerlinsley","2020-03-30 16:52:19","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,7,0
"TanStack/query","d133fb97837f8787b72cff7bbf5f73c29ced869e","tannerlinsley","2020-03-15 19:51:00","true","Update README.md",6,6,0
"TanStack/query","4c468dd106e8ed58e4f6d760ae3982b54918fc1c","tannerlinsley","2020-02-26 20:37:39","false","v1.0.2",0,5,0
"TanStack/query","8e7a316c11924f239368cb076584cb255d5281fd","prateek3255","2023-02-18 11:23:57","true","Set `fetchStatus` to `idle` when dehydrating (#4974)

* :bug: Set fetchStatus to idle when dehydrating

* ✅ Add a test case for ensuring fetchStatus is idle

* ✅ Update tests

* 🚨 Fix lint warnings

* ✅ Update fetchStatus when hydrating

* :okay_hand: Review updates

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",31,41,1
"TanStack/query","a00a9c1447f9787e34c98bf08fdd5b7c63242e11","TkDodo","2023-09-16 13:46:06","false","test: try to fix vue tests",17,48,1
"TanStack/query","51375fdfb7dfaa06e8b52caf98fd0e460c6e0ad2","jackmellis","2020-05-15 21:04:17","true","feat: query cache provider (#476)

* feat: query cache provider

the query cache now comes from a context, meaning users can easily override and control the cache being used inside their application

* fix: track multiple query caches

this commit does the follwing:
track all active query caches added via the provider, handles mounting/unmounting
if creating a cache, ensure we only do it once
when unmounting an internally-created cache, make sure to clear it first
setFocusHandler now loops through all of the currently-active caches

* test: add in-depth tests around query cache providers

* style: format touched files

* fixup! style: format touched files

* docs: correct readme description

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>

Co-authored-by: Jack Ellis <jack.ellis@godaddy.com>
Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",12,8,0
"TanStack/query","160d1ac1a68c81a5bd8b74e2e1a56cad714b2d04","jpangelle","2020-10-14 02:04:36","true","docs(api): change manual to isEnabled (#1166)",8,13,0
"TanStack/query","f64199d616da0ca4915fa3a5b9bd12f9dd2d16d2","tannerlinsley","2023-07-21 08:33:04","false","release: v4.30.0",24,46,1
"TanStack/query","ba48a923fac28857875fb81b9194deeed82be4aa","tannerlinsley","2020-07-15 21:48:36","false","docs: fix documentation sidebar breakpoint",9,10,0
"TanStack/query","f8ec3c1dc7c1933095df58ac02d1e458a7b94170","tannerlinsley","2020-10-21 20:30:04","false","fix: semantic release",13,13,0
"TanStack/query","573edf86a45adf5fe563a7426b428686d6b0735c","tannerlinsley","2020-03-20 22:43:37","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",5,6,0
"TanStack/query","a5b35e3a4a488d937d79c4f13c98d1fdad5b46e1","tannerlinsley","2020-03-23 19:57:34","false","v1.0.34",3,6,0
"TanStack/query","9a734f617d944e8710d32b94412cdf4a81e43499","tannerlinsley","2020-06-25 15:47:19","false","feat: add refetchInactive option to invalidateQueries

Normally, inactive queries do not refetch when they are invalidated, but you can now use the `refetchInactive: true` option to force them to refetch.",1,9,0
"TanStack/query","c66dcc9e28cf24b8469cad3af489d16ec1499aa8","tannerlinsley","2020-03-18 18:34:27","false","Change to useMountedCallback",1,6,0
"TanStack/query","b2b3f339970d11eff6c0892b86f4add43b5c14fc","tannerlinsley","2019-11-13 21:32:01","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,2,0
"TanStack/query","5df119800101578dc290047b6b508a385dc55009","tannerlinsley","2023-03-05 06:33:45","false","release: v4.25.0",30,42,1
"TanStack/query","7cce707a3200d9c709e578bd83af6e9aa7503403","tannerlinsley","2020-05-01 22:49:02","false","Update Types",6,8,0
"TanStack/query","9e0e7913b1c3a32d9612c8929dc4c377503ac598","davidrf","2020-05-29 03:02:56","true","docs: Update ""Pass a falsy query key"" section in README.md (#527)

Co-authored-by: David Rodriguez Fuentes <drodriguez@morningconsult.com>",18,8,0
"TanStack/query","52854795b62946b4a4b73e4bddc6954db77e2058","danielbartsch","2021-11-17 11:30:39","true","feat(useMutation): meta for mutations (#2906)",25,26,0
"TanStack/query","fc98d3109fc16d49281af8a655b8873717b59a8f","zorzysty","2022-10-28 09:54:17","true","test: stabilize a flaky test for isFetchedAfterMount (#4381)",18,38,1
"TanStack/query","f03396f2173ea107e6a16bf5a850d575eee870f8","arnaudbzn","2021-11-07 11:36:38","true","docs(queryCache): fix subscribe callback arg: event instead of query (#2897)",16,26,0
"TanStack/query","684ed14693905b233cfb7b06d9eed8f989c6374c","tannerlinsley","2023-07-21 08:50:58","false","release: v4.31.0",24,46,1
"TanStack/query","dbad39737f765412c8aba9819ce345f1a94da729","tannerlinsley","2020-03-05 17:45:58","false","Fix: query state is now computed, not imperatively tracked

Fixes #199
Fixes #195",4,6,0
"TanStack/query","d83c4040b00b9e4adfb409446696fda42b2dfe68","tannerlinsley","2022-06-24 14:32:58","false","Update README.md",25,33,0
"TanStack/query","862bb2be3a7c6161b70a2310f4661859adb6d943","tannerlinsley","2021-02-08 16:26:29","false","docs: fix SSR docs

Closes #1762",18,17,0
"TanStack/query","115895fc926db32b1731a01b446f2761ef533b84","lgenzelis","2021-10-09 07:24:11","true","feat(useInfiniteQuery): respect cancelRefetch flag for infinite queries (fetchNextPage, fetchPreviousPage) (#2731)",26,25,0
"TanStack/query","9fad89220c68b3f9815cfdae15af9ef095b926fc","tannerlinsley","2021-02-23 04:13:50","true","feat(subscriptions): add event types and metadata to subscriptions (#1792)

* feat(subscriptions): add event types and metadata to subscriptions

* better types, update tests

* remove unnecessary setStateOptions

* rename to queryUpdated event, add observers where possible

* Cleanup

* Update queryObserver.ts",15,17,0
"TanStack/query","de633a3d2ee5f19df88a4e3372509b3d90a8a1b3","tannerlinsley","2020-05-15 21:06:29","false","fix: export deepIncludes",12,8,0
"TanStack/query","356627a33616c360bccc3a1ccd9521ecc3485f1a","DiederikvandenB","2021-04-08 12:07:58","true","fix(types): adds queryKey generic to queryClient functions (#2100)

* fix(types): adds queryKey generic to queryClient functions

* test(clientQuery): adds tests for type-errors when using strict keys",26,19,0
"TanStack/query","401e1880eed54f73a3da93af6a1e4139674a861a","billfienberg","2021-03-05 06:53:03","true","docs: Add missing period (#1888)",27,18,0
"TanStack/query","ff619d061f9a086206c5e3db12c8866bdc58a935","boschni","2021-02-15 12:24:55","false","test: add test for infinite queries and suspense",13,17,0
"TanStack/query","14c4ec6acfe7c63cb9d3c420e873dbbbda59bb97","boschni","2020-08-31 21:21:56","true","feat: change ReactQueryCacheProvider from hydration to Hydrate (#943)",10,12,0
"TanStack/query","0839ac8ff05ccba8a7f2dd44f5baa3bef7cc8246","jelteliekens","2020-06-30 11:38:50","true","fix(types): fix MutateFunction (#674)

TVariables now extends undefined to determine the return type of MutateFunction.",4,10,0
"TanStack/query","73e21ce7c3a7eddae2a7b35285deec747add8a30","ZackDeRose","2023-03-17 15:59:10","true","chore: Add retries to cover flakiness in tests (#5140)

* adding in retries to cover flakiness in tests

* fixing workflow error

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",23,42,1
"TanStack/query","86e8413196f7371cf50cb8cc6eac88c18ff9e848","emzoumpo","2023-02-26 08:14:08","true","fix(react-query-devtools): do not hide sort options when filter is used (#5038)

Sort options (asc / desc, and sort function) were hidden when filter was set.
Sort options are now shown along with the filter, even when a filter is set.

Closes #4989",28,41,1
"TanStack/query","39691a739bff2850974209dbab6078be6c1b04eb","TkDodo","2021-01-22 12:05:47","true","feat: use tracked query (#1578)

* feat: useTrackedQuery

add useTrackedQuery hook, which tracks notifyOnChangeProps automatically via a Proxy

* feat: notifyOnChangeTracked

different approach to tracking used props by using an option rather than a new hook, so that we can also easily combine this with useInfiniteQuery; also, using Object.defineProperty rather than a Proxy

* feat: notifyOnChangeTracked

add some documentation for notifyOnChangeTracked

* feat: notifyOnChangeTracked

add a test for notifyOnChangeTracked

* feat: notifyOnChangeTracked

keep trackedProps separate from notifyOnChangeProps and only merge them in shouldNotifyListeners

* feat: notifyOnChangeTracked

store tracked result object on queryObserver instance so that the reference stays the same between renders

* feat: notifyOnChangeTracked

create a new trackedResult whenever we create a new result
this ensures that we keep referential identity of the tracked result object if nothing changes, but still get a new instance if we need to (to avoid stale closure problems)

* feat: notifyOnChangeTracked

add test for referential stability between re-renders; even if we are tracking changes, we should return the same object if we re-render (for some other reason than react-query changes) and nothing has changed

* feat: notifyOnChangeTracked

rename trackedResult to trackedCurrentResult

* feat: notifyOnChangeTracked

combine notifyOnChangeTracked with notifyOnChangeProps

* feat: notifyOnChangeTracked

remove auto-resetting of tracked props, which means that every prop ever tracked will lead to a re-render; this is the ""safe"" side - we'd rather have an unnecessary re-render rather than a bug because we are not re-rendering when something is observed only in an effect

* feat: notifyOnChangeTracked

always re-render if we are tracking props, but not using any. In that case, trackedProps will be an empty array, which would lead to no re-renders at all (same as setting notifyOnChangeProps to empty Array)

* feat: notifyOnChangeTracked

conditionally create trackedResult - we don't need it if we are not actually tracking props

* feat: notifyOnChangeTracked

add a test for combining notifyOnChangeProps: 'tracked' and notifyOnChangePropsExclusion

* feat: notifyOnChangeTracked

update docs",24,16,0
"TanStack/query","ab0fbeaf3ff81b826c645f034e26686b7b0c784e","tannerlinsley","2020-06-25 00:41:06","false","Update README.md",0,9,0
"TanStack/query","5ca146501350ab94f5546f6acf3f097c5656cc67","tannerlinsley","2019-11-05 05:46:16","false","Update package.json",0,2,0
"TanStack/query","6a794b73f781b1c4326989e584d178e6f510a0b3","tannerlinsley","2019-11-04 21:22:04","false","v0.0.17",0,2,0
"TanStack/query","5f16a500e984dd75b38f41d4ad1516cf60997cfa","tannerlinsley","2020-02-26 18:38:26","true","v1 (#150)

* Checkpoint

* Split to separate files

* Less exports

* Update useQuery

* v1.0.0-alpha.0

* Refactor to queryCache, reorg files

* v1.0.0-alpha.1

* Fixes

* Update main.yml

* Update main.yml

* Update main.yml

* Include Helpers

* v1.0.0-alpha.2

* Clean up deps

* v1.0.0-alpha.3

* Query Cache + tons more and docs

* v1.0.0-alpha.4

* [next] add some tests (#143)

* add usePaginatedQuery test

* fix setQueryData test

* Update utils.js

Fix #147

* Update useMutation.js

* Created the queryFnParamsFilter config option for useQuery

* Update README.md

* Update queryCache.js

* Create settings.json

* Fixes

* v1.0.0-alpha.5

* Update Readme and build

* Update README.md

* Update README.md

* Update CHANGELOG.md

* New default for refetchOnMount = true

* Update package.json

* [next] Regression tests (#148)

* add useQuery ssr test

* add useQuery test

* add test for dependent queries

* add default status test

* add status test in manual mode

* add test

* format test files

* expand dependent queries test

* ignore __tests__/shared folder

* match test files by .test.js filename instead of __test__ folder

* do not cache queries with undefined queryHash

Fixes https://github.com/tannerlinsley/react-query/issues/137

* format

* fix typos

* Merge with fixes for regressions

* update size-plugin

* remove size-plugin

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>

* Remove size plugin

* Update useMutation test to not be so noisy.

Co-authored-by: Andrew Cherniavskii <andrew.cherniavskii@gmail.com>",0,5,0
"TanStack/query","f74980af3b409236e7170675b49d046691229ea7","tannerlinsley","2020-02-17 06:27:17","false","Better error handling for interval fetching

Fixes #124",4,5,0
"TanStack/query","9e7732198e42bc230c3d674ea780f9ca9cde6be5","cherniavskii","2019-12-09 21:11:58","false","fix broken readme (#74)",1,3,0
"TanStack/query","fd912f0349f0810bf0f7c07a50c1ac94ac0aa2f5","tannerlinsley","2019-11-07 19:24:23","false","v0.3.4",2,2,0
"TanStack/query","1f12993d8d1369a7960cd406df49ddba229f3067","tannerlinsley","2019-09-11 18:27:34","true","Update README.md",0,0,0
"TanStack/query","8629fa7c959da35dffe882c7084e08749486b3e9","tannerlinsley","2022-07-19 12:42:58","false","force release

RELEASE_ALL",24,34,1
"TanStack/query","5757bf3378c4f4d0f1b9028492c5d61c4b05f84b","tannerlinsley","2020-07-08 06:12:13","false","docs: ga, no sentry",7,10,0
"TanStack/query","e555091892db8f91cec85c95eb8a91804e463edb","tannerlinsley","2019-11-06 23:40:32","false","v0.3.1-alpha.0",1,2,0
"TanStack/query","0d87e28e3eeab87ad05693b928af166384b41f8e","tannerlinsley","2020-03-04 18:52:10","true","Update README.md",1,6,0
"TanStack/query","3bbcb9a676f186d0192a186d133dfe769b1fd389","tannerlinsley","2020-07-03 19:52:13","false","fix(useBaseQuery): cast enabled to boolean before effect

Fixes #702",3,10,0
"TanStack/query","1c5165e70b3ee2ca4f2d10cdbfda97fb7afc2526","judicaelandria","2023-04-02 17:46:25","true","docs: revert docs for QueryCache (#5221)",20,43,1
"TanStack/query","ee7ca0bf1e813fd727f25abeb67755f43b636b3f","dantman","2021-09-08 08:39:20","true","feat: Allow handling some errors locally while using error boundaries (#2619)",24,24,0
"TanStack/query","69aea629f7b49cc9498d8ac84e193bb865f05515","kandros","2023-04-03 14:23:24","true","feat(react-query-devtools): add button to clear cache (#5186)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",19,43,1
"TanStack/query","abd7f86ed1750a4716740d60078b18a91840e82d","tannerlinsley","2021-02-12 22:59:07","false","fix: useLocalStorage dependency array",13,17,0
"TanStack/query","d779df14e9c1d3f4ce2f98295179267e727cb2cc","arnaudbzn","2022-01-04 21:15:51","true","docs(examples): add react native expo snack example (#3156)",22,28,0
"TanStack/query","82adc95c2403a2f63aa9554223f0140f02497111","Newbie012","2022-11-11 11:53:15","true","fix(eslint-plugin-query): run exhaustive dep check on referenced query key (#4480)

* run exhaustive dep check on referenced query key

* fix various eslint issues",20,38,1
"TanStack/query","b3201e991d8737d2a4ddbb99324f3282156a19ef","zorzysty","2022-08-12 13:22:04","true","docs(examples): fix codesandbox of optimistic updates typescript example (#3950)",31,35,1
"TanStack/query","716c5d8b096c624f6643dc9f263fbdd6f0565021","Mini-ghost","2023-09-05 16:45:05","true","chore(query-core): add deprecated hint for `isDataEqual` (#5962)",13,48,1
"TanStack/query","675605024d96aa99989cbeba2192b70f62be53da","cseas","2020-10-04 02:50:30","true","docs: Add eslint-config-prettier to devDependencies in custom-hooks example (#1127)

* Add eslint-config-prettier to devDependencies in custom-hooks example

* Remove unnecessary run from start command",13,13,0
"TanStack/query","8a86182c7e3219685856013890bc203d01c34583","GLabat","2023-11-04 15:35:05","true","feat(react-query): better error in development mode to identify bad useQuery calls (#6288)

* refactor(query-core): export isPlainObject

* refactor(useBaseQuery): dev error in case of bad argument

Mainly for project without TS. This helps tracking bad signature when migrating from v4 to v5.

* refactor(useQueryClient): dev error in case of bad queryClient

Mainly for project without TS. Make sure the queryClient passed as parameter is really a query. With the change of signature introduced by v5, queryOptions from useQuery could end up as queryClient due to how useBaseQuery works.

* revert: ""refactor(useQueryClient): dev error in case of bad queryClient""

This reverts commit 9bedf217828c7b11cb2676a97c6b4549334c5a00.

* refactor(useQuery): manual test to avoid export from query-core.

* refactor(useQuery test): TS ignore invalid call

---------

Co-authored-by: Guillaume Labat <guillaume.labat+git@imagino.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",6,50,1
"TanStack/query","772094159fbd74d527c7a2f39be5bb11662f8966","boschni","2020-12-20 11:48:14","false","test: move related tests into separate files",10,15,0
"TanStack/query","20bd90585a59e788b47a827e153a3cb62f90ddb6","dnyaneshwar2023","2023-11-01 07:26:08","true","docs: add information about error while retry attempts (#6276)

- I noticed this while I was trying to use useQuery and trying to capture the error property.
I think this is something which can be added as extra information for those who will be using it for first time.",3,50,1
"TanStack/query","70ddaa902e5393b9fae202c952491cc9d350b6e1","hsndmr","2023-01-03 17:45:54","true","docs: Add `reactotron-react-query` plugin (#4744)",36,40,1
"TanStack/query","6710bc1715fee2810ca3a35b76bca71738f5da7f","amen-souissi","2022-01-23 15:47:23","true","fix(types): use MutationKey instead of QueryKey for useIsMutating (#3222)",24,28,0
"TanStack/query","0054f7ffff712bafd8fbf44aaba23afba85d350d","tannerlinsley","2020-06-25 01:35:07","false","fix(prefetchQuery): add prefetchQuery(key, options) overload",0,9,0
"TanStack/query","6015eee093e847aaf07c3a7c7f69aa300b79c612","tannerlinsley","2020-03-30 20:59:41","false","Update README.md",2,7,0
"TanStack/query","38635be11a67c6dda1e44023086c64048bea87d5","tannerlinsley","2019-11-08 17:49:45","false","v0.3.6",0,2,0
"TanStack/query","0db8013404aca12b00c3b389365f242c1e94f381","boschni","2020-09-12 15:09:22","true","fix: notify query cache on stale (#1001)",10,12,0
"TanStack/query","abf386b5904fc9bd84f7a162908e86b05cb5c1a1","boschni","2020-09-17 12:07:36","true","fix: accept any promise in useMutation callbacks (#1033)",13,12,0
"TanStack/query","0b8c55c3a6f4a9e12a33ec828bc415c77679cf8b","boschni","2021-02-06 19:15:18","true","fix: single query methods should be exact by default (#1756)",19,17,0
"TanStack/query","14059f613180ab52ca81a2d6520776a56c694b68","tannerlinsley","2023-10-10 06:49:39","false","release: v5.0.0-rc.6",8,49,1
"TanStack/query","41e093885d41c9bd42b496fdd80391c5f89306aa","balazsmatepetro","2023-11-03 15:42:09","true","fix(codemod): add the `packageName` parameter to the `locateImports` function (#6285)

It's necessary, because before this change the above-mentioned function was looking for imports from the `react-query` package, but the package was renamed in the version 4 release. In case of the older codemods the `react-query` is still a valid package name, but for the current and future codemods we have to locate imports from the `@tanstack/react-query` package.",8,50,1
"TanStack/query","7a1382f00cdea4433c9d8f7bc9c1b3d69cf7f17a","phryneas","2021-06-07 05:57:45","true","docs: Update RTK-Query information in `comparison.md` (#2348)",23,21,0
"TanStack/query","3d83cfc16e7f19b0c2fd87529a524e0374a41f53","Stackustack","2023-02-02 09:50:49","true","docs(useQuery.md): add missing isInitialLoading as possible return (#4923)",31,41,1
"TanStack/query","c01634659cdd4a2e049412099f82615d0664666c","likerRr","2021-01-12 16:01:38","true","docs: fix guides references (#1615)",15,16,0
"TanStack/query","8980223fba508eef133b1c1bab61391d39cdd463","boschni","2020-09-18 14:09:16","true","fix: query should try and throw again after error boundary reset (#1054)",15,12,0
"TanStack/query","2d0d215944c5b2fb2e97b56b33d5e4aad121aec6","wolverineks","2020-07-14 02:25:06","true","fix(types): remove promise from useMutation (#746)",9,10,0
"TanStack/query","6c537eccfcfd28efaa813083b18b5dff628c7774","mechmillan","2021-03-23 20:15:02","true","docs: minor typos on infinite-queries.md (#2010)",31,18,0
"TanStack/query","c956f1af937f5f5186c7426dee1b07541264646b","raoufswe","2021-09-09 14:14:56","true","fix(UseMutationResult): MutationState type allows type narrowing to match useQuery (#2620)",25,24,0
"TanStack/query","d511b3c2d0af40d56a677260057e6741b44860c3","tannerlinsley","2023-10-19 22:12:12","false","release: v5.0.2",14,49,1
"TanStack/query","1cfaa55787946f83979a4609b669059247c5643c","tannerlinsley","2022-09-11 08:58:00","false","release: v4.3.2",19,36,1
"TanStack/query","911f123a8f80d7ce5c95a1487a44b69ded72640f","tannerlinsley","2020-05-05 18:01:29","false","v1.3.1",10,8,0
"TanStack/query","3c16aa4566f2d23c13c2e6ff823c4915b644604d","tannerlinsley","2020-07-08 14:44:00","false","docs: fix bad link",7,10,0
"TanStack/query","e4866a5554d892de93cc95797ae1e01425d3a24f","tannerlinsley","2020-03-06 17:13:01","false","v1.0.18",1,6,0
"TanStack/query","56e3ba7a9cc1b1959d308bbb886bb04f6e46a186","arnaudbzn","2022-01-14 13:06:50","true","docs(examples): react-native: update .gitignore to exclude lib folder (#3196)",26,28,0
"TanStack/query","6178b5638265fb265093cd59e8b7f4b5396a0bcd","tannerlinsley","2022-11-01 08:02:29","false","release: v4.13.7",15,38,1
"TanStack/query","3c1d2f0e7707dc9deafb6be3273f4dbf87906fcc","tannerlinsley","2020-12-14 07:07:55","false","docs: update installation",8,15,0
"TanStack/query","641add19df7f6067163668aec2cd71f358b770c9","tannerlinsley","2020-09-17 21:23:37","false","docs: fix graphql example link

Closes #1044",12,12,0
"TanStack/query","ed3a0ef1dd74f5c8a638780c1e19d6f4a7d194a8","tannerlinsley","2020-02-17 05:12:24","false","v0.3.27",14,5,0
"TanStack/query","b03b3eba4b331cee0d8c01c5e29505f61fab4e14","tannerlinsley","2020-09-17 00:05:00","false","docs: Update essentials banner",11,12,0
"TanStack/query","4a298156af7c6dfd6b574eb36322cec2c72b6c7e","tannerlinsley","2023-11-04 08:32:03","false","release: v5.6.0",8,50,1
"TanStack/query","222bfe3f85fdc0acfdf7db3cabb2f14d414a15fe","erich2s","2023-10-23 05:37:50","true","docs(migrating-to-v5): fix typo (#6224)",5,49,1
"TanStack/query","c118513e833e92025af4205c29b7e043cd286531","arnaudbzn","2021-11-09 10:12:57","true","test(core):  100% code coverage (#2904)

* refactor(logger): assume that console is always defined

* test(utils): isPlainObject: should return `false` if the object has a modified prototype

* test(utils): scheduleMicrotask should throw an exception if the callback throw an error",19,26,0
"TanStack/query","5a920dcacfb8a74ad4aec3aac18b3948ef95ea86","tannerlinsley","2020-03-17 22:05:09","false","Fixes #259",2,6,0
"TanStack/query","5f09f593a5c5a662f96bdc2567898053073ae86c","tannerlinsley","2020-03-02 19:13:08","false","v1.0.9",0,6,0
"TanStack/query","5ee01b38cc8e663e7669cf4fa8829d59abd566a7","tannerlinsley","2020-02-17 06:05:16","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",5,5,0
"TanStack/query","dcd892bf527d3f806fdba855f6acd25e3f5ddc14","tannerlinsley","2020-02-17 04:47:37","false","v0.3.26",15,5,0
"TanStack/query","8efa46cd18a0a40aa315d9cbf49bd68e159e87aa","dpyzo0o","2020-07-03 19:50:31","true","fix(types): useQuery enabled can be any type (#679)

Co-authored-by: dpyzo0o <yang.xu940121@outlook.com>",3,10,0
"TanStack/query","e3866de32cada28482a56e3c6eb20d646f371bd2","TkDodo","2023-10-16 06:52:31","false","chore: remove leftover dependency to client-only package",7,49,1
"TanStack/query","9953235d53666177c0e82f1234194b2f061b56cc","marcobiedermann","2022-07-22 11:41:42","true","docs: Update react-query.md (#3900)",24,34,1
"TanStack/query","7cabf53e4c7feceb122e7eda20f99ac6357931a9","tannerlinsley","2020-04-13 06:19:03","false","v1.2.3",2,7,0
"TanStack/query","8519dd4d6d2c72b6654367620fb89517a6181c7b","tannerlinsley","2020-06-24 16:39:23","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,9,0
"TanStack/query","bf2d7b6483c1db6496fa5ecc69aa494122ed2f81","tannerlinsley","2022-07-18 20:21:51","false","examples: update deps",22,34,1
"TanStack/query","7760ee51bbb19911899fd9fd6d2a670d2f980e5a","tannerlinsley","2023-09-18 19:51:05","false","release: v5.0.0-beta.33",11,48,1
"TanStack/query","d9467ff13fc5a8ceff618467ea2cf75a858905f5","drewbaumann","2021-07-23 11:39:54","true","docs: Update isError to error (#2483)",26,22,0
"TanStack/query","ca5081df9abb5b9a0ccdd1697f3aa6c73eac3dcc","DamianOsipiuk","2023-08-01 22:00:45","true","fix(vue-query): useErrorBoundary support in useQuery and useMutation (#5826)

---------
Co-authored-by: Anton Kolesov <headcrabogon@gmail.com>
Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",17,47,1
"TanStack/query","f9b23fcae9c5d45e3985df4519dd8f78a9fa364e","TkDodo","2021-08-20 14:19:14","true","feat(infiniteQuery): add possibility to decide which pages should be refetched (#2557)",22,23,0
"TanStack/query","aa97c2b2f25d7b03f08dead667b15045b3f70029","tannerlinsley","2023-01-29 17:20:36","false","release: v4.24.1",33,41,1
"TanStack/query","809f9bb7daded28a58119a9e5b2de1a607eaa661","tannerlinsley","2020-10-26 20:42:36","false","docs: update sponsors",12,14,0
"TanStack/query","db0023e1f651355e1c30cdbaacb52de8905923fc","tannerlinsley","2020-07-08 05:35:59","false","Merge branch 'docs'",7,10,0
"TanStack/query","00a3ab17d43162d33e97c2dcc4bd0643fe085f14","tannerlinsley","2020-05-11 23:00:55","false","test: Ignore weird test temporarily",11,8,0
"TanStack/query","650fb99764c9ce5bc7075e3cea1f6ce01cf8f875","tannerlinsley","2022-09-24 10:19:59","false","release: v4.5.0",17,36,1
"TanStack/query","42e4354ae7f2eaf14dac3be6d8491855c2d5f9ef","tannerlinsley","2020-03-10 19:24:46","false","Update README.md",0,6,0
"TanStack/query","767f687b7a54ee8b69ed2c1de4fb24524e79b43e","tannerlinsley","2020-03-02 22:00:37","false","Update deps",0,6,0
"TanStack/query","053a4b62d7f6352f95243d8ece333fb25c7e896a","tannerlinsley","2023-09-15 11:04:36","false","release: v5.0.0-beta.28",18,48,1
"TanStack/query","c014ea7a29db5bdd0770733e3c531c9050d7e4e9","lachlancollins","2023-10-22 01:08:22","true","chore: Disable vitest globals (#6216)",7,49,1
"TanStack/query","c3691691d5c5940b919ccddcf949cd8fd9d475ce","TkDodo","2023-07-14 10:08:52","false","docs: infinite query example

to only keep the first page",41,46,1
"TanStack/query","86150d6d1bb55c2ee4f6dc428d6d89f5f9bffd00","TkDodo","2023-04-02 08:01:44","false","chore: fix test:react:17 in CI",24,43,1
"TanStack/query","eac52f66d3b932cd17b1215eb95d2467f629d150","TkDodo","2021-04-13 20:11:43","true","fix(devtools): import useQueryClient directly from react-query (#2113)",27,19,0
"TanStack/query","900d2c51306a91372ae38d0d6846ae61a165c326","varwasabi","2022-09-20 06:47:27","true","docs: update react native app focus instructions (#4191)",18,36,1
"TanStack/query","1f21e9f1402dd3c377ca661de30ae8689ed64bd3","tannerlinsley","2020-02-27 16:43:35","false","Fix: Do not attempt to cancel resolved promises",1,5,0
"TanStack/query","379e4ae2c62718572d60080550461310f3783326","tannerlinsley","2019-09-11 18:21:30","true","Update README.md",0,0,0
"TanStack/query","f899e55ecac75ab272978fb73868bbe599618c1b","jvanaert","2021-04-13 20:09:41","true","docs: typo (#2118)",27,19,0
"TanStack/query","3ca4c645e3b38768bf1c52e84cdb4dabcd868160","Colonel-Sandvich","2023-10-15 08:58:21","true","fix(vue-query): update observer's options to latest value during suspense (#6134)",8,49,1
"TanStack/query","65490a19a50dee9c9440f2621454dbdeb73f9c38","tannerlinsley","2022-09-28 17:21:26","false","release: v4.7.2",15,37,1
"TanStack/query","c8a817f42a2bd52e88d5ecad6a12d2be56bf536f","tannerlinsley","2023-10-11 19:01:30","false","release: v4.37.0",6,49,1
"TanStack/query","a0f77121c2321ab48f4c013e0a5bd40a12edc5d0","Agreon","2020-05-26 13:28:15","true","fix(types): Fix error is typed as unknown (#483) (#514)",12,8,0
"TanStack/query","87358d73582b369f06cc81d0dfa135323df7d43d","tannerlinsley","2023-10-20 13:01:20","false","release: v5.0.3",9,49,1
"TanStack/query","46ecce32c5b1fd418d569d609e002e985eadd491","tannerlinsley","2019-11-11 17:27:09","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,2,0
"TanStack/query","f1ac84572e82eb9ac7342b50d007c29f048ae266","lachlancollins","2023-05-01 11:42:22","true","chore: Validate ""exports"" field in package.json (#5350)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",20,44,1
"TanStack/query","ff2c48e684def29c9ca36ec914cb68792c9326ea","tannerlinsley","2019-11-04 21:40:59","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",0,2,0
"TanStack/query","840020f26678d21758962a8cb6930042299896b1","tannerlinsley","2020-05-12 06:21:17","false","Update README.md",11,8,0
"TanStack/query","878d85e44c984822e2e868af94003ec260ddf80f","tannerlinsley","2023-05-29 11:32:59","false","release: v4.29.12",22,44,1
"TanStack/query","ae7b2abc2b46f1cb91c0dae7b0162e8f849acbf2","siddtheone","2022-10-07 15:25:12","true","docs: Improve example (#4251)",16,37,1
"TanStack/query","d02413485a9362598837409cc6052a9505142a0a","killerchip","2020-05-05 14:56:51","true","fix typescript issue: force option not allowed in prefetchQuery (#448)",9,8,0
"TanStack/query","2a31f8d005d5f9913047d61b91ee1e49fedbefac","tannerlinsley","2020-06-24 22:49:11","false","feat: add default quernFn option

This feature allows you to set a default query function in the config and use it for your whole app, similar to how early SWR user's were just passing a url. Now you can do the same and just do `useQuery('/todos')` :)",0,9,0
"TanStack/query","2dcd7673ce99dc174ca25b375f71e6a32528c678","coryhouse","2020-05-26 13:31:35","true","docs: Remove swr comparison point (#516)",12,8,0
"TanStack/query","eb61db3dd8b77a828c9aec0bee057c3e3b6f2ddf","tannerlinsley","2022-07-19 06:17:03","false","release: v4.0.4",23,34,1
"TanStack/query","93f515c5d38780fc4820f628d6a4939f0c83128b","arteg","2021-02-02 17:58:18","true","docs: fix links in initial-query-data.md (#1723)",29,17,0
"TanStack/query","885edf97fc2eca9711dd1c17f43067e6d6ac3b6e","Ironimus","2020-03-02 00:24:21","true","Fix a few typos in README.md (#178)",1,6,0
"TanStack/query","792e0b24368b1650fdd904c9e4c85cdcf7118867","manudeli","2023-07-31 10:46:57","true","chore: update actions/setup-node@v3 in .github/workflows/* (#5744)",19,47,1
"TanStack/query","fcd9861b5726e2716490b96a1f777fc932a5efa2","wolverineks","2020-12-17 21:23:57","true","docs: Update Footer.js (#1468)",10,15,0
"TanStack/query","b67107114ce6ccf0d38c2ab22b3088df19ec119b","LineGu","2023-10-29 13:25:09","true","fix(query-core): ensureQueryData should not call fetchQuery for queries with falsy data (#6261)

* fix(query-core): ensureQueryData call fetchQuery when the query actually does not exist

* fix: all the returned data covered by the test case to be falsy values

---------

Co-authored-by: goo <goo@tossbank.com>",4,50,1
"TanStack/query","454c58481f6f5d5c3e182e6e418d65fdb4a9ec1f","ro0t","2022-07-27 09:57:10","true","Already checked in line 566. (#3915)

* Already checked in line 566. (╯°□°)╯︵ ┻━┻

* Well done spotting this @TkDodo",23,34,1
"TanStack/query","a27439e2e2a19ef92d97ea42a9e52bff4939aa16","tannerlinsley","2022-09-27 14:12:43","false","release: v4.7.0",16,37,1
"TanStack/query","51adad2ce25fdd2d9d24349c18283a54cfc33eb9","tannerlinsley","2020-05-12 06:20:19","false","Update README.md",11,8,0
"TanStack/query","c5d8582b25a8242bf9e6e632d9551e6b29b21713","DamianOsipiuk","2022-09-11 17:48:39","true","fix(build): cjs extensionsless import for .native files (#4144)",21,36,1
"TanStack/query","c2447a9fd0f3d3f21a0718fcccbd1bb221f7f932","DamianOsipiuk","2022-11-14 00:32:51","true","feat(vue-query): client persister (#4469)

* feat: vue-query client persister

* fix: change devtools link to tanstack query

* chore: update repository in package.json

* docs: persister example

* feat: propagate isRestoring trough queryClient

* fix: useIsFetching allow refs as args

* fix: allow ref args for useIsMutating

* test: add test for isRestoring

* chore: fix formatting

* fix(vue-query): suspense unsubscribe from watch

* feat: persistent useQueries

* chore: examples formatting

* test: persister

* chore: fix lint errors

* chore: fix weird lint errors",16,38,1
"TanStack/query","454482c4d1005d30235212a0cd44bac02be642da","cngJo","2022-12-23 09:08:18","true","docs(vue-query): add example for dependent queries (#4330)

* docs(examples/vue): add example for dependent queries

* docs(examples/vue): don't unwrap authorId in queryKey

* docs(examples/vue): run pnpm i

* chore: apply code formatting",39,39,1
"TanStack/query","1e0745a6cc80cbdbafc3153812b7982a8f549447","zorzysty","2022-11-26 16:33:23","true","feat: queryClient.ensureQueryData (#4544)

* feat: queryClient.ensureQueryData

* style: apply prettier

* refactor: make interface of `queryClient.ensureQueryData` similar to `queryClient.fetchData`

* docs: update docs of `ensureQueryData`

* style: apply prettier formatting

* docs: adjust options description

* refactor: improve types of ensureQueryData overloads

* Update packages/query-core/src/queryClient.ts

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",16,38,1
"TanStack/query","cecf521bc0a82e0a5537ff38f9c2f8ec17421d22","tannerlinsley","2020-07-01 20:07:33","false","fix: allow empty query key (with config enabled)",2,10,0
"TanStack/query","3e62b4854829f48b5bb948674652c961708294e7","tannerlinsley","2020-03-27 03:10:57","false","v1.1.6",2,6,0
"TanStack/query","2b6a711cf38acaa891bf0db3a6d871247abe9b9a","nucleartux","2020-03-27 14:45:55","true","fix typo in readme (#292)",3,6,0
"TanStack/query","f11920e3b9db21ab925d21e3e10816d5cf64b6e6","tannerlinsley","2020-02-18 00:16:02","false","v0.4.3",3,5,0
"TanStack/query","f535a4d1c3c3c6d2e8ba7edaa3c2133833ef9d34","tannerlinsley","2019-09-10 23:28:13","false","v0.0.10",0,0,0
"TanStack/query","26600b15bc041bf7c3d6244638ebed0905ebb918","boschni","2020-08-21 13:04:45","true","feat: add structural sharing configuration flag (#902)",10,11,0
"TanStack/query","87300819cfc686e81300147c008955dc8d71833e","tannerlinsley","2023-04-10 09:45:56","false","release: v4.29.1",21,43,1
"TanStack/query","123104cc5168f2954e88d01103373aceae22f35b","tannerlinsley","2020-08-31 21:15:26","false","fix: add hydration.js to npm files",11,12,0
"TanStack/query","43e2656752db417d745d1444322ce621cbe86403","bennettdams","2023-11-06 13:22:43","true","docs(paginated-queries): Add import statements (#6315)",2,50,1
"TanStack/query","6ee06719aedbf210d9c336b039f40b9667de4da0","TkDodo","2023-11-05 15:19:29","true","fix(types): remove `suspense` from `defaultOptions` (#6301)

we don't want to be able to set `suspense: true` globally like this anymore: React has `useSuspenseQuery` and other frameworks don't need it either",4,50,1
"TanStack/query","a88d80f6f7b2d96ab605ac08f4fbaed9a3bcd4b7","eomttt","2021-04-10 13:58:09","true","fix(types): Add `undefined` return type in onMutate  (#2089)

* onMutate callback add void in return type

* Add core type

* return type void to undefined

* onMutate return type change 'Promise<TContext> | Promise<undefined> | TContext | undefined'",26,19,0
"TanStack/query","46f99f021e11648082d24819b13bf855334b2aff","Mini-ghost","2023-10-11 19:02:25","true","feat(vue-query): let composables accepts `enabled` as a getter function (#6018)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>
Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",6,49,1
"TanStack/query","eefc777f2dffd3d7c45e8bf1f4aee7f287b5a49c","amuttsch","2022-09-18 19:16:27","true","fix(react-query-persist-client): Make dependencies to peerDependencies (#4165)

For yarn 3 pnp, having react-query as a normal dependencies causes it to
be bundled multiple times. The query client set in
react-query-persist-client is not visible for the normal useQuery
imports from react-query. Setting react-query as a peerDependency
instead fixes this issue.

Co-authored-by: Andreas Muttscheller <andreas.muttscheller@codecentric.de>

RELEASE_ALL",21,36,1
"TanStack/query","8b51e8b690f68190c06c865a84fb6a22c5c29d34","tannerlinsley","2023-02-23 06:03:04","false","release: v4.24.11",28,41,1
"TanStack/query","54a4103b38582ecd32fff42cc64c24ab976d69e0","tannerlinsley","2020-07-08 06:37:43","false","docs: mdx -> md for many files",7,10,0
"TanStack/query","00b9e968a80ca7c51fd50479aee852bb41bf9bc6","boschni","2020-09-08 19:11:23","true","refactor: optimize render path and improve type safety (#984)",7,12,0
"TanStack/query","aa2f94420f17d6ea4d47241e31a0322fe265ee27","tannerlinsley","2023-03-06 20:35:30","false","release: v4.26.2",26,42,1
"TanStack/query","4872c4bae1991708bc53034ac3ef81b336b67b23","bastibuck","2023-10-09 07:57:40","true","feat(devtools): make data of queries editable  (#5970)

* feat: allow editing string field values

* feat: make arrays clearable

* feat: add clear list icon

* feat: allow editing number values

* feat: make array items deletable

* chore: use ClearArray button component

* chore: clean up code

* test: add test for deletion

* chore: inline prop types

* chore: make dataPath optional

* chore: clean up button props

* test: use inline snapshots for data checks

* feat: use setQueryData for setting newData

* feat: use ts-expect-error

* feat: make more data types deletable

* feat: allow editing in Maps and Sets

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",9,49,1
"TanStack/query","9c15b327df35d7676e3fc768e7a4b753d7098af9","TkDodo","2023-01-25 19:37:50","true","chore: fix ci-v3",32,40,1
"TanStack/query","cdc5061577117597f6d2d4fbe3c8c8f0fb2d43b8","TkDodo","2023-10-10 11:11:15","true","fix(types): useSuspenseQuery can be in error state (#6129)

because we don't throw background errors to boundaries; still, it will always have data defined",8,49,1
"TanStack/query","60f460f1af3c297b98490d4437e14843b3a7b10c","TkDodo","2022-11-08 11:06:29","true","docs: immutability",19,38,1
"TanStack/query","6f12dee8494a2e9a1edbb772e074ec7581a7f39b","ardeora","2023-10-23 16:21:52","true","feat(query-devtools): Add mutations view (#6218)

* feat(query-devtools): Add mutations view

* Fix height on verticle view

* Remove unused queryClient

* Remove focus-within styles from toggle

* Reduce toggle label text on smaller screens

* Move toggle next to logo

* Fix button styles",6,49,1
"TanStack/query","17c642d53731b0c3d291590c8feec9cd3fe7d26b","Newbie012","2022-11-04 14:30:30","true","fix(eslint-plugin-query): handle first argument reference edge case (#4451)",17,38,1
"TanStack/query","3c561ba923dc9b45a484a546dc249270ec6eabad","Newbie012","2023-05-22 19:48:22","true","fix(eslint-plugin): lookup for any function ancestor (#5448)",25,44,1
"TanStack/query","ec23747b59e3082c38844b93a571ed43c7c11d95","dducluzeaud","2022-09-19 17:26:04","true","docs(react-native): delay fn returned a function insted of data (#4189)",18,36,1
"TanStack/query","f6434fa74e0560ceb5023b34e423e8bfe583975b","kamranayub","2020-05-30 03:30:07","true","fix(config): Restore previous original config when ReactQueryConfigProvider is unmounted (#429)

* restore default config on cleanup

* Add test for nested configs

* Revert ""restore default config on cleanup""

This reverts commit c7647a47a6f0e2ae151fdcd465c47957fc8a8975.

* restore settings

* At least one failing test will pass

* Fix act warning

* Fix other test, copy suspense logic",18,9,0
"TanStack/query","702bafcf8fc8adea8df57caec77b602c9ad7e4c8","mhmdAljefri","2021-09-22 19:21:37","true","docs: Update persistQueryClient link (#2699)",19,24,0
"TanStack/query","b99ce8f79d8e63bfb251a5c37f55e34941971d5b","tannerlinsley","2023-10-16 07:04:04","false","release: v5.0.0-rc.16",7,49,1
"TanStack/query","bae0f7e8515190b40bf6fd0e08228e51487c434d","siddtheone","2021-02-02 18:32:41","true","docs: Adding missing config property (#1673)

From documentation below it seems, code example missing `mutationKey`",29,17,0
"TanStack/query","4c6b3f264f1caef18773a30f7ae64c80cefdf989","tannerlinsley","2019-11-05 05:31:40","false","Update README.md",0,2,0
"TanStack/query","3f5f262670f58d22152797a8cc15bd2b9e222616","tannerlinsley","2019-11-04 21:38:09","false","Update Examples List",0,2,0
"TanStack/query","3d5b87f0b7ff6706b0291a913adecc7f2d94c5e7","tannerlinsley","2022-07-18 22:26:51","false","Update publish.ts",24,34,1
"TanStack/query","5c0808849e1a23d5d9f812eb7e6a04fc54eac115","tannerlinsley","2023-09-24 07:22:03","false","release: v5.0.0-beta.36",10,48,1
"TanStack/query","f83fe47822498a3c2b55c9dbe44c5a9eb235f9ed","tannerlinsley","2023-10-15 09:02:40","false","release: v5.0.0-rc.15",8,49,1
"TanStack/query","1da9e43895ed21f7242c71b70b935725ab210230","TkDodo","2022-08-19 06:55:25","false","chore: use strict dependency versions in publish scripts",22,35,1
"TanStack/query","5898ec0b1f96bd03da53a3bc96287b2b9b03b8da","TkDodo","2023-10-17 12:16:34","true","feat: v5 release (#6163)

BREAKING CHANGE",6,49,1
"TanStack/query","07f06b98c49d0389798b318bfd89fd21eac83987","aequasi","2020-10-08 23:21:47","true","docs: Remove unnecessary --save in install instructions (#1149)

* Remove unnecessary --save in install instructions

Thankfully, `--save` hasn't been necessary with NPM for some time now :)

* Update devtools.md

* making uniform with devtools instructions",4,13,0
"TanStack/query","4472baea1da2242b2ebf4491a1005516ecf7de6c","zaguiini","2021-10-26 19:28:38","true","feat(useQuery): add meta field (#2818)",19,26,0
"TanStack/query","4e3aebf81acb77fcd31b7a8698f9ae95f0ded11f","medayz","2021-02-11 12:51:12","true","docs: fix typo (#1763)",18,17,0
"TanStack/query","16b7d290c70639b627d9ada32951d211eac3adc3","Pau1fitz","2021-06-29 13:48:02","true","docs: Update important-defaults.md (#2413)",24,21,0
"TanStack/query","4690b585722d2b71d9b87a81cb139062d3e05c9c","henryn098","2022-08-21 06:47:17","true","docs: Fix typos (#4061)

* docs(reference): Fix typo

* docs(guides): Fix typo",23,35,1
"TanStack/query","e0983bc3e5f47fdd262882acfea0666ca322c613","tannerlinsley","2019-11-13 17:30:13","false","v0.3.9",2,2,0
"TanStack/query","0567d9d0456f8eef223611c4016d9d12322badcb","tannerlinsley","2020-04-15 02:10:28","false","Fix #352",2,7,0
"TanStack/query","3e49f29f11d919282da7b6296265148ea7f32978","tannerlinsley","2020-02-27 16:43:38","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",1,5,0
"TanStack/query","fae2718498c1b1dc094af854a5450cada4592292","tannerlinsley","2022-10-30 22:43:15","false","release: v4.13.5",15,38,1
"TanStack/query","1883be39dbe2f451a60472435514e144947210f9","tannerlinsley","2022-11-13 07:54:27","false","release: v4.15.1",17,38,1
"TanStack/query","7226d5064a429c90ba1ee24d9e094e452111e62f","lachlancollins","2023-06-12 07:55:04","true","chore: Merge select workspace changes from alpha (#5563)",23,45,1
"TanStack/query","46b0aee00af27e6de4868b897248279dd3d30c5e","zorzysty","2022-08-11 15:55:13","true","docs(examples): Migrate rick and morty example to vite (#3958)

* docs(examples): migrate examples/react/rick-and-morty to vite - adjust file structure

* docs(examples): migrate examples/react/rick-and-morty to vite",34,35,1
"TanStack/query","4cdcd18fce9f1485e7ca047ec831d330c6eec300","MichaelDeBoey","2020-06-29 23:05:54","true","Update FUNDING.yml (#665)",4,9,0
"TanStack/query","76b98ed107c97660ac2ecb36b9e699b1be1bb316","amerllica","2022-08-22 18:41:04","true","docs: Add new guides for React Native createAsyncStoragePersister (#4064)",22,35,1
"TanStack/query","2b8d2af4d1d76d25c6d363db2ed0388ccbc1ccc0","TkDodo","2021-06-05 08:51:46","true","chore: turn on noUncheckedIndexedAccess compiler flag (#2341)",24,21,0
"TanStack/query","2608241d2aacb16e5061cdeee8c7c8c5bdbfca18","mattmikolay","2020-12-14 20:52:39","true","docs: fix links (#1414)",8,15,0
"TanStack/query","54c559e30fd42cb73111db58d075cbde9f425e56","aviaviavi","2020-03-25 21:00:09","true","Add Scarf dependency for installation analytics (#281)

* Add Scarf dependency for installation analytics

* focus on package.json based opt-out strategy rather than environment variable

* typo

* unfill paragraph for consistency with the rest of README.md

* typo2",0,6,0
"TanStack/query","fc1bd9ab877a975dff675b88414a3db2775edd29","tannerlinsley","2020-03-02 19:12:56","false","Update CHANGELOG.md",0,6,0
"TanStack/query","fc5cd2928fabaf40633ccff239d28f56b499e5d6","tannerlinsley","2020-03-10 17:53:41","false","Fixes #216",1,6,0
"TanStack/query","ab27f7c66457cbede0473eea394819b7d7efc46a","DamianOsipiuk","2021-05-07 16:06:48","true","refactor(devtools): move default theme to theme file, fix types (#2213)",34,20,0
"TanStack/query","b974268bf2fd5e680e7f06250b3a81a359336ff8","DamianOsipiuk","2023-03-10 15:22:14","true","docs: add adapter dropdown to issue template (#5108)",29,42,1
"TanStack/query","2da342cde91537ef6bb8d9edfa8a967be9ef012b","boschni","2021-02-06 18:39:38","true","fix: update synchronously to make sure observers always have the latest state (#1757)",20,17,0
"TanStack/query","fc193a11f379a1c8df8a50d87b8ef1d5c213a10d","joshuat","2020-03-12 15:02:50","true","Remove typo from README.md (#233)",5,6,0
"TanStack/query","8d949e1e6dda4e7a520b019ff1e78ea73f4ee784","wtlin1228","2021-05-16 17:25:58","true","docs: update testing (#2287)",27,20,0
"TanStack/query","423bcf07cd13eb49d1e18a0887d48965ca7b3a3b","Mini-ghost","2023-09-07 08:15:15","true","refactor(query-core): remove `queryKey` check in production environment (#5969)",15,48,1
"TanStack/query","03f31479d110e85358e4014696e68f6321195163","cherniavskii","2020-03-30 20:28:43","true","Do not refetch manual queries on window focus (#300)

* add failing test

* do not refetch manual query on window focus",2,7,0
"TanStack/query","22979192f4d00ccbbbc4a7f40d0838b4fc8ae182","tannerlinsley","2020-03-26 06:24:34","false","Simpler basic example",0,6,0
"TanStack/query","53906f479a8052b4819e0dcaf494cdb4bad73425","tannerlinsley","2020-03-25 21:02:30","false","Update CHANGELOG.md",0,6,0
"TanStack/query","7c81e76bc4bbcbbee92c78acba2ddd6b7273749a","tannerlinsley","2019-12-09 20:44:33","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",3,3,0
"TanStack/query","70027fab4b90d8cc57aa28849306183bcc596c0b","tannerlinsley","2019-12-09 20:43:42","false","Fix query not refreshing during subsequent suspense mounts",3,3,0
"TanStack/query","1ef2958113e6ac41eaae3d2b849aed518b69e7b9","TkDodo","2023-02-12 08:57:42","true","fix(core): make sure pausedMutations always execute in serial (#4906)

* fix: make sure pausedMutations always execute in serial

when resumePausedMutations is called multiple times, we are starting the second paused mutation even though the first one has not yet finished. This can happen when a focus event and an online event happen in short succession

* fix: always return the same Promise when resumePausedMutations is called

* fix: make sure every call to resumePausedMutations is evaluated

mutation.continue() needs to immediately resolve back if we didn't really continue so that consecutive calls to resumePausedMutations can be appended to the promise chain

* fix: types",37,41,1
"TanStack/query","9428bfdb7f7a6a6ffc2ef39fbd743e0b7c34e1b7","TkDodo","2021-03-30 17:41:52","true","fix(types): onlineManager: setup function needs to accept the online boolean, and the cleanup function shouldn't (#2053)

* fix(types): setup function needs to accept the online boolean, and the cleanup function shouldn't

* fix(types): assign listener to a function so that we can properly unsubscribe",28,19,0
"TanStack/query","f97742ef3617f12c3fad1e8bc1092ad84e1fe520","aadito123","2023-08-29 15:31:45","true","feat(solid-query-persist-client): Solid.js implementation of client persistence (#5858)

* added solid-query-persist-client package

* isRestoring context

* convert persistence logic to solid

* modify tests for Solid

* modify test for increased reactivity

* fix Provider

* fix jest for Solid

* add isRestoring logic

* prettier + lint

* make fixes to pass tests

* change testing to vitest

* add isRestoring check

* update test

* fix staleTime test

* add unsubscribe condition

* formatting

* update createBaseQuery to refetch after hydration

* refetch on hydration

* formatting and build test fix

* T[] -> Array<T>

* changed useQueryClient to return a signal

* keep queryClient reactive, without breaking API",13,47,1
"TanStack/query","ed846c5baa6d3d548ab08d1505487bb4a7a8adb0","NikoKodzhabashev","2021-02-02 18:01:49","true","Update QueryClient.md (#1686)",29,17,0
"TanStack/query","c7a18ebe2cdb0ba3a5e9975ed304ed92b827e9da","TkDodo","2023-09-16 15:02:35","true","fix(react-query-persist-client): don't double-restore in StrictMode (#6020)",17,48,1
"TanStack/query","d785c2b154d1c168b9b8a92cb2097ea558387eae","TkDodo","2022-10-14 05:34:32","false","chore: fix tests in publish script

run the tests before we make the build so that tests are not run against the built files",17,37,1
"TanStack/query","1f74575b6da3bced5b59962df16b0f3f3440755f","TkDodo","2023-07-25 08:04:45","true","docs: examples to beta (#5772)

* docs: mention beta

* docs: make example use beta.0

* docs: examples to beta",24,46,1
"TanStack/query","41ad9a2ddc74f604bd4e8b7088a2d9a1a3d09385","TkDodo","2022-09-10 10:17:14","true","fix: force release

RELEASE_ALL",19,36,1
"TanStack/query","1569803eda24a64421e58e891ea6e7fd931c82fc","TkDodo","2023-08-04 13:48:18","false","Merge remote-tracking branch 'origin/beta' into beta",16,47,1
"TanStack/query","f65e7af10fcafc291e4d930e96d4dd81ba80bea3","dante01yoon","2022-11-13 09:33:18","true","test: add useQueries with suspense tests (#4502)

* test: add useQueries with suspense tests

shouldn't unmount before all promises fetched
should suspend all queries in parallel - global configuration

* fix should suspend all queries in parallel - global configuration - remove query suspense option

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",18,38,1
"TanStack/query","ab837af830de30ab3d1e88357c2a2e73cb781f1f","tannerlinsley","2020-02-26 19:47:48","false","Update CHANGELOG.md",1,5,0
"TanStack/query","9faeff240f710cd41471acb54bc9533bd32a72c5","tannerlinsley","2021-03-26 21:49:06","false","docs: update footer styles",30,18,0
"TanStack/query","4445d72b47ab7679e3e8f24e3f9efe3d3faeb215","tannerlinsley","2023-11-06 20:59:06","false","release: v5.7.3",1,50,1
"TanStack/query","cef9d8a8bbca2fd48b627965f13ea7c30ba12de6","tannerlinsley","2020-02-17 04:36:59","false","Update CHANGELOG.md",17,5,0
"TanStack/query","395a9a13781ba084561e3ce6646e6225cdc39c19","tannerlinsley","2023-08-30 08:20:03","false","release: v5.0.0-beta.22",13,47,1
"TanStack/query","2544f079675f9b43598447c77f81ecb5397eaafc","DamianOsipiuk","2021-09-19 17:35:25","true","fix(persistQueryClient): import hydration utils from core in persistQueryClient (#2684)",22,24,0
"TanStack/query","52607f6a7eaf5dab2825b490ebea849928a12fe8","boschni","2020-09-01 15:36:59","true","fix: make sure queries with only inactive observers are also invalidated (#949)",10,12,0
"TanStack/query","82d041dd2640272ee9c49157a567b0af3a767c1a","Karol-Perec","2022-07-19 00:47:35","true","fix: react-query package types import path (#3850)

RELEASE_ALL

Co-authored-by: Karol <karol.perec@tsh.io>",24,34,1
"TanStack/query","e91f7514a603e88e264be72a8ec28f5c4e375a7e","lachlancollins","2023-07-17 05:22:01","true","docs: Use svelte for prismjs codeblocks (#5727)",27,46,1
"TanStack/query","584932e1c42fcc236ea5184a9a3e49f64de85a3d","tannerlinsley","2020-05-15 21:24:51","false","docs: fix to query.state.updatedAt

Fixes #497",12,8,0
"TanStack/query","422e47297a7fe16477dc762f9bfd62f1e10f9ec4","tannerlinsley","2020-01-10 15:30:49","false","v0.3.24",3,4,0
"TanStack/query","9cd7a3578f36829f9d5f9fbc50e937b9676ec1a8","krasinedev","2020-04-26 15:19:34","true","fix: rebuild cursors on infinite query refetch (#408)

* fix: rebuild cursors on infinite query refetch

* update the infinite query docs about refetching",6,7,0
"TanStack/query","ce2c44559856f75ab6eabd281d65832851566751","TkDodo","2023-09-25 08:35:31","false","chore: rc release

RELEASE_ALL",9,48,1
"TanStack/query","cbda68de92187859f3c992e303a9309dc2758c1a","markbrockhoff","2023-09-01 05:43:02","true","fix(vue-query): Make query options watchers sync (#5929)

* fix: make watcher for queryOptions sync to reflect changes to them immediately

* fix: make option watchers sync for other composibles

* test: improve test for dependent queries

* test: update test to check for dependent query to be called with the correct key

* docs: fix example to use queryKey instead of reactive variable

* test: resolve mock queryFn

* test: keep fetch status checks in test for dependent queries

---------

Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",13,48,1
"TanStack/query","7cd586ffe66ce553dd8a6c47be15676059c7fb55","Armanio","2020-11-15 15:17:53","true","docs: correct example code (#1290)",7,14,0
"TanStack/query","a3fd7f286e537f11721e885a9014e06f7110a538","zorzysty","2022-08-16 07:03:31","true","docs(examples): migrate examples/react/basic to vite (#3949)

* docs(examples): migrate examples/react/basic to vite - adjust file structure

* docs(examples): migrate examples/react/basic to vite

* docs(examples): migrate examples/react/basic to vite - update package-lock.json",21,35,1
"TanStack/query","e33bda3131442f34577f13c73f3c6e890b504a62","lachlancollins","2023-01-13 13:18:36","true","chore: Add sandbox.config.json (#4812)",33,40,1
"TanStack/query","d79f2b97d226a2a846af51570497ef32ccf53af8","lachlancollins","2023-01-08 12:17:23","true","chore: Remove incompatible vitest flag from test:ci (#4777)

* Remove coverage flag

Add back again in a simpler script setup

* Allow coverage to run on test:ci",36,40,1
"TanStack/query","5db686809e7591a56cf751e29aa5b02551b972af","DmiPet","2021-01-10 20:36:32","true","docs: fix type (#1617)",13,16,0
"TanStack/query","df8f685e010faa0ee6017944ea2a0bd1572d94f1","camflan","2020-03-12 15:15:12","true","useMutation docs incorrect (#239)

* useMutation docs incorrect

Variables should be in the return mutate function, and the standard query state (status, error, data) was swapped with callback configuration.

* Update README.md

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",5,6,0
"TanStack/query","8013d4a768e1fabd30f349c1a5e2722c8f8a099e","bengry","2021-10-31 20:00:39","true","feat(persistQueryClient): add optional functions to serialize and deserialize from Storage Persistors (#2864)",21,26,0
"TanStack/query","97cb12f369ea302aac792cccedbd0a939e8e0cc5","tannerlinsley","2019-11-13 21:37:27","false","v0.3.12",1,2,0
"TanStack/query","d499ebe22c307895af443cf33fd9804ad988a2a9","tannerlinsley","2020-03-04 18:38:44","false","Update README.md",1,6,0
"TanStack/query","7ed20b5e3d22672d04fa8db57746e690271afa06","tannerlinsley","2022-07-21 08:04:40","false","release: v4.0.9",24,34,1
"TanStack/query","66ab6b51936bc96639264a69bf7ef2858556a437","dimitropoulos","2022-11-01 06:59:23","true","docs(guides): minor fixes and typos (#4419)

* fix: consistent punctuation in list

two of these have periods and two don't... so I looked around at what is done elsewhere and took my best guess

* adds linkback to docs for refetchOnWindowFocus

at this point in the readthrough, this is the very first time I'm seeing anything about ""options"" and having a link to one is nice, just to quickly see what they look like and hop right back to this page.  I'd love to add some docs to the 4 that are mentioned in the next paragraph but they don't seem to have a way to link to them since they're contained in an unordered list on the useQuery page

* moves asides to be in context with attached bullets

I don't see how to run the docs site locally to test this, but at least on GitHub's markdown parser this would really help align the quote block with the associated bullet (as it is today is sorta hard to follow because some are global and some are attached to bullets, yet they're all at the same level).

feel free to drop this commit if it doesn't work for the actual markdown parser.

* adds missing inline codeblock for signal obj

* matches QueryFunctionContext types to source code

see https://github.com/TanStack/query/blob/759aa0a89c593ab452316b799d952153752ac1c9/packages/query-core/src/types.ts#L24

following the standard of https://www.typescriptlang.org/tsconfig#exactOptionalPropertyTypes these types are subtly incorrect.

* fix multiple h1s on page (and this one pushing above)

check out https://tanstack.com/query/v4/docs/guides/background-fetching-indicators#displaying-global-background-fetching-loading-state

and see that the section that's an h1 at the bottom is pushed pretty hard up against the codeblock before it.  I think this is some kind of tailwind problem, but it's a win-win because a page having multiple h1 elements is an accessibility nit anyways",16,38,1
"TanStack/query","11f08c37d56c8aa5d9b28d8422842bc1a147c487","DamianOsipiuk","2022-11-26 06:37:16","true","chore: fix prettier script, format examples (#4534)",16,38,1
"TanStack/query","979527b2a922ece2c548f1a82de74052138368cb","boschni","2020-09-17 14:45:34","true","feat: add QueryCache.fetchQuery method (#1041)",13,12,0
"TanStack/query","aa94a946c29a88934a72faabac523fed7cd5b411","sneridagh","2023-02-18 10:50:48","true","docs(react): Fix SSR custom framework guide -  should be deconstructed (#4998)",32,41,1
"TanStack/query","5e86d334e5ae167cf0a603d183d1fb9fe097eb72","tannerlinsley","2020-07-17 16:59:57","false","fix: force patch release",9,10,0
"TanStack/query","9f36a0b9d2d3e1fd8cb7c009ce944a13245aba9e","tannerlinsley","2020-03-09 19:24:46","false","Cleanup",1,6,0
"TanStack/query","c3e42c44afa4f19613043e64aca7d88b9d68ba08","tannerlinsley","2020-06-24 16:39:15","false","fix(refetchOnWindowFocus): stale queries are no longer refetched",1,9,0
"TanStack/query","4cbae3b70db5dc53eb6eaef3932cd121b1a0f11a","tannerlinsley","2020-03-20 22:58:04","false","v1.0.31",5,6,0
"TanStack/query","ffa1227895a8cdc1c71dfe1de09ad92d2fdd2f39","tannerlinsley","2019-11-07 19:21:53","false","Fix falsey query values",2,2,0
"TanStack/query","93d2ff940b4f282f6a6e69bff3030e1cc08c588c","tannerlinsley","2019-11-13 17:28:56","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",2,2,0
"TanStack/query","8e24ebdec184996ded8b83bcbdd7d60fcfa480a6","boschni","2021-02-04 09:16:08","true","fix: accept null values in mutate function (#1740)",24,17,0
"TanStack/query","c6c0de6ccdbb26dfdd4398008573e873c60bfef8","boschni","2020-09-03 20:06:52","true","feat: add isPreviousData and isFetchedAfterMount flags (#961)",8,12,0
"TanStack/query","f2bfc69285f05e4e70d08108f0581edd5ef2c6ba","zrwsk","2022-02-13 19:39:32","true","docs(mutations): describe difference between using callbacks in useMu… (#3274)

* docs(mutations): describe difference between using callbacks in useMutation and .mutate

* Text corrections

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* add subheader

* update consecutive mutations case to better describe ordering of mutation calls and fulfillment

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",20,29,0
"TanStack/query","f29f0e7097e4839c5063250d5db831bab6feede6","flodlc","2023-11-12 10:38:37","true","docs(community): adding http-wizard (#6360)",0,50,1
"TanStack/query","6df2ae1d1140b9e65be4096c11806f71c27771e0","manudeli","2023-11-11 20:38:42","true","chore(query-core): resolve prettier error (#6359)",0,50,1
"TanStack/query","62e12e563e3cba7cda1c56af1eb3c56f286d794c","nikasepiskveradze","2021-11-17 11:29:06","true","docs(reference): fixed right sidebar width issue (#2952)",26,26,0
"TanStack/query","1aaca282afbb994e082bbda5c5a0548ab6e59f0e","bennettdams","2021-10-27 11:29:24","true","docs: Extend type description of useQuery's onSuccess (#2836)",22,26,0
"TanStack/query","310c222b380ba1ca0d7472d57583d01d56ac5616","tannerlinsley","2020-12-14 06:04:34","false","chore: update release config",8,15,0
"TanStack/query","6f042e0ea512692e39a803d3cc64ba4690a10a4e","rodrigofuentes","2020-09-25 16:21:44","true","docs: blockquote anchor color (#1096)",6,12,0
"TanStack/query","2fb23e467698f233a2af86735fb81e89c3bffb55","cherniavskii","2020-03-06 19:49:05","true","initialize state properly, when initialData is falsy (#212)

* add failing test

* fix failing test

* reverse condition

* Update src/tests/useQuery.test.js

* Update src/tests/useQuery.test.js

* use prepublishOnly npm script

* v1.0.22

Co-authored-by: Tanner Linsley <tannerlinsley@gmail.com>",0,6,0
"TanStack/query","1ae462b57f2e059941b546e0289be2fdf58a11a0","cherniavskii","2020-02-27 20:37:34","true","Fix query state being set to ""success"" when query function throw (#167)

* add failing test

* fix failing test",2,5,0
"TanStack/query","0f237bcbbdee01b094154cc2b6e239020ce3a574","mcrowder65","2023-07-14 10:10:18","true","docs: Update useMutation.md to remove mention of devtools with mutationKey (#5709)

As part of https://tanstack.com/query/v4/docs/react/devtools it mentions that mutations don't appear in the devtools, so we should remove this mention that the mutationKey is used in devtools",41,46,1
"TanStack/query","33338ad19bd5a7ecc88ca1e2b0445ed87f8291a3","Newbie012","2023-03-15 07:42:05","true","fix(eslint-plugin): ignore internal properties (#5119)",26,42,1
"TanStack/query","6d159a73b4cc3d7f32ffa008d5a0ebf97faf1593","Mini-ghost","2023-09-10 18:28:00","true","fix(vue-query): reduce unnecessary type flexibility on QueryClient options (#5986)",16,48,1
"TanStack/query","e9770b77aa15239cdcb5f1828f4be782355b2392","boschni","2020-09-04 15:55:51","true","fix: use hook config on refocus or reconnect (#964)",8,12,0
"TanStack/query","d1c9aaa0cdda6fe8297767949523e0f82bd7dec6","mswartley","2021-03-23 20:11:32","true","docs: fix typo (#1988)",31,18,0
"TanStack/query","b52b2779b32b5cf0c21733e7d86b5882b8a611a6","NewFuture","2021-11-06 16:52:40","true","feat(persistQueryClient): try to clean the old persistented data when storage full (#2851)",21,26,0
"TanStack/query","9fd54f971f1738f4205355e9811c55a7d8509040","tannerlinsley","2019-12-06 05:50:00","false","v0.3.21",2,3,0
"TanStack/query","cfecf5261e60684d60c3bd788a7a517cc938a065","dominictwlee","2021-03-17 21:49:20","true","fix(queryObserver): re-run selector if it throws error (#1875)",35,18,0
"TanStack/query","df3460bd4f002d7771f85a78c8af84fd44b42228","Belco90","2020-11-05 16:18:48","true","fix: Update React peer dependency (#1260)

Update React peer dependency to include v17. Without this change everything is working fine but ""incorrect peer dependency"" warning appears in the console.

I think no CI change is necessary to run tests over React v16 and v17?",8,14,0
"TanStack/query","ba09e16b362c7ebbb64116390a869b59c8bb2b2b","Liam-Tait","2022-03-28 05:35:23","true","chore(eslint): Add react/jsx-key lint rule (#3447)

Rule is set to error.
option checkFragmentShorthand option set to true,  meaning the rule is used for shorthand fragment syntax too.
option will default to true next major eslint-plugin-react version

See rule docs [here](https://github.com/yannickcr/eslint-plugin-react/blob/master/docs/rules/jsx-key.md)",16,30,0
"TanStack/query","292cc5454698a34404afc51613fa9b3f3911b235","Newbie012","2022-11-04 14:29:14","true","fix(eslint-plugin-query): change lint urls to the website (#4449)",18,38,1
"TanStack/query","8b7cc4313fdd6e128f9bcd6c3f159c16fbbefc15","manudeli","2023-11-11 20:42:41","true","chore(query-core): rename sleep param as ms (#6358)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",0,50,1
"TanStack/query","5322ede0a470338fffc730088f988ae2c05fe1fe","TkDodo","2023-07-14 14:44:27","true","fix(core): onlineManager and focusManager should invoke listeners when a change occurred (#5713)

This is only relevant when a custom online / focus boolean has been set; in those cases, we previously only informed listeners if the value was truthy, but not if it changed back to false or undefined again

With this fix, the managers inform the listeners whenever something has changed, regardless of which direction the change was",31,46,1
"TanStack/query","7cd2d192e6da3df0b08e334ea1cf04cd70478827","ekwoka","2023-04-24 11:39:32","true","chore(build): Includes declaration maps (#5231)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",19,43,1
"TanStack/query","99119a581486fea37c8b30af299861ed4dc47c68","tannerlinsley","2022-10-23 19:09:32","false","release: v4.13.2",18,37,1
"TanStack/query","eaf322b643d36c9e39b4df06437cd2e1618acd52","TkDodo","2022-07-26 05:58:36","true","docs: resurrect contributing.md",23,34,1
"TanStack/query","5fd537e4c2ad39aa5f36d96736d8426228d16c42","arnaudbzn","2021-12-03 08:04:11","true","docs(react-native): add  code examples for common use cases (#3042)

* docs: add React Native code examples for common use cases

- Online status management
- Refetch on App focus
- Refresh on Screen focus

* docs(react-native): use useOnlineManager example",17,27,0
"TanStack/query","873647e1246bd03ce168a73300bceb8047e964ef","TkDodo","2021-09-18 17:31:33","true","fix(types): fix generics for refetchPage function (#2638)",25,24,0
"TanStack/query","63c32ec4ec0681dd5887bbe184b2315eacd096a2","eddydg","2020-06-29 15:39:59","true","Update README.md (#660)",2,9,0
"TanStack/query","5f5112ec211c08c3e78841c64ce2d784a2374d0b","tannerlinsley","2020-03-26 22:39:23","false","v1.1.5",1,6,0
"TanStack/query","be803b4614db8331f683161e79d383edf0cd4097","tannerlinsley","2020-02-26 18:41:53","false","v1.0.0",0,5,0
"TanStack/query","3a5a338fd8261597e89845cbeba3cb7cf36e31b8","tannerlinsley","2020-02-17 06:27:24","false","Merge branch 'master' of https://github.com/tannerlinsley/react-query",4,5,0
"TanStack/query","58f245f14ed14f7868aecb75aac3e74603930145","eddydg","2020-07-10 12:54:27","true","docs: Update optimistic-updates.md (#731)

Minor fixes in code examples",7,10,0
"TanStack/query","ce6756bf61cc2656c5a5edf070c4f344a6aed9b2","derrxb","2021-02-02 18:29:17","true","docs: Fix broken link to query-keys docs (#1719)",29,17,0
"TanStack/query","ba963e1e4cd94942e7cd0183589dd0daf4e3cbb7","hakastein","2023-08-01 21:22:18","true","fix(vue-query): useErrorBoundary support in useQuery and useMutation (#5731)

* fix(vue-query): Fix useErrorBoundary support in useQuery and useMutation

* test(vue-query): test without using mount

---------
Co-authored-by: Anton Kolesov <headcrabogon@gmail.com>
Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>",18,47,1
"TanStack/query","98be9ec4a6b7cb3b7b455321628b7d8cf3a83f1e","bouncehead13","2023-04-15 18:36:21","true","fix(useQueries): check error boundary before retry to prevent infinite refetch (#5271)

* fix(useQueries): check error boundary before retry to prevent infinite refetch

useQuery correctly handles checks on  error boundary before retry. This work will change useQueries to match behavior.

Fixes #4644

* style: fix formatting

---------

Co-authored-by: Hancock, Matthew <Matthew_Hancock@comcast.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",22,43,1
"TanStack/query","a496b3d74f76c568ff0b8e7d7f9899b880529268","tannerlinsley","2023-08-29 15:38:37","false","release: v5.0.0-beta.21",13,47,1
"TanStack/query","fab76e6d0c0a70b32fcc8b459df32426d30aa3c2","TkDodo","2022-04-21 16:10:11","true","feat(query): functions for refetchOn options (#3518)

* feat(query): functions for refetchOn options

make refetchOn mount/reconnect/windowFocus also accept a function that gets evaluated on the fly with the current data and query

* feat(query): functions for refetchOn options

docs

* feat(query): functions for refetchOn options

tests

* feat(query): functions for refetchOn options

only pass query to the functions as they don't lean towards error or data

* feat(query): functions for refetchOn options

fix docs

* feat(query): functions for refetchOn options

fix docs",21,31,0
"TanStack/query","27e72de2677031779cad62ae346a5a6a0945603e","TkDodo","2021-11-22 13:45:21","true","fix(useQuery): cleanup queries even if they have been fetching (#2950)

* fix(useQuery): cleanup queries even if they have been fetching

* fix(useQuery): cleanup queries even if they have been fetching

do not re-schedule garbage collection if a query is fetching and we never had any observers subscribed; this is necessary to make suspense work, because with suspense, we always throw before we subscribe, so the garbage collection would prematurely remove the query, resulting in an infinite loop

* fix(useQuery): cleanup queries even if they have been fetching

only schedule garbage collection when the last observer unsubscribes rather than in the constructor

this works around the suspense issue because we only add observers after we've loaded as we throw before that.",21,26,0
"TanStack/query","e770a78140a632000a1d8104e48d622517322eb4","tannerlinsley","2020-06-24 20:35:57","false","docs: remove experiemental custom query key serializers",0,9,0
"TanStack/query","67c738a7544acf83b779631541d64aa2fdca9c92","tannerlinsley","2020-03-26 06:26:22","false","Add axios",0,6,0
"TanStack/query","2f35d40b6813e9978576a9fdb8646b790ecc9dd1","tannerlinsley","2019-09-11 16:25:53","false","Documentation and breaking changes

Renamed `invalidate`-y things to `refetchQueries`
Renamed `update`-y things to `updateQueries`

Both `updateQueries` and `refetchQueries` only accept arrays now.

Added `waitForRefetchQueries` to mutation options",0,0,0
"TanStack/query","065ffe0672f7ac61ff19fb324ab715a45a25d5d1","boschni","2020-09-13 14:25:30","true","docs: update api docs (#1005)",11,12,0
"TanStack/query","73ccba8612041077ce6b588eacba8c27f3a79ebd","boschni","2020-08-20 16:46:20","true","feat: publish new types (#897)",16,11,0
"TanStack/query","3268d022401ffebcffccd8c3cdf2972434d806bc","cherniavskii","2020-02-26 19:30:26","true","fix typos (#153)",1,5,0
"TanStack/query","075a3c8b68a5441dfda882c71c50d2ffd9c3424e","tannerlinsley","2023-08-01 10:51:32","false","release: v4.32.1",18,47,1
"TanStack/query","22fbdaf6962f14e71ea1b956949bf998de02f865","TkDodo","2022-12-14 07:16:52","false","chore: stabilize tests",16,39,1
"TanStack/query","c3424bb4810a16f96bf90dc99707a027521124ec","AugustoConti","2020-06-23 15:46:59","true","docs: fix typo (#603)",0,9,0
"TanStack/query","84d1a19b02762172184c47a5a7eb1beef7d25719","tannerlinsley","2020-06-22 21:37:51","false","v2

(#585)

- Better query invalidation & refetching, less over-fetching
- Simplified dependent query syntax and new `idle` query state
- Multi-instance polling and interval support
- New query status booleans
- Bidirectional Infinite Queries
- Improved mutation lifecycle
- Better test cleanup utils
- Prep for future SSR enhancements

- The booleans `isSuccess`, `isError` `isLoading` and a new one called `isIdle` have been added to the queryInfo object returned by `useQuery` (and friends) and `useMutation`. These are derived safely from the `queryInfo.status` and are guaranteed to not overlap. In most situations, they are easier to use, less typo-prone than status strings and also more terse for determining what to render based on the status of a query.

  ```js
  const queryInfo = useQuery(queryKey, fn)

  return queryInfo.isLoading ? (
    'Loading...'
  ) : queryInfo.isError ? (
    queryInfo.error.message
  ) : (
    <div>{queryInfo.data}</div>
  )
  ```

- `queryCaches` is now exported, which allows you to clean up all query caches that were created. We do this in our own tests when multiple caches are used for testing and to be thorough.

  ```js
  // test.js
  import { queryCaches } from 'react-query'

  afterEach(() => {
    queryCaches.forEach((queryCache) => queryCache.clear())
  })
  ```

- `fetchMore` now supports an optional `previous` option, which will determine if the data you are fetching is should be prepended instead of appended to your infinite list. eg, `fetchMore(nextPageVars, { previous: true })`

  ```js
  const { fetchMore } = useInfiniteQuery(queryKey, fn)

  return (
    <button
      onClick={() => fetchMore(previousPageVariables, { previous: true })}
    />
  )
  ```

- `refetchInterval` can now be changed on the fly. Check out the auto-refetching example to see it in action!
- `invalidateQueries` (previously `refetchQueries`) now has an option called `refetchActive` that when set to `false` will **not** refetch matching queries that are active on the page.
- `makeQueryCache` now accepts an optional configuration object. The `defaultConfig` object is used to override the default query configuration config to use inside of this cache. The `frozen` option if set to `true` will simulate React Query being run on the server, where no queries are cached for privacy and safety concerns. This is the default when using React Query on the server and is optional. You can also set it to `true` on the server and have it work as it would on the client. More information on this coming soon!

BREAKING CHANGE:

- Do you use falsy query keys for dependent queries?
  - The new way to do dependent queries to instead use the `enabled` config flag. You should move your conditions in your key to the `enabled` option
    - Before
    ```js
    useQuery(ready && queryKey, queryFn)
    ```
    - After
    ```js
    useQuery(queryKey, queryFn, { enabled: ready })
    ```
- Do you use functions as queryKeys for dependent queries?
  - If you use functions as query keys that can potentially throw, you should migrate their logic to the `enabled` config option and use optional chaining to cast them to a boolean
    - Before
    ```js
    useQuery(() => ['user', user.id], queryFn)
    ```
    - After
    ```js
    useQuery(['user', user?.id], queryFn, { enabled: user?.id })
    ```
- Do you expect dependent queries to start in the `success` state?

  - Dependent queries now start in a new `idle` state. You should account for this new state where possible. Most rendering logic should still work if you are checking first for the `loading` and `error` states first, then falling back to the ""success"" state, but still... it's a good idea to do this

    - Before

    ```js
    const { status, data } = useQuery(key, fn)

    return status === 'loading'
      ? 'Loading...'
      : status === 'error'
      ? error.message
      : data
      ? 'The Data'
      : 'Not Ready'
    ```

    - After

    ```js
    const { status } = useQuery(key, fn

    return status === 'idle' ? 'Not Ready' : status === 'loading'
      ? 'Loading...'
      : status === 'error'
      ? error.message
      : 'The Data'
    ```

- Do you use `queryCache.refetchQueries`?
  - `refetchQueries` has been renamed to `invalidateQueries`. You will need make this rename change for your app to continue working propertly. The name change comes due to some differences in what the function does.
    - Before, any queries that matched the `queryKey` used in `refetchQueries(queryKey)` and were also stale, would be refetched... \*\*even queries that were inactive and not rendered on the screen. This resulted in quite a few queries being refetched regardless of their immediate necessity.
    - Now, with `invalidateQueries`, only queries that are actively rendered will be refetched, while any other matching queries will forcefully be marked as stale.
    - This probably won't affect much performance, but should help reduce overfetching out of the box.
- Did you expect `queryCache.refetchQueries` to only refetch stale queries?
  - The new `invalidateQueries` method will **always refetch matching queries that are active**. All other matched queries that are not active will be immediately marked as stale.
- Do you call `queryCache.refetchQueries` with the `force` option?
  - Before, the `force` option was a way to force queries that were not stale to refetch.
  - Now, he new `invalidateQueries` method will **always refetch matching queries that are active** and all other matched queries that are not active will be immediately marked as stale.
- Do you use a global configuration object to configure React Query?
  - Before, the global configuration object was flat:
    ```js
    const globalConfig = {
      suspense,
      useErrorBoundary,
      throwOnError,
      refetchAllOnWindowFocus,
      queryKeySerializerFn,
      onMutate,
      onSuccess,
      onError,
      onSettled,
      retry,
      retryDelay,
      staleTime,
      cacheTime,
      refetchInterval,
      queryFnParamsFilter,
      refetchOnMount,
      isDataEqual,
    }
    ```
  - Now, the global configuration object has 3 parts. The `shared` section, which is a base set of options that are inherited into the next 2 sections, `queries` and `mutations`, each corresponding to the functionality they are used for in React Query:
    ```js
    const globalConfig = {
      shared: {
        suspense,
        queryKeySerializerFn,
      },
      queries: {
        ...shared,
        enabled,
        retry,
        retryDelay,
        staleTime,
        cacheTime,
        refetchOnWindowFocus,
        refetchInterval,
        queryFnParamsFilter,
        refetchOnMount,
        isDataEqual,
        onError,
        onSuccess,
        onSettled,
        throwOnError,
        useErrorBoundary,
      },
      mutations: {
        ...shared,
        throwOnError,
        onMutate,
        onError,
        onSuccess,
        onSettled,
        useErrorBoundary,
      },
    }
    ```
- Do you use ""optional query variables"" eg. `useQuery(queryKey, optionalVariables, queryFn)` or `useQuery({ variables })`?
  - Optional variables have been removed. They were not used by many and also were unnecessary seeing how you can inline them into your query function
  - Before
    ```js
    useQuery('todos', [optional, variables], queryFn)
    ```
  - After
    ```js
    useQuery('todos', (key) => queryFn(key, optional, variables))
    ```
- Do you use the `globalConfig.refetchAllOnWindowFocus` config option?
  - `refetchAllOnWindowFocus` has been renamed to `refetchOnWindowFocus` to match the option in the configuration object for `useQuery` and friends.
- Do you use the `refetch` function returned by `useQuery` and friends?
  - Previously this `refetch` function would not trigger an actual refetch if the query is not stale.
  - Now, calling this `refetch` will always trigger a refetch, regardless if the query is stale or not.
- Do you expect `prefetchQuery` to skip the first render of `useQuery` instances that render after it?
  - Previously, the first `useQuery` call after a `prefetchQuery` would be skipped all the time.
  - Now, the `staleTime` of a `prefetchQuery` instance is honored. So, if you call `prefetchQuery(key, fn, { staletime: 5000 })`, and then `useQuery(key, fn)` is rendered within those initial 5000 milliseconds, the query will **not refetch in the background, since it is not stale yet**. Likewise, if the stale time has been reached by the time `useQuery(key, fn)` renders, **it will refetch in the background**, since it is stale when `useQuery` mounts/renders.
- Do you use `prefetchQueries`' `throwOnError` or `force` options?
  - `prefetchQuery`'s `throwOnError` and `force` options are now located in a fourth argument, after the query config.
  - Before
    ```js
    prefetchQuery(key, fn, { ...queryConfig, throwOnError: true, force: true })
    ```
  - After
    ```js
    prefetchQuery(key, fn, queryConfig, { throwOnError: true, force: true })
    ```
- Do you call `mutate()` with additional side-effect callbacks? eg. `mutate(vars, { onError, onSuccess, onSettled })`

  - There are no code changes here, however previously, `mutate()`-level side effects would run _before_ side-effects defined in `useMutation`. That order has been reversed to make more sense.
  - Now, the side-effect callbacks in `useMutation` will be fired before their `mutate`-level counterparts.
  - Before

    ```js
    const mutate = useMutation(fn, {
      onSuccess: () => console.log('I will run second'),
    })

    mutate(vars, { onSuccess: () => console.log('I will run first') })
    ```

  - After

    ```js
    const mutate = useMutation(fn, {
      onSuccess: () => console.log('I will run first'),
    })

    mutate(vars, { onSuccess: () => console.log('I will run second') })
    ```

- Do you use `setQueryData` to update multiple queries with a single query key? eg. `setQueryData('todos', newData)` and expect queryKeys `['todos', 1]` and `['todos', 2]` to both get updated?
  - `setQueryData` no longer allows updating multiple queries at once (via prefix matching). If you need to update multiple queries with the same data, you can use the `queryCache.getQueries()` function to match all of the queries you want, then loop over them and use their `query.setData` function to set all of them to the same value.
Co-authored-by: Fredrik Höglund <fredrik.hoglund@gmail.com>
Co-authored-by: Pepijn Senders <PepijnSenders@users.noreply.github.com>
Co-authored-by: Jack <jack.m.ellis@hotmail.co.uk>
Co-authored-by: Jack Ellis <jack.ellis@godaddy.com>
Co-authored-by: Jake Ginnivan <jake@ginnivan.net>",0,9,0
"TanStack/query","400288f45d311ee12f76e78e5cc50b31e062858e","tannerlinsley","2020-04-03 20:22:52","false","Update CHANGELOG.md",0,7,0
"TanStack/query","caa6522a72b3338b610b5e8c207b3b0d332c0784","Ephem","2020-08-24 20:51:56","true","fix(query): refactor timeouts (#917)

* Remove scheduling timeouts from constructor
* Require explicit timeout activation via new activateTimeouts
* Refactor all internal code to use activateTimeout
* Rename schedule(GC/StaleTimeout) to rescheduleX
* Make reschedule(GC/StaleTimeout) and heal private
* Make reschedule-methods do the right thing based on query state
* Stale timeout is now based on updatedAt",11,11,0
"TanStack/query","7f3af50ce4b5de867ee8afbaedaa05d648152ca5","tannerlinsley","2020-03-30 16:53:57","false","v1.2.0",1,7,0
"TanStack/query","e86ad607702a8630277b62833912f8963fb96570","tannerlinsley","2019-09-12 18:27:38","false","v0.0.16",0,0,0
"TanStack/query","8cc3d43f60b3362c00f0b23c30d064f393fc6e45","tannerlinsley","2019-09-12 16:14:22","false","Fix promise result and update docs for `manual` option",0,0,0
"TanStack/query","538816015e8691b29ffc00ddef915c608a4c5f90","tannerlinsley","2022-03-26 14:29:08","false","Update comparison.md",17,30,0
"TanStack/query","dc2af816321b0ec4a49b73e43c4ce433a000b07c","DylanJu","2023-04-24 15:14:39","true","refactor: enhance error undefined message (#5253)

* refactor: enhance error undefined message

* Update packages/query-core/src/query.ts

* chore: fix test:lib undefined message

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>
Co-authored-by: DylanJu <dylan@daangnpay.com>",18,43,1
"TanStack/query","dce2815b951b59963949b70e34df39868de549d9","TkDodo","2022-09-28 16:07:37","true","refactor: switch from npm workspaces to pnpm

RELEASE_ALL

* chore(pnpm): update lockfile

* chore(pnpm): add pnpm

* chore(pnpm): get rid of private:true

which was only needed for yarn workspaces; also, remove the csb workaround, because it didn't work with private:true

* chore(pnpm): switch to workspace:* dependencies

because pnpm will replace them automatically during publish

* chore(pnpm): use ^ dependencies for examples

we will always get the latest version as there is no lockfile for them

* chore(pnpm): update publish script to use pnpm

this also means we don't need to update package.json at all because we use workspace dependencies now

* chore(pnpm): devtools need react-error-boundary

* chore(pnpm): replace lerna with pnpm

* chore(pnpm): use pnpm to install in CI

* chore(pnpm): fix install in ci

* chore(pnpm): fix yml syntax

* chore(pnpm): add jest-dom to react-query

* chore(pnpm): add jest-dom to types

* chore(pnpm): explicitly add jest-dom typings

* chore(pnpm): revert jest-com changes

* chore(pnpm): ok prettier, whatever

* chore(pnpm): go to pnpm v7

* chore(pnpm): use stricter node version

* chore(pnpm): oh boy

* chore(pnpm): remove engines

because codesandbox-ci has a different version

* chore(pnpm): restore updating version in publish script

* chore(pnpm): filter pnpm scripts and installs down to ./packages

so that we exclude examples

* chore(pnpm): remove filtering from installs

as it doesn't install top-level dependencies; also, --frozen-lockfile is the default for CI environments",15,37,1
"TanStack/query","db36007b4feb294068843419f1d5867af496076d","TkDodo","2023-09-16 13:33:00","false","chore: fix merge conflicts",17,48,1
"TanStack/query","94cdeb5a3724bbc30d4e4b7988138e3c89f388d7","thebuilder","2020-06-08 14:41:53","true","fix(types): ReactQueryConfigProvider error type (#560)

This fixes #542 by allowing the `<ReactQueryConfigProvider>` to get the generic error type.",20,9,0
"TanStack/query","9ed5a766e4082a450ff434c22889e3285f232beb","ardeora","2023-10-14 20:07:41","true","fix(query-devtools): Make devtools internal fields private (#6154)",8,49,1
"TanStack/query","a05cb5073f7f4e17fbd56cabe9a9e4a0ce6ac1ce","tannerlinsley","2020-06-24 22:07:14","false","fix: call onSuccess for all query instances on

Fixes #629",1,9,0
"TanStack/query","22b286000c5431655af9d9fea9ef9d5d8ad3ed47","tannerlinsley","2023-09-18 07:00:47","false","release: v4.35.5",13,48,1
"TanStack/query","1afa0b4a3c6557be123f94717e0d3c3c21c404b7","tannerlinsley","2023-01-28 06:55:31","false","release: v4.24.0",33,41,1
"TanStack/query","13e99245e0f75dbc4d31fc532228008c98c4c097","tannerlinsley","2020-07-08 05:01:37","false","Readme + media",7,10,0
"TanStack/query","799eb9039eb06660dd88551f99e7ebbce6bb74e2","anc95","2020-08-20 16:55:30","true","docs: mutationFn should return a Promise type (#854)",16,11,0
"TanStack/query","74e0ee2ca221feee397ab268452f55ae7fe1a4ea","danielr18","2022-11-08 14:46:07","true","docs: typo in ""immutable"" (#4486)

Fix typo in updates-from-mutation-responses.md",19,38,1
"TanStack/query","3b8b00ea8434906a1b1bec474d7ca4e595ecf334","TkDodo","2022-09-26 16:17:05","false","fix(query-persist-client-core): fix build by adding missing reference paths",16,37,1
"TanStack/query","fbaed6673fef5c7781769b44adaf353359146ce0","TkDodo","2021-03-30 17:32:49","true","fix(types): align prefetchQuery generics with fetchQuery types (#2016)",30,19,0
"TanStack/query","1baa539cccb1a05cfb2969e0b42e88181ff3f8db","kachkaev","2020-07-14 16:12:12","true","types: Fix typings for cache.clear({ notify: false }) (#750)",10,10,0
"TanStack/query","8a3752f73cddcbca86b72b758c69b49ef95285b8","coryhouse","2020-06-29 15:38:25","true","docs: Fix bad link and typo (#658)",2,9,0
"TanStack/query","b7089d101070089a3cc1ba88cf86607e1276fd3d","paul-sachs","2023-03-15 11:36:09","true","feat(react-query-devtools): enable setting loading/error via devtools (#4352)

* feat(devtools): enable setting loading/error via devtools

* Some cleanup

* refactor: use flex-gap to align buttons

* refactor: fix linter and dropdown reset

* refactor: operate directly on activeQuery

* Change buttons to toggle states

* Sneak some queryState into meta

* Added test for error and loading

* Fix lint

* Fix prettier formatting

* chore: releases should run on alpha/beta as well

* chore: extract package validation to an extra script (#5039)

* chore: extract package validation to an extra script

and run it during CI

* chore: add missing `build:types` script to solid-query

* docs: update link for v2 docs (#5044)

* docs: update link for v2 docs

* Update README.md

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* release: v4.24.12

* fix(react-query-devtools): do not stretch query status label (#5063)

Do not stretch query status label (fresh, fetching, paused, stale, inactive) shown on Query Details view.

* release: v4.24.13

* fix(react-query-devtools): add 'use client' directive to disable SSR (#5041)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* release: v4.24.14

* feat(core): re-export matchQuery from utils (#5070)

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* release: v4.25.0

* feat(query-core): Add global onSettled callbacks for QueryCache and MutationCache (#5075)

* feat(query-core): Add global onSettled callbacks for QueryCache and MutationCache

* test: tests for query onSettled callback

* test: tests for mutation onSettled callback

* docs: onSettled callbacks

* release: v4.26.0

* fix(core): make sure mutations get updated options (#5085)

this fixes an issue around stale closures where callbacks are not updated, thus are called with wrong values in the closure

* release: v4.26.1

* fix(eslint-plugin): improve object property checks (#5079)

* fix(eslint-plugin): improve object property checks

* prettier

* release: v4.26.2

* docs: add adapter dropdown to issue template (#5108)

* docs(queries): rename `success` (#5110)

* chore: `test:lib` task-caching w/ Nx (#5116)

* adding quick caching test

* reverting workflow change

* updating pr yml to test nx speed

* fixing yml on property

* fixing yml on property

* fixing target name

* upping to running4 in parallel

* upping to running 5 in parallel

* upping to running 6 in parallel

* upping to running 7 in parallel

* upping to running 8 in parallel

* upping to running 9 in parallel

* upping to running 10 in parallel

* opting for --parallel=5

* cleaning up nx.json

* revert touching of ci.yml file

* reverting on property of pr.yml file

* updating root pacakge.json test:lib command

* fixing frozen lockfile error in ci

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* chore: fix missing dependencies (#5127)

* chore: include scripts directory in linting

and fix issues

* chore: add missing dependencies chalk and semver

* chore: turning off Nx daemon in CI (#5128)

* chore: downgrade chalk to v4 because v5 is ESM only (#5130)

see: https://stackoverflow.com/questions/70309135/chalk-error-err-require-esm-require-of-es-module

* fix(eslint-plugin): ignore internal properties (#5119)

* chore: resolve merge conflicts

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>
Co-authored-by: Abhijeet Singh <contact.abhijeetsingh@gmail.com>
Co-authored-by: Tanner Linsley <tannerlinsley@users.noreply.github.com>
Co-authored-by: janinegygax <32389974+janinegygax@users.noreply.github.com>
Co-authored-by: Youssouf Oumar <63708012+yousoumar@users.noreply.github.com>
Co-authored-by: remolueoend <remolueoend@users.noreply.github.com>
Co-authored-by: Eliya Cohen <co.eliya2@gmail.com>
Co-authored-by: Damian Osipiuk <osipiukd+git@gmail.com>
Co-authored-by: Leon Fong <ooohmydawn@hotmail.com>
Co-authored-by: Zachary DeRose <zack@nrwl.io>
Co-authored-by: Zachary DeRose <zack.derose@gmail.com>",22,42,1
"TanStack/query","6818cf5746ddd61cc9f658a4732f02800a148504","tannerlinsley","2020-03-21 00:15:47","false","v1.0.32",4,6,0
"TanStack/query","5ae0375afa8c8ad38ede7b0df6993f9db5fe361f","tannerlinsley","2020-04-15 02:13:27","false","v1.2.4",1,7,0
"TanStack/query","66c65473055c2aee870139b1302975356592b7f9","TkDodo","2023-10-23 15:05:18","false","docs: add openapi-zod-client and ts-rest to community projects",6,49,1
"TanStack/query","1a750aff41f18ded49eed22e4889f4b9c1193e3b","tannerlinsley","2023-01-08 19:01:35","false","release: v4.22.0",36,40,1
"TanStack/query","6d4eeb873522d972ca8279b6d2b49edb9f2dbcb5","tannerlinsley","2020-09-04 03:42:27","false","docs: update sponsors",8,12,0
"TanStack/query","eeab6bc77120a24f1117c45fa2d04a7cf43fe9b5","tannerlinsley","2020-09-06 18:14:50","false","docs: update sponsors",8,12,0
"TanStack/query","bd498e1486e7e6fbf8498f4a4ab8385b3cf69223","tannerlinsley","2023-09-22 11:43:49","false","release: v5.0.0-beta.35",9,48,1
"TanStack/query","79e1c17cbb9068aab2dbc852551b77bc242b96d2","boschni","2021-02-06 15:07:58","false","test: add infinite query with initial data test",23,17,0
"TanStack/query","2bab18520daf71abec180340ae3981176a1b3ae1","ZackDeRose","2023-04-01 06:55:31","true","chore: adding the nx-cloud task-runner (#5143)

* adding the nx-cloud task-runner

* empty commit to trigger ci with warm cache

* retrying after adding workspace to TanStack organization

* another empty commit...

* another empty commit...

* this is why I should never use the in-browser conflict resolver...

* another empty commit...

* another empty commit...

* Update packages/query-core/src/tests/hydration.test.tsx

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>

* rm console.log left in query core

* empty commit to trigger re-build

* updating nx cloud dependency

* empty commit to attempt to recreate unexpected cache miss

* gather hash data to check

* empty commit

* invalidating cache again

* removing old key and adding read-only key to source control

* empty commit

* updating build task

* adding rollup to cacheable operations

* fixing the project json file with better globs

* removing test:format and test:build as cacheable operations

* updating package scripts for better terminal logging

* removing comment left in

* bumping to latest cloud runner version

* updating pnpm-lock.yaml file

* adding skip-nx-cache to publish script

---------

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",25,43,1
"TanStack/query","27bf01c831871dfd003ca0011bad0f821337963b","vankhoawin","2020-02-17 04:40:04","true","add `reset` method to `useMutation` (#122)

* add react-testing-library dependency

* add reset method, tests

* commit new size snapshot",15,5,0
"TanStack/query","7c87c3d7b7fb0edf3a9ac69e2f29c0a3be07a669","bviebahn","2023-11-11 20:47:07","true","fix(types): pass TError, TQueryData and TQueryKey to PlaceholderDataFunction (#6349)

* fix: pass TError, TQueryData and TQueryKey to PlaceholderDataFunction

* test: add types test for placeholderData function

* style: format

---------

Co-authored-by: Benedikt Viebahn <benedikt.viebahn@live-eo.com>
Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>
Co-authored-by: Benedikt Viebahn <bviebahn@pm.me>",0,50,1
"TanStack/query","857ecd91b6d86306bacd3785e3e2f71d7287ad06","lhc0506","2023-08-24 14:22:18","true","docs(migrating-to-react-query-4): update description of refetchactive--refetchinactive (#5904)",24,47,1
"TanStack/query","4855cf72c484f2bbd42b8f1d367f9547898709dc","tannerlinsley","2020-05-11 16:59:41","false","chore(examples): use cancelQueries in optimistic update example",11,8,0
"TanStack/query","906f1cf4c89a264c99c46f53b1271b9435a03e51","tannerlinsley","2020-12-22 15:46:07","false","fix(devtools): add invalidate and reset buttons",10,15,0
"TanStack/query","218cd73aa350e83844bf0f373f9ae944c9fc83a8","tannerlinsley","2020-04-16 22:11:41","false","Prefetch next page!",2,7,0
"TanStack/query","a6d455b7d1e34e5c048fd6d34941eae89484b9e3","burakozarslan","2022-08-12 13:21:32","true","docs: Update InfiniteQueryObserver.md (#3849)

* Update InfiniteQueryObserver.md

fix reference link

* Update docs/reference/InfiniteQueryObserver.md

Co-authored-by: Dominik Dorfmeister <office@dorfmeister.cc>",31,35,1
"TanStack/query","3ebf0d4d77c5c2b88edfa0934ceba71a87c48f69","TkDodo","2022-06-24 13:09:11","false","docs: make examples point to main instead of master",28,33,0
"TanStack/query","9ec3fce113b1ae7468332a0877d90d679a6ac16e","TkDodo","2023-09-16 15:43:07","false","chore: fix prettier",16,48,1
"TanStack/query","43616bace5bc4fd50bad861c7553fe8a21a578b9","TkDodo","2022-07-20 18:48:00","true","docs: fix all relative links starting with ./ (#3886)",24,34,1
"TanStack/query","314f23e8e580cf0fffe5ba84e8534be8dc9b7d4a","manudeli","2023-08-15 07:17:01","true","chore(pnpm-lock.yaml): update (#5848)",22,47,1
"TanStack/query","9fa8336c73bd7e94aa6a8e26d313f92bb76a36cc","tannerlinsley","2020-04-15 15:49:48","false","Update README.md",1,7,0
"TanStack/query","c5af17ef7c5aaf4016360ece9fa2e62d9250cff5","tannerlinsley","2023-10-12 07:15:16","false","release: v5.0.0-rc.12",7,49,1
"TanStack/query","f0c3a2bc816665e5c1ef6fc8359e20c1391ff62c","tannerlinsley","2020-09-17 13:58:20","false","docs: update example deps",13,12,0
"TanStack/query","6d1e76b3b9826fe8a4a577a8cf3d4710a97d10b3","tannerlinsley","2020-07-08 06:33:24","false","docs: fix basic example",7,10,0
"TanStack/query","e1abd07bc08e13ab119d8631881f9a43da449960","tannerlinsley","2023-06-25 14:34:18","false","release: v4.29.17",24,45,1
"TanStack/query","dbd6e952245d17de13b8bf8c2c5fa21402efa0ab","tannerlinsley","2020-07-11 03:24:05","true","Update comparison.md",7,10,0
"TanStack/query","9bd077a6e3f2facb1515e861c166fa7b573ff5db","cherniavskii","2020-05-05 14:55:55","true","fix isDataEqual dates comparison (#436)

* add tests

* format

* fix failing test",9,8,0
"TanStack/query","1eb4d00d6516d4531516d6db29460f27c7c24d2a","boschni","2020-09-11 19:30:28","true","fix: cancel current fetch when fetching more (#1000)",10,12,0
"TanStack/query","7c50aeab78fe423fc411dc44b2203572a0011562","tannerlinsley","2020-07-09 06:14:00","false","docs: improve comparison table",7,10,0
"TanStack/query","8092dc2dd8f3464709b104db65dac5c9023f7874","zorzysty","2022-08-11 15:38:14","true","docs(examples): Migrate offline example to vite (#3959)",34,35,1
"TanStack/query","e4da8dd10b64392e15fbfcffedb0488c146ea92c","clementbowe14","2021-12-09 19:37:16","true","docs: Update does-this-replace-client-state.md (#3070)

changed ""any boilerplate code that use""  to boilerplate code that was used"" to improve the clarity of the sentence.",22,27,0
"TanStack/query","1948a6ff97e7b229a5b80b34f540c6ecfe1d0b27","TkDodo","2023-09-22 11:37:15","true","feat(query-core): default networkMode to 'offlineFirst' when persisters are present (#6046)

* feat(query-core): default networkMode to 'offlineFirst' when persisters are present

* chore: stabilize test

* test: remove flaky test",9,48,1
"TanStack/query","ca5687728060c6faebc0bb6c3af3824e836ad004","donysukardi","2021-02-22 15:16:49","true","docs: fix typo in notifyOnChangeProps (#1850)",15,17,0
"TanStack/query","8f19f73585439393b0eb6cfb4e794479664a0b80","lachlancollins","2023-07-16 01:56:09","true","Update nx-cloud (#5721)",26,46,1
"TanStack/query","b124ca8a42fd5fac3a328ec44353c41e3a65dacc","boschni","2021-02-14 13:27:05","true","fix: string and array query keys should be similar (#1799)",14,17,0
"TanStack/query","20c9838d398a4e4ba0268621048481270f56bd13","nielsdB97","2022-04-15 11:27:35","true","docs: Fix typo on homepage (#3515)",18,31,0
"TanStack/query","fc3c40407d806d4e56781be993fe454ec5e58c35","Newbie012","2023-08-19 11:28:57","true","feat(query-core): expose Query class (#5874)",24,47,1
"TanStack/query","2cdd2458752f57cdcf986589db6f6812ff0e03fb","esharmony","2021-02-28 21:26:31","true","fix:(examples/nextjs) removed unused prob that caused confusion (#1861)",21,18,0
"TanStack/query","2b7f6bc8eba69bacad82744d2b7f5a8166fe8787","tannerlinsley","2019-11-13 21:35:45","false","v0.3.11",1,2,0
"TanStack/query","47a1bd1c82689e197b4906fcc94c41b8fa60f3cc","tannerlinsley","2022-10-07 16:06:43","false","release: v4.10.2",16,37,1
"TanStack/query","91e85a651c952302556a49ae68adc2cc79db56e3","tannerlinsley","2022-09-27 17:58:40","false","release: v4.7.1",15,37,1
"TanStack/query","471ff9727433a0b281884d243f91fc5dd3f64914","tannerlinsley","2020-02-27 17:55:28","false","Update CHANGELOG.md",1,5,0
"TanStack/query","f21d932142e8618995936c12c5f5696aa8993473","KATT","2021-10-29 19:17:37","true","fix(types): expose `CancelOptions` & `SetDataOptions`  (#2855)",21,26,0
"TanStack/query","8bff7d65abe1283808964534aa0ea16fc173bfe0","VanTanev","2020-12-29 11:02:49","true","docs: fix initialDataUpdatedAt timestamp information (#1539)",15,16,0
"TanStack/query","da9620f1bafebf807bc11726a9964d88d3da79be","Newbie012","2023-02-14 20:36:44","true","fix(eslint-plugin-query): autofix for useMutation with options (#4986)

* fix autofix on usemutation with options

* format",30,41,1
