"name_with_owner","sha","author","date","verified","message","num_issues","commit_month","has_ci"
"mpusz/mp-units","8e9428f896bfaf64eebbf5e09494a9cbcc7f1d17","chiphogg","2022-08-07 22:55:23","false","Merge branch 'master' into chiphogg/docs",35,46,1
"mpusz/mp-units","1fec222ad3e43c8b2c70a0ce0fc83d9ff2293c6c","JohelEGP","2021-02-21 19:49:57","false","test: fix si_cgs_test.cpp",27,29,1
"mpusz/mp-units","40fb1e1e8bbc9d3a3f6fa268451b8a000d0a6b89","JohelEGP","2020-09-01 02:49:43","false","fix: iwyu",15,23,0
"mpusz/mp-units","b35b0bb61adfcbc4d91a910496c06259bd344a7f","mpusz","2021-06-25 06:44:53","false","docs: Doxygen updated to 1.9.1",26,33,1
"mpusz/mp-units","98a19f6b4c2aed4fbd7d07416f075ac88737ea90","mpusz","2022-10-19 09:21:15","false","feat: dimensions design is now complete",31,49,1
"mpusz/mp-units","f5aff49fcc425c3276a6d56f8529b7714fd6df28","mpusz","2019-10-18 19:57:57","false","fmt/format.h removed",14,13,0
"mpusz/mp-units","9527b39005e89a96f9b59ea4ed285d6a31e0895b","mpusz","2020-09-09 17:20:35","false","refactor: :boom: `q_*` UDL renamed to `_q_*`

We had some fun exploring the STD UDLs for potential collisions,
we have learnt our lesson and know how to proceed.
Now is high time to start behaving and obeying C++ rules.",14,23,0
"mpusz/mp-units","0b8e5c0dfe5b792fa94acd0cce69c965c961ad5a","mpusz","2022-05-09 12:03:14","false","fix(example): `foot_pound_second` example now correctly uses `international::knot` which is typical for Marine industry

Resolves #357",36,43,1
"mpusz/mp-units","7bba350be0447c0ce5cf32728d92e4a7da2c2457","mpusz","2020-04-05 08:20:40","false","Improved usage of the library as a dependency",13,18,0
"mpusz/mp-units","54dd8844b7d9a63c2ee16476112176c84fb7fa9e","mpusz","2023-04-03 17:28:51","false","test: `unit_symbol_test` updated for a new unicode symbol of `standard_gravity_unit`",45,54,1
"mpusz/mp-units","0c0b48f725de3e7fb69db1744c36dbe358dd777f","mpusz","2023-11-07 05:21:43","false","docs: Design overview graph updated",2,61,1
"mpusz/mp-units","22c26e62c6133760d5f73167e0f62679394f11c5","mpusz","2022-09-11 17:47:31","false","refactor: prefixes refactored to benefit from `mag_power()`",31,47,1
"mpusz/mp-units","bded48987d075b94a58b50c126843a9e6cc853e1","mpusz","2022-04-21 19:25:54","false","refactor(example): `glide_computer` now use dimensionless quantities with `ranged_representation` as `rep`",36,43,1
"mpusz/mp-units","c30285ff96d2f3807c9485d772d03451c70a6ceb","mpusz","2023-09-13 07:14:45","false","fix: forgot to add `compare_test.cpp` to CMake",4,59,1
"mpusz/mp-units","117c380ba88c6a7aaa2a21fa6ff16be969596b18","mpusz","2022-03-19 17:16:51","true","Merge pull request #341 from hofbi/init-pre-commit

Init pre commit",32,42,1
"mpusz/mp-units","631ad69d8b019d138478a0ee3024a78a7b539a42","mpusz","2023-08-26 17:45:53","false","docs: ""Supported compilers"" section updated",9,59,1
"mpusz/mp-units","4b95824abad926cf85582da9347102164f8dfb99","uilianries","2019-11-20 19:33:50","false","Update Conan recipe

Signed-off-by: Uilian Ries <uilianries@gmail.com>",17,14,0
"mpusz/mp-units","06b3a6425221c810042a020d8de231119ded7d13","chiphogg","2022-09-12 00:34:45","false","Replace compile-time exceptions with terminations

This appears to cause problems under `-fno-exceptions` in some rare instances.

Should fix #390.",31,47,1
"mpusz/mp-units","f36205f08d032c523180ebb0e5303842279f10ba","chiphogg","2022-05-12 18:17:14","false","Capture NTTP in variable

This should make it OK for MSVC to take the address, working around a
compiler bug.",33,43,1
"mpusz/mp-units","052d818385b0a4ad67ab32b15dded67f2c08e864","JohelEGP","2021-02-17 05:25:47","false","fix: downcasting facility for non-default-constructible types",26,29,1
"mpusz/mp-units","54457b2457ea76fd5263b498e4f4a342885adfef","mpusz","2021-11-04 11:24:34","false","style: typo fixed",30,37,1
"mpusz/mp-units","bba880bdc7eb5f03aaa5842cbcf86be0b71d596d","mpusz","2023-08-28 19:04:33","false","docs: README updated",10,59,1
"mpusz/mp-units","48743bf80817c6cb047d81f80217ee31507db2a0","mpusz","2019-09-18 17:12:48","false","Setting CXX flags in conanfile fixed",4,12,0
"mpusz/mp-units","3bf4eb671caca547db1dea950cfeff95026c24e8","mpusz","2020-12-16 17:44:15","false","ci: Conan CI GitHub actions renamed",20,27,0
"mpusz/mp-units","ac371213d2e87af1ff80caa795fc81cf76b32dc6","mpusz","2020-05-08 20:40:35","false","Changelog updated",15,19,0
"mpusz/mp-units","061b7652d36b58abafc623644aab821268424763","mpusz","2022-04-15 14:56:48","false","style: conanfile.py reformatted",35,42,1
"mpusz/mp-units","9fbf17be06ca9562a8f75bb9a88b48ce6f8e682d","mpusz","2020-03-25 21:06:07","false","Scalar concept extended

Scalar concept extended with types that are not constructible from and integral type",13,18,0
"mpusz/mp-units","91a93b37db6afd05e7175aafb4f72066cbdc0017","mpusz","2023-08-30 15:38:36","false","refactor(example): headers includes simplified in the avg_speed example",8,59,1
"mpusz/mp-units","fa38e4f4972bc2013d8c021e47d5fc9f21cec2c6","mpusz","2023-08-30 09:33:30","false","docs: admonition types usage fine tuned",9,59,1
"mpusz/mp-units","8793aeec23f69bbc7594f13d848ec873c5c24455","mpusz","2022-10-19 11:16:10","false","feat: convertibility check added for the target unit in the `system_reference`",31,49,1
"mpusz/mp-units","3b2ca4084adaf97fe9ba72bacb04a94548b44905","mpusz","2023-08-27 19:16:29","false","refactor: `quantity_point::quantity_from_origin()` refactored to `quantity_point::quantity_ref_from(PO)`

Resolves #479 and relates to #477",9,59,1
"mpusz/mp-units","26eb30df036cee8d9cdb19e22e360657a84b6063","mpusz","2019-01-14 18:28:51","false","merge_dimension added",2,3,0
"mpusz/mp-units","7708cb458ca324b66da04d20adc2fabccff19b0b","mpusz","2021-09-09 07:14:16","false","docs: A new way of setting CMake generator for Conan provided in usage",24,35,1
"mpusz/mp-units","838bb65b1b784a76c3445a3919b14e9375d0ba0a","mkrupcale","2019-06-14 01:07:18","false","Fix conan-mpusz remote URL

 * doc/INSTALL.md: Fix conan-mpusz remote URL",3,8,0
"mpusz/mp-units","b028f76664f323b1715e43cb7abd5dae37bc2519","Twon","2023-01-06 16:33:24","false","Remove matrix values",35,51,1
"mpusz/mp-units","291314fbb743b2025475732480efb8251d534a95","alex-700","2022-04-17 20:49:19","false","docs: fix typo in units.rst",35,43,1
"mpusz/mp-units","2c229710e730df83b9ad3dda91707d3a80333d0e","chiphogg","2021-12-30 00:24:24","false","Create and use BasePower concept",30,39,1
"mpusz/mp-units","509b6c9653be35c8256a7a965a80aac51fe9752a","oschonrock","2019-12-27 18:49:43","false","implementing ratio<num,den,exp> which replaces ratio<num,den>
https://github.com/mpusz/units/issues/14

This ""works"", as in it passes all static and runtime tests.
However quite a few of the tests have been ""modified"" to make them pass. Whether
this is legitimate is debatable and should be the source of some thought /
discussion.

1. many of the static tests and some of the runtime tests have had the input
ratios of the tests modified in the following way. eg ratio<3,1000> =>
ratio<3,1,-3>. ie they have been ""canonicalised"".

There are obviously an infinite number of ratios which represent the same
rational number. The way `ratio` is implemented it always moves as ""many powers
of 10"" from the `num` and `den` into the `exp` and that makes the `canonical`
ratio.

Because these are all ""types"" and the lib uses is_same all over the place, only
exact matches will be `is_same`. ie ratio<300,4,0> !is_same ratio<3,4,2> (the
latter is the canonical ratio). This is perhaps fine for tests in the devlopment
phase, but there may be a need for ""more forgiving"" comparison / concept of
value equality. One such comparison which compares den,num,exp after
canonicalisation is the constexpr function `same` as defined at top of
`ratio_test.cpp`. We may need to expose this and perhaps add even more soft
comparisions.

2. In the runtime tests it is ""subjective"" how some resukts should be
printed. There is the question of ""how exactly to format certain ratios"". eg
omit denominators of ""1"" and exponents of ""0"". However before even addressing
these in detail a decision needs to be made about the general form of
""non-floating-point-converted"" ratios which do not map exactly to a ""Symbol
prefix"".

Arguably these are ""relatively ugly"" whatever we do, so we could just
go for an easily canonicalised form. An example is:

-        CHECK(stream.str() == ""10 [1/60]W"");
+        CHECK(stream.str() == ""10 [1/6 x 10⁻¹]W"");

Which of thses is ""better""? Is there a ""third"", better form?  It's not obvious.

My opnion is: Both of 1&2 are fine for now, unless we think they go down the
wrong avenue, and can be ""perfected later""? ie we can expose a softer version of
ratio based equality, and decide on canonical way of printing ratios (as far as
that is actually a very useful output form, compared with decimal, scientific or
engineering notation).",17,15,0
"mpusz/mp-units","50b9050d6b97e506de6731fa87dbb1fbe9d23c62","hofbi","2021-11-15 11:23:28","true","Feat: Overloads for floor and ceil accepting quantities (#314)

* feat: overloads for floor and ceil accepting quantities

* require same type for dim and rep

* be specific for msvc",31,38,1
"mpusz/mp-units","71eda2fc66724e3e5a28e3bd71b4bbb37da22aa6","JohelEGP","2020-09-06 02:22:18","false","test: codify comment in the correct place",16,23,0
"mpusz/mp-units","0e974a7f32bdda938735f1c2d70bc8f5a75edbd5","mpusz","2023-09-13 10:21:17","false","fix: hacks for clang-16 compilation added",3,59,1
"mpusz/mp-units","a97b6c71c1962a260e8e51e511a176539f4aeb30","mpusz","2020-11-05 11:58:15","false","docs: documentation generation badge added",18,25,0
"mpusz/mp-units","6539b492a34b3359ef14962c3b3c2192c2db77ef","mpusz","2021-01-04 12:05:26","false","fix: `std::chrono::duration` support fixed

Resolves #198",21,27,1
"mpusz/mp-units","6c28d743db12e7bfc960b68bc269af9b24eaabe3","mpusz","2023-10-25 19:27:01","false","docs: ""you"" replaced to ""we"" in many places",2,61,1
"mpusz/mp-units","79a52ead1cdd48a318f36b64b663c5777c9889d2","mpusz","2020-12-21 20:34:38","false","ci: Old Travis.CI files removed",19,27,1
"mpusz/mp-units","a739c104275c4aa9e1524ff55778ec7b5b946c91","mpusz","2021-05-08 17:54:19","false","ci: ccache max cache size limited to 50MB",33,31,1
"mpusz/mp-units","aa33964782ae2a7e60649afea4ffdec24605eee6","mpusz","2022-10-19 17:56:35","false","refactor: expression templates engine refactored",31,49,1
"mpusz/mp-units","d09cef27c9900e2cb488db249e0d27d4ecd35113","mpusz","2021-04-17 18:00:53","false","docs: binary prefixes fixed in the docs",32,31,1
"mpusz/mp-units","590539ad6c86eb21752833bbb8f035a32584541a","mpusz","2023-05-22 14:50:04","false","feat: The last corner cases in `quantity_spec` conversions addressed",47,56,1
"mpusz/mp-units","f4fe0a1504672172d93a9ad593a5768a64cfde8c","mpusz","2020-03-10 12:33:33","false","SPhinx conf.py cleanup",15,17,0
"mpusz/mp-units","b5f1eb33acca6ea525c52d2f8e15900ab2bd8a4b","mpusz","2021-03-13 18:39:59","false","feat: `energy_density` and `radioactivity` definitions added

Although, they are disabled because of downcasting issues.",32,29,1
"mpusz/mp-units","c8f67ab5bfc5b26ded8824aca0dd2873eefeb834","mpusz","2020-11-05 15:51:42","false","build: GENERATE_DOCS renamed to BUILD_DOCS",18,25,0
"mpusz/mp-units","c3cfd3acaa369cd34ed0943b4124963dea6e0324","mpusz","2020-02-11 22:57:04","false","SI fundamental constants added",16,16,0
"mpusz/mp-units","e472fdc348075e4127cd63bdd2f7702928590248","mpusz","2019-12-11 09:44:55","false","Most of the operators converted to hidden friends",18,14,0
"mpusz/mp-units","e8503f31d288dec4d3800b7f54df58293ae24417","mpusz","2023-06-29 14:10:37","false","docs: ""Obtaining metadata"" chapter added",11,57,1
"mpusz/mp-units","b3ea3cdc914c4b31faa222213ef26c748cc14506","mpusz","2019-12-17 09:51:59","false","hello_units compilation on gcc-9 fixed",18,15,0
"mpusz/mp-units","f446b4f7a7594858fbae0abde53c6fbfa912e5d8","mpusz","2023-02-13 17:56:20","false","feat: `standard_gravity` now uses `acceleration_of_free_fall`",43,52,1
"mpusz/mp-units","f6250d69e1bbf1ab360e92e8d0a7ecf55bd1c471","mpusz","2021-11-16 08:19:10","false","ci: VS2019 configuration restored",30,38,1
"mpusz/mp-units","52ab3f1535b6020088a4746038b77f68541992ce","mpusz","2023-06-15 11:37:22","false","refactor: SI `units` do not depend on the entire ISQ anymore + header dependency compilation fixes",15,56,1
"mpusz/mp-units","e1f7266b517c04644b666af6aef3e65216b28c56","mpusz","2022-03-19 19:07:55","false","refactor: `<algorithm.h>` header added

Should be replaced with `<algorithm>` when C++20 modules will be used. Right now this header is too expensive to compile.",32,42,1
"mpusz/mp-units","8d86d9401f85df5f5d593ee76af1e6675b7ef3a5","mpusz","2019-04-06 21:25:35","false","units building and packaging redesigned + Travis CI support",2,6,0
"mpusz/mp-units","a4171e2fb61da2ca5a6316e51cf31e7e8ede0153","mpusz","2023-05-25 10:15:52","false","docs: some comments and TODOs added",47,56,1
"mpusz/mp-units","ff4755d5e58705aab16c56096e320bf3fa4e5846","mpusz","2023-09-13 18:11:59","false","feat: `quantity_ref_from` disallowed for rvalues",3,59,1
"mpusz/mp-units","e10f5baab63d9fa031ddcb5734e38f9bb5e38752","mpusz","2019-12-12 14:38:21","false","Quantity cast for dimension now uses dimension's coherent unit",19,14,0
"mpusz/mp-units","f06e8898ae87a4937d02e841eb995cd6cf618004","mpusz","2022-12-20 09:43:55","false","refactor: `capacitor_time_curve` refactored for V2",30,51,1
"mpusz/mp-units","b17c3540806e885bed6553ea9f85e6d42cda555f","mpusz","2023-10-17 07:12:51","false","refactor(tests): `unit_symbol_test.cpp` updated with new `unit_symbol()` signature",1,61,1
"mpusz/mp-units","6483d39762145ff35d7c14d633c2e8dafe76d457","mpusz","2022-03-22 13:46:16","false","fix: `fill_t` assignment operator fixed",32,42,1
"mpusz/mp-units","b40c7b2fcd8ebb45204ce610ba7b96fb83b80e2d","mpusz","2023-03-31 15:54:33","false","ci: trying another way to pass a `package_ref`",45,54,1
"mpusz/mp-units","c32a4cea8adaa315b8c37b65fcbed61f542cfe28","mpusz","2022-11-08 02:21:30","false","test: fmt tests refactored for V2",32,49,1
"mpusz/mp-units","3f1eb80aaf090a95e84b67648521b8402c0db53f","mpusz","2020-09-13 09:38:06","false","docs: 0.6.0 release",14,23,0
"mpusz/mp-units","6bf55ff6cbe7e513a030e5eea2f6d92a69ba3ce4","mpusz","2023-07-13 16:32:36","false","docs: headers simplified and the Compiler Explorer links updated for an example app",12,57,1
"mpusz/mp-units","30e3722d62e532c749d054d249fec6da54d82968","mpusz","2022-01-25 12:27:10","true","Merge pull request #326 from fdischner/fix_derived_unit

Fix derived_ratio calculation",30,40,1
"mpusz/mp-units","6d033d72feb837e8771bf3a121ec59eb03425fef","mpusz","2023-02-13 18:05:58","false","fix(unit test): quantity construction switched to a new syntax in unit tests",43,52,1
"mpusz/mp-units","55e5cac33fe48a786e420e29a5474a953362a6b1","mpusz","2020-12-28 14:46:00","false","refactor: More stream-specific implementation moved to quantity_io.h",17,27,1
"mpusz/mp-units","12e48ea3c0845b949efbcb3bfe46a792a3059b58","mpusz","2022-12-27 11:49:21","false","fix: _quantity.h_ header added to _base_quantities.h_ to make all the definition complete",34,51,1
"mpusz/mp-units","05ed7dae88e6c0b3201e86585738664742c68879","mpusz","2023-06-08 15:40:01","false","feat: `RepSafeConstructibleFrom` now accounts for magnitude representation type",48,56,1
"mpusz/mp-units","6e42cabc64a6c6c8d0120a506fddc5d16b3f61ee","mpusz","2021-05-11 13:31:46","false","feat: a support to define ISQ derived dimensions in terms of different number or order of components",28,31,1
"mpusz/mp-units","f46b3dad74ba39a0dd2b1d6e9b5df837a448d566","mpusz","2023-09-04 09:09:40","false","feat: added an option to disable space before unit symbol in the text output

Resolves #387",8,59,1
"mpusz/mp-units","5b9203d9d69c78048fbccfa8c98e5c5776bce67d","mikeford1","2020-05-30 15:19:17","false","Added the ""named_deduced_unit"" type and more units to the fps system

The named_deduced_unit type can be used as a named type for child for child
deduced units",16,20,0
"mpusz/mp-units","5fb468697b8bd7413451f8fcefa3139ea9d98ccf","chiphogg","2022-05-12 16:12:01","false","Merge branch 'master' into chiphogg/switch-to-mag",33,43,1
"mpusz/mp-units","0f80c1010468b4a112293b62c684b9f70baf6159","chiphogg","2022-03-19 16:58:43","false","Try ""gentler"" test case

I verified that we hit GCC 10's constexpr limit with
`wheel_factorizer<1>`, but pass with `wheel_factorizer<4>`.  I hope this
number is enough smaller than the square root of the previous value that
the other compilers will be able to handle it.  If not: we'll go lower.",32,42,1
"mpusz/mp-units","3bf3bebb6af8cdfe2a5b746a79b4fecf37a772c7","JohelEGP","2021-12-13 14:16:08","true","build: export config to local build (#322)",30,38,1
"mpusz/mp-units","81b3ff9bdcf754d2d661bd332175579ffc090bb9","yasamoka","2020-04-17 03:50:33","false","added prefixed SI units for current",13,19,0
"mpusz/mp-units","c886590b03ac6e98266f59e108a5aa466bc36d11","kwikius","2020-03-21 13:59:36","false","fix link to godbolt compiler in readme",13,18,0
"mpusz/mp-units","10df364407d13aed698ec4ae20e5d59004674bb4","Twon","2023-01-06 16:35:44","false","Missing env",35,51,1
"mpusz/mp-units","4b280d9e1fce2adce817fefe0fbe7960a2c867a8","hofbi","2022-05-12 12:07:49","false","fix flake8 warnings",34,43,1
"mpusz/mp-units","75482733d1a07d4618aae7444af870e530e3164f","mpusz","2023-09-04 08:53:47","false","docs: SI Brochure quote added with the rationale for the multiplication syntax usage to create quantities",8,59,1
"mpusz/mp-units","954482f4522fab8574a46185664ebe7af5e855cb","mpusz","2020-12-23 22:27:41","false","ci: GCC version fixed in a CI task name",19,27,1
"mpusz/mp-units","e3f0d5f3dc8b6cc9f038fddf95f0227ab217a713","mpusz","2021-11-16 07:34:56","false","build: `fmt::fmt` dependency added only when needed",30,38,1
"mpusz/mp-units","98da140fae4d266cb5e329f8d7d4d7dcfd8cf89f","mpusz","2022-04-24 20:55:30","false","ci: `pre-commit` cmake-format checks fixed",36,43,1
"mpusz/mp-units","a6a2549fe7c075289913f8fe0b75a445ee27da67","mpusz","2021-12-13 11:29:01","false","build: MSVC versioning updated according to the latest Conan support",30,38,1
"mpusz/mp-units","b4f47c3fef4da67bdf9179b55b9014855d93babd","mpusz","2023-02-03 10:08:13","false","feat: `value_cast` support added

Resolves #239 and #120",41,52,1
"mpusz/mp-units","379a3c91f8352491f20246183adcc792d35173e9","mpusz","2023-09-26 17:31:01","false","ci: gcc-13 installation added to ci-test-package-cmake",2,60,1
"mpusz/mp-units","c8c7baef05e8d0fffc67435cba3c17c385882bf1","mpusz","2023-06-15 13:43:31","false","refactor: unused header file removed",15,56,1
"mpusz/mp-units","68bdc82955d731de7fa012d09e03dc495012542b","mpusz","2020-09-13 15:45:12","false","docs: quantity_of concepts family documentation added",14,23,0
"mpusz/mp-units","e9f35ecd10d2ce97eeac6562d558015bac79064b","mpusz","2020-11-04 22:22:29","false","docs: Conan data caching added",19,25,0
"mpusz/mp-units","45888ac44e9fdeda18321fc4a61b77699cb05e18","mpusz","2020-03-17 16:13:18","false","Physical constants support redesigned",15,18,0
"mpusz/mp-units","7e935a41084db5073271af003c41acba40b1c3fc","mpusz","2020-05-08 20:39:24","false","Physical units put in the `physical` namespace (I am sorry)",15,19,0
"mpusz/mp-units","2281be0f766da165af338a89b3179e74e2ba9961","mpusz","2023-10-03 03:12:25","false","feat: `QuantityLike` and `QuantityPointLike` conversions improved",1,60,1
"mpusz/mp-units","546a8a79a99c179547864b3f51b216f002bfc5a5","mpusz","2023-04-21 14:03:07","false","test: `fmt` test fixed for `radian`",46,55,1
"mpusz/mp-units","1b2d27a64ce109645099bb1f8c74f6acb6a07ff2","mpusz","2019-12-17 08:12:11","false","measurement example updated with a starship operator",20,15,0
"mpusz/mp-units","44e8d3910268c101d4a543f983df24b7ee19a5e5","mpusz","2020-09-10 09:34:58","false","feat: dimensionless quantity implicit construction enabled for DOWNCAST_MODE=OFF",15,23,0
"mpusz/mp-units","b610a6369fc889dd251ea33ff4d490f891b0aa7d","mpusz","2020-06-21 08:38:13","false","CHANGELOG updated",17,21,0
"mpusz/mp-units","ee70c48b13bea93a5e0014f31eecb34c81da1ab8","mpusz","2021-10-15 14:14:00","false","build: linear_algebra examples re-enabled on gcc11",28,37,1
"mpusz/mp-units","a134d74ca28a7500e20fe8cbfe074fce69e3e448","mpusz","2022-08-02 06:56:16","false","ci: Downcase 'build_type' now uses a GitHub action",34,46,1
"mpusz/mp-units","361ff5c3d1194de59afecf0bcc996d1e25a45196","mpusz","2023-06-05 13:06:06","false","test: international system tests added",48,56,1
"mpusz/mp-units","125aa8bcb72156a2c371466d328333800ab3f66c","mpusz","2020-05-06 16:21:58","false","CONAN_RUN_TESTS usage updated",15,19,0
"mpusz/mp-units","b6da63b2f0e0d6c7f9b0270bb0266962644bdc77","burnpanck","2022-12-30 16:16:26","false","refactor macros to start with UNITS_ and fix an MSVC issue with FMT_THROW",34,51,1
"mpusz/mp-units","772df1a5ec41a19b0b41326d2a5ef7fbd2e605f3","mpusz","2019-09-19 04:25:52","false","List of Open Questions updated",4,12,0
"mpusz/mp-units","03e3691d47e8c376109e3cbffacf23a9599e70a3","mpusz","2019-11-09 21:01:37","false","More text output tests added",12,13,0
"mpusz/mp-units","db231659bea95df449b022efaf4a663409867f34","mpusz","2021-02-23 19:35:10","false","docs: CHANGELOG updated",28,29,1
"mpusz/mp-units","14258c97fd530ec0b67dcc545c43813dc728bdce","mpusz","2023-06-01 06:47:55","false","refactor: `magnitude::pow()` now takes two `int`s rather than a `ratio` (consistent with the rest of library)",48,56,1
"mpusz/mp-units","8a1ed3adcbab6d052c86204395d8ccc8511d1632","chiphogg","2021-12-30 01:56:10","false","Add make_ratio() helper and prime factorization",30,39,1
"mpusz/mp-units","ed94ba347fb2aee36649fc6dcb88b3757101414c","JohelEGP","2021-03-18 20:11:37","false","refactor(test): rename unit_constants.cpp to references.cpp

Addresses https://github.com/mpusz/units/pull/261#discussion_r597137577.",35,30,1
"mpusz/mp-units","f228ddfd7736f5b90c428fee8104c847af7fc746","JohelEGP","2021-02-21 21:24:52","false","test: fix misc Clang warnings",27,29,1
"mpusz/mp-units","75119eef3f2428347b7322ea5ec7e1c0b75f9bdd","JohelEGP","2020-05-31 01:07:11","false","feat: quantity_point",17,20,0
"mpusz/mp-units","b7884b90a87b05606d834cd72538b06fc8bd169c","mpusz","2022-12-20 11:46:07","false","Revert ""feat: ISQ quantity names conflicts resolved with inline namespaces""

This reverts commit 043410d2f8dbec33a9fb25bdecee6200e08421ca.",30,51,1
"mpusz/mp-units","bbdf290009c312a86e6e42993d709607d25c399b","mpusz","2023-09-26 17:15:57","false","fix: clang-17 compilation fixed",2,60,1
"mpusz/mp-units","e09de55291221f13cab0ec2623cb670d17eff6a5","mpusz","2022-03-18 13:39:22","false","docs: CONTRIBUTING updated",32,42,1
"mpusz/mp-units","af2f988b5836e1e818115378d75cdf4ef98c2ccc","mpusz","2020-10-09 21:32:35","false","test: CTAD tests for chrono fixed",17,24,0
"mpusz/mp-units","7f9f741aa07647c09b6a5ebdc84444093bcbdf22","mpusz","2020-03-11 11:33:35","false","Units graph and `scaled_unit` description added",15,17,0
"mpusz/mp-units","99bec8ecbb9dbebc9cfa6c7c1893cd70c9630485","mpusz","2023-08-30 16:56:20","false","docs: math expressions usage improved in the ""Glossary"" chapter",8,59,1
"mpusz/mp-units","bbd337ba35dfe2afba940c5f797b0dc7900d4ac1","mpusz","2020-05-14 11:55:34","false","base_dimension documentation updated",16,19,0
"mpusz/mp-units","cac562d5d458a9f5a14197ef66f7f71cfeaf7c22","mpusz","2023-05-12 09:55:06","false","ci: linear_algebra dependecy disabled for MSVC 14.2 build",48,55,1
"mpusz/mp-units","e07eb14805bbbbda4814ed397c23489f68b9dc5b","mpusz","2023-10-17 07:41:40","false","ci: elements in the CI reordered to get a better ordering of jobs in the web interface",1,61,1
"mpusz/mp-units","7e591115fa4cc0d8573f5df94ca5faebd5c93626","chiphogg","2022-07-07 19:22:26","false","Remove ratio's `numerator()` and `denominator()`

These have now become trivial.",35,45,1
"mpusz/mp-units","c8a44adee2e934a98e9762c425a0650c5377cb15","chiphogg","2022-03-10 23:41:47","false","Add missing header for `std::integral`",31,41,1
"mpusz/mp-units","a99bac83a14a4274054336f7fda630d4c36a1990","mpusz","2023-06-16 07:16:05","false","docs: README updated",14,56,1
"mpusz/mp-units","929c197fff9fe99dde6323e701b14b83bb5c4862","JohelEGP","2021-02-25 21:43:17","false","fix: downcasting facility for GCC 11",30,29,1
"mpusz/mp-units","448e1333e10b48c85cb59ee93971ca474818e1c3","mpusz","2021-09-30 21:10:14","false","chore: gitpod now properly uses CMake multi-config pipeline",26,36,1
"mpusz/mp-units","99283dce1caa3ed5cf048d37a06ee383ae79db05","mpusz","2023-03-30 11:34:06","false","fix: a workaround for compilation error on MSVC and gcc-10 added",44,54,1
"mpusz/mp-units","3f45da58829a7bae6ec2b7ee52a9500a91ad07de","mpusz","2021-03-19 11:56:32","false","fix: Switched to `check_cxx_symbol_exists()` for libcxx detection",32,30,1
"mpusz/mp-units","a6cca5163cb34789e30d07d8eb1798b7bf4215ac","mpusz","2023-06-22 18:49:46","false","docs: a new entry added to FAQ",14,57,1
"mpusz/mp-units","03b58ee073feab1b39f2a50eed7f0e5cf487ec79","mpusz","2023-06-01 06:45:41","false","refactor: `square` and `cubic` are now functions (not variable templates)",48,56,1
"mpusz/mp-units","c8c865ec39db69fca7513b807a9fba3aefd1c537","mpusz","2023-06-12 09:01:34","false","refactor(unit test): it seems that explicit `operator*` for LA usage is no longer needed",48,56,1
"mpusz/mp-units","46d72d5cd70a8e9c63fe4d12e508ae36f1545960","mpusz","2023-01-06 11:43:54","true","Merge pull request #415 from Twon/buildinfo_in_cachekey

Move the cachekey to using build information for identiciation.",35,51,1
"mpusz/mp-units","814a620fbb14a84f56b658fa291579f512b8d96f","mpusz","2020-03-17 13:16:24","false","""Grammar"" chapter updated",15,18,0
"mpusz/mp-units","abafd1d38e946d552fc518f3bdaf8e238420962a","mpusz","2023-10-17 12:16:22","false","refactor: `numerical_value_` data member now has much less friendly name",1,61,1
"mpusz/mp-units","7730e76fb73078f1f1fd8a77eefa450e0b10bbe4","mpusz","2022-03-14 18:27:25","false","build: `test_package/conanfile.py` cleanup",31,41,1
"mpusz/mp-units","7d37e656cbc42bdaf51cc3ce15667df65d81028e","mpusz","2023-06-14 18:15:27","false","chore: merge issues fixed",48,56,1
"mpusz/mp-units","36c88f6e022ba4db8f6c079698cd8bcf9fda1d15","mpusz","2020-12-17 22:06:57","false","Merge branch 'master' of github.com:mpusz/units",19,27,1
"mpusz/mp-units","5b135b1251adcbaa6049f35780d4811e574444a1","mpusz","2019-04-04 08:40:59","false","Default representation changed to double",2,6,0
"mpusz/mp-units","0c69747f158a74d06a157e35169cd3d35d7162e3","mpusz","2023-08-03 09:32:49","false","refactor: `quantity_point` compile-time optimizations",14,58,1
"mpusz/mp-units","e660278fa893132cc0782e3fccc369896c00dabd","mpusz","2022-04-19 16:49:48","false","feat: `nautical_mile_per_hour` and `knot` added to `si::international` system

Relates to #357",36,43,1
"mpusz/mp-units","01912350d2fe79e238cf6da57ccaf84a955de3e8","mpusz","2021-07-28 11:09:54","false","ci: ""Ubuntu GCC 10.1.0"" removed and ""10.2.0"" renamed to ""10.3.0""

""Ubuntu GCC 10.1.0"" is no longer provided on `ubuntu-18.04` image",25,34,1
"mpusz/mp-units","116401aff52635cc0b73520311427f4400ec18ac","mpusz","2019-11-12 21:17:06","false","""Open questions"" moved to GitHub issues",16,13,0
"mpusz/mp-units","c21bde85a37f284842944306287a61f15ced8661","mpusz","2023-02-09 05:11:57","false","refactor: `same_canonical_reference_unit` renamed to `have_same_canonical_reference_unit`",43,52,1
"mpusz/mp-units","414f1d1007ebed513013affb0cc51ac60af75c5d","mpusz","2023-09-13 09:26:55","false","style: additional whitespace removed from `conversion_factor` example",3,59,1
"mpusz/mp-units","2f365b51354c49646322411ca8e43cad6c4369f3","mpusz","2022-09-15 21:13:46","false","refactor: `mag` and `mag_power` changed to variable templates",30,47,1
"mpusz/mp-units","4209ac20fc7feb897515f5ed055f61403012a4cc","mpusz","2023-05-14 11:32:12","false","refactor(example): `quantity_point` support added to currency example",48,55,1
"mpusz/mp-units","3887b642fb7ca135349c394e9019b1b965abedf0","mpusz","2023-06-09 07:31:14","false","test: SI tests updated for V2",48,56,1
"mpusz/mp-units","4a93c30593a72370b56305d65405a3f3f75a9965","mpusz","2023-05-27 15:24:55","false","test: check for `inHg` and `deg_F` added to USC tests",48,56,1
"mpusz/mp-units","fa34d0120b2a7d33b298bc3ad6b1e9d30e60af04","mpusz","2022-12-04 14:05:29","false","feat: unit symbols added for CGS",33,50,1
"mpusz/mp-units","3decaecb528bb681b10e9932639c457362521003","mpusz","2019-12-17 19:15:38","false","TODO comments clean-up",17,15,0
"mpusz/mp-units","a84c9addfaa96ddfa348a53740513610222cd95d","mpusz","2021-01-06 14:22:13","false","build: gsl-lite component name fixed in conanfile.py",21,27,1
"mpusz/mp-units","c9708fb642b4bea8a8c3e8c370c33c7e561b4447","mpusz","2021-09-25 10:49:35","false","refactor: `safe_multiply()` was incorrectly marked as `static`",26,36,1
"mpusz/mp-units","79025fff3d65e4969b193d4c48e5943ca6f360a2","mpusz","2021-02-15 19:08:17","false","fix: Implicit conversion in a `downcast_result` fixed",26,29,1
"mpusz/mp-units","18a61efa25f08d162826197938c01ae6203d02bf","mpusz","2020-05-17 09:02:46","false","mp-units 0.5.0 release",16,20,0
"mpusz/mp-units","6102183881301819d766b17be040dea5e33118d0","mpusz","2023-04-21 14:23:46","false","chore: Conan 1.X temporary files removed from `.gitignore`",46,55,1
"mpusz/mp-units","b0428d623a5746e07e45bd5178f9a65cbf8a1897","rbrugo","2020-09-09 23:31:42","false","Added tests for localization",14,23,0
"mpusz/mp-units","1c70b187091b5a2d149ea663a1d1700e035281f9","chiphogg","2022-01-12 15:47:59","false","Unify ""H1 base smaller"" test cases

This might actually fix the error!",30,39,1
"mpusz/mp-units","85d6e35d79d668a2e65d695429d39a092a3ae4d2","chiphogg","2022-04-09 17:42:59","false","Loosen requirements on Rep for Magnitude

This is necessary to be able to use Magnitudes in Units with a Rep that
is not `std::is_arithmetic`.",35,42,1
"mpusz/mp-units","f6b00d4aa6022e2f3e0320a6970e67a15b1789b1","mpusz","2023-07-10 09:14:09","false","docs: TOC for ""Simple and Typed Quantities"" refactored based on feedback from @chiphogg",12,57,1
"mpusz/mp-units","3a76c1de91897f8bf0b5b29226a25876fd30236a","mpusz","2020-01-14 11:55:07","false","gcc10 compilation error fixed in conversion example",16,15,0
"mpusz/mp-units","3f28b55ab1da151e4388d2b986145c824f32ff97","mpusz","2021-11-13 20:53:53","false","refactor: more constraints added to `floor` and `ceil`",31,37,1
"mpusz/mp-units","f853f1f4efc54c6e22056ba8c7abc3f8ad85da50","mpusz","2023-06-08 17:08:41","false","fix: magnitudes division fixed when units are divided",48,56,1
"mpusz/mp-units","f9d6b53b72389c981bde0696cf48a8e3f52acb6d","mpusz","2019-09-30 07:05:50","false","[[nodiscard]] added to quantity_cast and DESIGN.md update with the new quantity_cast functionality",11,12,0
"mpusz/mp-units","44e1e90d51a64c8bdeebd9e723e6ff92be375d51","mpusz","2022-11-08 02:35:40","false","style: SI prefixes definition reformatted",32,49,1
"mpusz/mp-units","572b5bdf22770e0738e55b93788828297a444ee6","mpusz","2020-03-17 17:06:45","false","Documentation for quantity constants added",15,18,0
"mpusz/mp-units","acfbd07bb7990ab96e5efdd6a028048bb296b3ea","mpusz","2023-08-01 10:40:28","false","docs: `unit_symbol_solidus` comments changed to use unicode",13,58,1
"mpusz/mp-units","1492c5c19ee4af2ea7d21096102fee655726ac8c","mpusz","2023-02-13 17:23:35","false","refactor: `expr_fractions` now takes a class-based type trait",43,52,1
"mpusz/mp-units","95410ab49bbfe31d9720f37508fccbd713fdabef","mpusz","2020-09-06 12:54:37","false","bincrafters conan remote removed from build.py",16,23,0
"mpusz/mp-units","73b5c7c4ac49f97f8bc77001b34b163b0266fcf9","mpusz","2019-09-30 06:51:45","false","`{+a} -> T` added to a Number concept",11,12,0
"mpusz/mp-units","53720c82b85533327e4f95d8c1dfc2cb2e82f68d","mpusz","2019-10-18 21:50:43","false","fmt support started",14,13,0
"mpusz/mp-units","3534a6772e4d6e540bac85a3504735fc164ef388","mpusz","2023-03-22 12:10:30","false","ci: Conan build in CodeQL fixed",44,54,1
"mpusz/mp-units","bce17a8476b9c42468aa25765cfc2af29f81026a","mpusz","2019-09-10 19:20:32","false","Fractional dimension exponents support added",4,11,0
"mpusz/mp-units","f4747a4d7dde1c007b2e9eceac94070f579260a6","mpusz","2020-09-11 19:16:26","false","refactor: :recycle: more file system related cleanup (mostly physical dimensions definitions)

BREAKING_CHANGE: current, substance, temperature renamed to proper names",14,23,0
"mpusz/mp-units","0a11ebacb71f42c45ec6c463f1dfe779f4f2f322","mpusz","2022-05-11 18:21:44","false","chore(example): unused `example/literals/custom_systems.cpp` removed",34,43,1
"mpusz/mp-units","76437a77528ebd038681d31b250f6297d6aa136a","mpusz","2021-01-04 12:55:27","false","fix: unit_tests.cpp compilation fixed for MSVC",22,27,1
"mpusz/mp-units","93921e8f31bc830aab3f87d14494287eac5e1aa3","mpusz","2021-10-15 06:57:59","false","chore: `trond-snekvik.simple-rst` VSCode extension added to gitpod",28,37,1
"mpusz/mp-units","8cc7a539437614e8a9c42c7d56f8bfc64f81a092","mpusz","2020-09-14 06:45:36","false","docs: various small documentation fixes",14,23,0
"mpusz/mp-units","c74bd08cd5dffe9d0ff1fda937e4ba72e940aa3c","mpusz","2022-07-30 12:24:51","false","Merge branch 'master' of github.com:mpusz/units",35,46,1
"mpusz/mp-units","b59af895ddaaebf5daee80647fbd1667507ac256","mpusz","2023-05-27 15:25:43","false","fix: CGS definitions fixed",48,56,1
"mpusz/mp-units","69dddaf1f6c2136d3ad5306713b2014fdd5318af","JohelEGP","2020-08-10 02:10:03","false","feat: nodiscard for postfix increment and decrement",20,22,0
"mpusz/mp-units","4f90302dd7f5980bc356760358e877e872d1d7e4","chiphogg","2022-01-10 19:27:04","false","Constrain strictly_increasing to signed values",30,39,1
"mpusz/mp-units","86b81c9384bcd8160fc8bb6dc0b80a4b4e7e7d98","chiphogg","2022-05-12 21:53:51","false","Undo misguided fix attempt",33,43,1
"mpusz/mp-units","db5a6e9cbdd62878c62613e7e57533cf3d401e52","mikeford1","2020-06-27 11:42:56","false","added angular velocity dimension, header file and test in si system",19,21,0
"mpusz/mp-units","b6ab3408793a47e85e8ad3e124b517833726b502","badbadc0ffee","2020-07-30 12:58:32","false","Update concentration.rst

fixed reference",20,22,0
"mpusz/mp-units","078fbdc78218de5fe18bdb1cf5e5058c40c5607e","mpusz","2021-03-19 07:58:56","false","ci: Ninja install fixed for test_package",32,30,1
"mpusz/mp-units","411241472992301f14da30471a89618bce62c5f5","JohelEGP","2020-09-06 05:10:11","false","test: nonzero denominator",16,23,0
"mpusz/mp-units","3f8a76f45229c5880d21feb9846f8e182befd43d","mpusz","2020-12-21 22:46:04","false","docs: Usage documentation updated",19,27,1
"mpusz/mp-units","2c36f217161248012f70659f56009522a3417826","mpusz","2020-09-11 06:46:14","false","Merge branch 'master' of github.com:mpusz/units",14,23,0
"mpusz/mp-units","0acfc8aa8681ced1cdc147ab8bd0e3704df38049","mpusz","2022-05-22 17:49:55","false","refactor(example): `are_derivatives` renamed to `are_time_derivatives` in kalman examples",34,44,1
"mpusz/mp-units","791cec3fadcd1977e3edca66c61d8fc9fab85f18","mpusz","2022-11-30 17:00:34","false","docs: missing comment added",34,50,1
"mpusz/mp-units","99c309ef199a8d8ea6eb7fd6e243e9b35211748d","mpusz","2020-03-26 19:57:33","false","Some constants readability improved",12,18,0
"mpusz/mp-units","283b725eb7db15cecd596e47949ab4e50d99d6bc","mpusz","2019-12-11 16:30:47","false","PNG files explicitly marked as binary (resolves #39)",19,14,0
"mpusz/mp-units","ec6b6251357d3d4886aab50296dd3f6bf2ffe15e","mpusz","2021-11-05 22:36:14","false","build: `units_as_system` renamed to `unitsAsSystem`",30,37,1
"mpusz/mp-units","eb23d004d4db7d060639ea7ce4992288760b5eb7","mpusz","2020-09-13 09:46:24","false","build: version updated to 0.7.0",14,23,0
"mpusz/mp-units","e6b34b6b1ba015c9ccbf686f85a90f7d323a5879","rbrugo","2020-04-07 01:53:40","false","Added current density",13,18,0
"mpusz/mp-units","83aee04da0e4ce9b5ea6ef7e50d2335f57f099cc","mpusz","2023-02-03 15:57:48","false","refactor: `quantity_io.h` renamed to `iostream.h`",41,52,1
"mpusz/mp-units","a1637ebac6f9ac7d8b84c177eedd9f223a6fd6ae","mpusz","2022-05-22 17:51:35","false","feat(example): `si_constants` example added",34,44,1
"mpusz/mp-units","7caf14b8fe4a454e2c420a74ae4074f4478c999d","mpusz","2022-08-31 10:57:56","false","feat(example): angle examples extended with degrees and rotations",31,47,1
"mpusz/mp-units","cf0a770d9bbd4825f4b711b543f34307959fed35","mpusz","2022-10-09 20:32:38","false","refactor: quantity arithmetics implemented",30,48,1
"mpusz/mp-units","589e26fa8170fe705d933dcb2e1ff938b7f06cd8","mpusz","2019-12-17 19:16:05","false","no_prefix set for prefixed_unit",17,15,0
"mpusz/mp-units","979a00e7041b36368eb4c2c25b9a67bff08fb0f3","mpusz","2022-12-19 19:35:22","false","fix: `get_canonical_unit()` fixed for powers of derived quantities",30,51,1
"mpusz/mp-units","4912bac0c5f026046107dc772cba627361febd3b","mpusz","2022-07-28 08:39:44","true","Merge pull request #374 from chiphogg/chiphogg/exp0

Remove `exp` member from `ratio`",35,46,1
"mpusz/mp-units","9c0f2c6878b3f9af7acf34d5810538018675dabd","mpusz","2019-05-28 14:17:48","false","Custom ratio type implemented",2,8,0
"mpusz/mp-units","4c60447a282c5217fdc88e7b12d7ae27bc343970","mpusz","2022-05-09 17:12:02","true","Merge branch 'master' into downcast_mode_off",34,43,1
"mpusz/mp-units","23debc34e28c1b69a06d458695bef8f3d7b9bbdb","mpusz","2023-03-05 10:20:50","false","build: `conanfile.py` updated after the CCI review",44,53,1
"mpusz/mp-units","48c4edf004971a4de6fcfed0dfa816d830e550d1","mpusz","2021-09-10 05:36:11","false","ci: Conan 1.40 added supports for clang-13

Leaving the code commented for the next case with clang-14",24,35,1
"mpusz/mp-units","d800f295851b41a86c8d516377e4a0eb076546cc","mpusz","2020-03-09 19:07:30","false","pip dependencies moved to buid.py for CI",15,17,0
"mpusz/mp-units","d195e2b3bfec59bcafb7dd4c547480da4585f5d8","mpusz","2023-11-03 20:18:57","false","fix: equality for dimensions fixed to provide transitivity",1,61,1
"mpusz/mp-units","9d5e46cd53d028ecaba5786d770e813610d1a05b","mpusz","2019-05-28 12:33:57","false","Custom type_traits header added",2,8,0
"mpusz/mp-units","1528d942934cdafeaac311270f5ed131859f0b25","mpusz","2023-05-27 11:16:16","false","chore: `linear_algebra` example removed",48,56,1
"mpusz/mp-units","5d62dda479aa07aa020bd59f6eb13dd6765f057e","mpusz","2020-09-08 20:55:41","false","refactor: non-zero contracts check in quantity improved

Thanks @johelegp!",14,23,0
"mpusz/mp-units","ff656620e9ef7bef30d34e96607d7f5028392bd1","mpusz","2019-11-12 18:46:15","false","fmt support for sign added",12,13,0
"mpusz/mp-units","dd9f1b20cb7e1a3889256c9473af3c79700bf7a2","mpusz","2019-04-09 15:22:15","false","literals namespace made inline",2,6,0
"mpusz/mp-units","bfe4077fb6a1ebcfecf53acda50c019ff074f94b","mpusz","2020-11-04 17:22:22","false","build: conan settings simplified",19,25,0
"mpusz/mp-units","dba2b7f44fa3190a260a1a310b7e14312c6c6af7","mpusz","2020-09-08 21:00:00","false","docs: TODO added

The suggested code still is not supported by the latest available VS version",14,23,0
"mpusz/mp-units","b7e2033d33fa42843de38cfc6d0f2a4875caff4b","mpusz","2023-10-09 18:07:09","false","refactor: dead code case for units ordering removed",1,60,1
"mpusz/mp-units","8c01f8dd65b024fee095c79d11350d397f5947b3","mpusz","2022-08-02 14:16:40","false","ci: `ci-test-package-cmake.yml` cleanup",34,46,1
"mpusz/mp-units","8623939258c40badc6cd6d2a4bb08941abc7bbc1","mpusz","2021-04-16 11:53:38","false","fix: header inclusion recursion fixed",32,31,1
"mpusz/mp-units","9d708c5e39d7109149e983aa7f9c857629a212ec","mpusz","2023-10-17 06:19:26","false","feat: :boom: mutating interface removed from `fixed_string`",1,61,1
"mpusz/mp-units","da64f1789583f7b2a32ce04e12731f6c1e123758","mpusz","2023-01-03 16:44:44","false","feat: `quantity::number_in(Unit auto)` added + removed non-const lvalue overload of `number()`

Resolves #412",35,51,1
"mpusz/mp-units","b8002d1940d83091abf6dfa5ad1940e305244b55","mpusz","2023-08-03 11:08:09","false","docs: ""The Affine Space"" chapter updated to reflect the latest changes",14,58,1
"mpusz/mp-units","84671dece7f5220078eec74cb594b5a3dedd367d","mpusz","2022-08-10 20:33:27","true","Merge pull request #385 from OttoKuennecke/WarningsFixed

Warnings fixed",34,46,1
"mpusz/mp-units","a0dc3885e58c58607cec6d63ba2d86851a738944","mpusz","2023-10-18 15:21:30","false","fix(unit test): degree Fahrenheit unit test fixed",1,61,1
"mpusz/mp-units","9a6d6f9d2a767b9c2f978540e4371090f12b2b3a","mpusz","2022-06-09 11:50:01","false","fix: MSVC conversion issues fixed",34,44,1
"mpusz/mp-units","2defd58899d929e30b1f6e967e719c2230aaf774","mpusz","2021-03-19 08:58:01","false","ci: another effort to fix it",32,30,1
"mpusz/mp-units","04a3218cd0ea54338c44a367ffd3ace8e7f64bb8","mpusz","2019-05-08 21:47:46","false","CI fixed for compiler.cppstd",2,7,0
"mpusz/mp-units","645aeed3712384f35693e6aef0cec15ba065aad6","mpusz","2022-10-03 13:16:18","false","ci: clang-15 added to CI",30,48,1
"mpusz/mp-units","2a77e20cc668c0ee61c029a3640110ef7ae74b2f","mpusz","2020-03-27 09:08:19","false","Unit test renamed",11,18,0
"mpusz/mp-units","6033f962679c69cdd0a3613993972183e817218b","chiphogg","2022-01-08 19:03:52","false","Enable implicit ratio construction",30,39,1
"mpusz/mp-units","70ada0ecf35e740d0d10a64b058b12ad32475ffa","chiphogg","2022-07-20 01:03:55","false","Update prefix documentation",35,46,1
"mpusz/mp-units","c3393838736fac7f7371873ec6ea31fb2ef430e1","chiphogg","2022-03-19 16:07:39","false","Convert names to standard_case",32,42,1
"mpusz/mp-units","2834c571cda8d9133caacd1ca98893b90aa3662c","mpusz","2023-09-13 09:13:42","false","docs: ""Comparison against zero"" chapter added",3,59,1
"mpusz/mp-units","aca7861faf1076c9d1f65828175f7d0e81ca5d45","mpusz","2019-05-08 21:09:42","false","cppstd moved to compiler.cppstd",2,7,0
"mpusz/mp-units","daf29fe6dea0b242732dcec9357e093c031eb767","mpusz","2019-11-14 09:13:38","false","numeric_concepts added as in P1813R0",16,14,0
"mpusz/mp-units","967c1c9ca997c2b1c596d462ba7934f4d92d7d33","mpusz","2022-04-22 11:26:31","false","fix: `ranged_representation` fixed for clang-12",35,43,1
"mpusz/mp-units","76f500d6c496072be92d01d146e9c500de3786c2","mpusz","2021-10-01 09:44:32","false","chore: gitpod docker base image updated",26,36,1
"mpusz/mp-units","d67eabf310f32990fe165905c133da7cbe72d184","mpusz","2020-03-10 19:46:52","false","Forcing highlighting in Sphinx disabled",15,17,0
"mpusz/mp-units","43844c484cd6384b3538cdd3b22b9b3f41707a11","mpusz","2022-05-14 09:27:12","false","fix: `UNITS_MSVC_WORKAROUND()` fixed for other compilers",34,43,1
"mpusz/mp-units","d19825e14cee51b071cee4eb49dbcf79119d8334","mpusz","2020-03-28 11:08:37","false","Numeric concepts removed from repo (no longer used)",11,18,0
"mpusz/mp-units","858cbb472fe320fdb648fb976f5f026145ba8009","mpusz","2022-12-22 17:06:20","false","refactor: First examples refactored to a new quantity creation syntax",33,51,1
"mpusz/mp-units","283d8f063e25725b5934312a45870eed698d4885","mpusz","2020-12-28 14:45:01","false","refactor: `algorithm.h` not needed in `ratio_maths.h`",17,27,1
"mpusz/mp-units","1ea21b0e02a5f523cf15be316f390255c98e46f8","mpusz","2020-11-05 16:34:54","false","ci: Failed to make Autobuild work for C++ :-(",18,25,0
"mpusz/mp-units","2fddb494d31692fa4d515afb82509871b27e95c4","mpusz","2019-10-04 14:22:49","false","`_t` postfix removed from the interface (resolves #9)",14,12,0
"mpusz/mp-units","45a4b2ac10984afb0c7886828acc60f69bb77873","mpusz","2023-05-30 10:06:01","false","feat: `make_quantity()` usage added to `quantity_spec`",48,56,1
"mpusz/mp-units","a3d4c8f01f6fb2e5dc7e6af73596dbb19ca3653e","mpusz","2022-09-08 21:03:45","false","refactor: `derived_dimension` can now store only powers of base dimensions",32,47,1
"mpusz/mp-units","4cec29972f5083a1a6e78e8030fdeaa305e32529","mpusz","2020-09-08 16:43:00","false","docs: quantity_point documentation fixed",15,23,0
"mpusz/mp-units","9cd8bd20a5995a114351299e251ddce67bbdb7f6","mpusz","2020-09-05 20:54:57","false","fmt tests fixed for MSVC",16,23,0
"mpusz/mp-units","71d79aeab0e339eae3be9d44611ab602e43a2a77","mpusz","2021-04-06 14:23:54","false","docs: reference to dimension of speed fixed in ""Derived Unnamed Units"" chapter",32,30,1
"mpusz/mp-units","a8625d31c6be66f4a9e7e09f2694b32dd9b711ff","mpusz","2022-06-06 17:05:57","false","docs: P0847 reference removed

Resolves #364",35,44,1
"mpusz/mp-units","09c2fabec42de03a0902dabdcc00723cb6d635fa","Twon","2023-01-07 08:52:26","false","Stray stdlib with old style expansion",35,51,1
"mpusz/mp-units","73a56115a197d605ccd979c566232369091ae3b1","chiphogg","2022-03-11 03:42:19","false","Fix wheel factorization algorithm",31,41,1
"mpusz/mp-units","21e5dda5b7440b97d6b7ea38cd0ea352a85893c2","mpusz","2022-10-03 23:15:06","false","build(example): gitpod support fixed",30,48,1
"mpusz/mp-units","c9978dd479ddbd823e8630c1872f52715ab364c7","mpusz","2023-10-14 09:43:18","false","refactor: some internal headers moce to the _bits/external_ subdirectory",2,61,1
"mpusz/mp-units","a34730cf8c023d08686257ac13502887b6ca0a31","mpusz","2020-02-13 22:18:11","false","Subfolders reordered in CMake to help diagnose lack of testing dependencies",16,16,0
"mpusz/mp-units","8a0a61b58996939601778e71e15159438b9b54ef","mpusz","2023-02-08 06:28:14","false","refactor: `DerivedQuantitySpec` implementation simplified",43,52,1
"mpusz/mp-units","15922b5bd86937ca6fd5eadc1313d0e4dc60d4b3","mpusz","2023-10-20 07:39:24","false","fix: `CommonlyInvocableQuantities` was overconstrained for the current library design",1,61,1
"mpusz/mp-units","3cc653fae1a397d97225e9d01915415504c8cec4","mpusz","2023-08-23 18:01:23","false","build: `fmt` updated to `10.1.0` to enable gcc-13 compilation",9,59,1
"mpusz/mp-units","9b842ac87964fcf3eed123f84403a680a1185be7","mpusz","2021-09-17 18:42:55","false","Merge branch 'master' of https://github.com/mpusz/units",25,35,1
"mpusz/mp-units","e7756bf4ebdee4141a10a672079f633e5192ff5f","mpusz","2020-02-24 14:17:50","false","Printing order of base units according to the recipe fixed",14,17,0
"mpusz/mp-units","deb1ee6efa376934f43b295b400d5436342a72db","mpusz","2020-08-16 11:29:40","false","Truncating conversions disalowed for `*=`, `/=`, `+=`, amd `-=` operators (resolves #137)",20,22,0
"mpusz/mp-units","b19bf0761ce5837fd38afb39ed4a7911306717ef","mpusz","2023-08-01 15:24:01","false","feat: `relative_point_origin` support added

Relates to #414",12,58,1
"mpusz/mp-units","30b7250033e3c2c4fdde0a76c4053cd3c9305956","mpusz","2022-01-12 18:59:54","true","Merge pull request #323 from chiphogg/add-magnitude

Add vector space representation for magnitudes",30,39,1
"mpusz/mp-units","c4ad3039b33a2adace4dcfe28d5a530ad371fab3","mpusz","2023-09-13 06:52:01","false","refactor: asserts for zero simplified in `quantity`",4,59,1
"mpusz/mp-units","7e2841dcaaf9f24c57ecae97c4f0759d6aae9ecb","mpusz","2020-09-07 09:14:00","false","test: Floating-point comparison improved in si_fps_test.cpp",17,23,0
"mpusz/mp-units","68405ef7f65fca666306f8c89d5de66574a68b3e","mpusz","2020-05-08 15:50:28","false","Errors in CMake generator expressions fixed",15,19,0
"mpusz/mp-units","52b071feb34fd007681ef4ac8057ba95dcdbef5a","mpusz","2023-06-21 20:53:49","false","docs: indentation added to ""Intallation and usage""",14,57,1
"mpusz/mp-units","9224fc511a33c12bc08b74a3558e5fbacc788060","mpusz","2023-09-24 17:34:21","false","fix: `static` linkage removed from random functions",2,60,1
"mpusz/mp-units","c73ed97585eca4c7e78534990bc61b517ad52912","mpusz","2020-09-10 19:16:38","false","docs: custom systems section extended",15,23,0
"mpusz/mp-units","081d96a756f786b9b893eccfb2a439ed32533963","mpusz","2020-02-15 07:48:54","true","Update INSTALL.md",16,16,0
"mpusz/mp-units","22eb0d08f16832b78ea91e82c31707265b166397","mpusz","2020-12-29 16:18:04","false","fix: math_test compilation error fixed",17,27,1
"mpusz/mp-units","c93136e81b12909463d1810bdff962c08a2f2889","kwikius","2020-01-10 16:21:49","false","physical/si/density : change UDL from kg_per_m3 to kgpm3 (and then fix example/box_example)",16,15,0
"mpusz/mp-units","34a824b2329aae920dae757518167172a2fd8ff0","mpusz","2023-05-17 08:35:18","false","feat: `UnitOf` concept added",47,56,1
"mpusz/mp-units","d6fba478b91f9a084d281c6bbd53caa9e555edec","JohelEGP","2020-09-09 00:50:11","false","feat: working dimension concepts with UNITS_DOWNCAST OFF

continuation of https://github.com/johelegp/units-1/commit/22e6107d0f363d894dcef98dd427e4004ac88f30",13,23,0
"mpusz/mp-units","5914744e5d7c08446c2854a96a79804475f1c40a","mpusz","2022-12-27 09:18:37","false","fix: `solid_angular_measure` definition fixed",34,51,1
"mpusz/mp-units","2d2211fffadec55302549dc17febbe3527b6b2a5","mpusz","2023-05-18 09:33:10","false","refactor: `UnitOf` used in `quantity_spec::operator[]`",47,56,1
"mpusz/mp-units","b46e9e1dbdf2dd7207b5cd2d71f25d6c714b913b","mpusz","2022-11-07 05:15:11","false","refactor: quantity_io refactored to V2",32,49,1
"mpusz/mp-units","efec7448cc671bf3fb3a283bfa5bde19e2cb510f","mpusz","2020-05-11 09:08:56","false","Conan package_id fixed to support different recipes for different compilers",16,19,0
"mpusz/mp-units","085e332b7d151e1968b9319937d35c5117cb1f1a","mpusz","2020-03-19 09:49:09","false","FAQ chapter improved",15,18,0
"mpusz/mp-units","df45eafac01689f9d32120b3c6cfd52b096c964e","mpusz","2021-09-09 06:58:52","false","build: Conan layout support added

Conan 1.40 no longer supports providing source folder in `cmake.configure()`",24,35,1
"mpusz/mp-units","25e868a16fc811ec76da6b3beb66a9c613b4154e","mpusz","2022-08-02 16:33:58","false","docs: Some outdated TODO comments removed",34,46,1
"mpusz/mp-units","9abd63c2d56504ebd4af00e3ea41e8baf17b19d8","mpusz","2022-04-15 14:57:38","false","fix: `validate()` replaced with `configure()` to raise errors during `conan install` in Conan 1.X",35,42,1
"mpusz/mp-units","c48bfe2098a9d410308cc892feacf7aa1615c3cc","mpusz","2019-12-04 16:46:19","false","quantity refactored and quantity_test enabled",18,14,0
"mpusz/mp-units","0e36a6025fd6f8a41a18878104b9bb0b27f7b030","mpusz","2019-05-07 14:25:18","false","tools.h spread to multiple files",2,7,0
"mpusz/mp-units","9afcf9e695437b21901b13fcadd311b7d7c9e40a","mpusz","2020-03-25 14:57:53","false","Linear Algebra support added",13,18,0
"mpusz/mp-units","1540f4bcd9bf01554c8b962753a32c8a7f47b103","mpusz","2019-11-17 06:40:02","false","0.4.0 released",17,14,0
"mpusz/mp-units","f1f1009c3f6fc1ceebe1299e7d1730d0e92afb5a","mpusz","2022-12-19 12:39:21","false","feat: `is_scalar`, `is_vector`, and `is_tensor` customization points added",30,51,1
"mpusz/mp-units","b7b8a0bf936b0601edb50227836cc6affe1abfc4","mpusz","2021-10-20 16:52:13","false","fix: CTAD for aliases fixed",27,37,1
"mpusz/mp-units","9017aab28d7cbbdb4d3822cbfc456097550d9bef","mpusz","2023-10-06 21:20:20","false","test: unit tests added for muliplication and divsion of a quantity by reference",1,60,1
"mpusz/mp-units","bc7849beb173d19cf1caa31031a52752e519b2cd","mpusz","2021-11-05 10:32:09","false","docs: `mp-units` talk updated to the one provided at NDC TechTown 2021",30,37,1
"mpusz/mp-units","52479412bb874b475cb15854dcae9b34f9a62c60","mpusz","2023-09-26 12:21:37","false","docs: TODO note removed",2,60,1
"mpusz/mp-units","211a11b7c90129ddde28e2d924a7c553ea4f1528","mpusz","2022-03-14 18:26:43","false","build: `conanfile.py` cleanup",31,41,1
"mpusz/mp-units","98b78c9a2c44a50f8f7e2bc328bbc1f930a484ea","mpusz","2019-10-15 09:42:06","false","Design doc updated with a derived unit short name",13,13,0
"mpusz/mp-units","5142365ec6e92677c4cf671f3b5eb1633bd8a3ec","mpusz","2022-11-08 02:12:31","false","fix: `inverse` of magnitude fixed",32,49,1
"mpusz/mp-units","b508a75f6c0a8c75e9efc65514a37a4d971074c5","mpusz","2018-11-17 11:40:06","false","README updated with design description",2,2,0
"mpusz/mp-units","2078de7151c12a251fefa963b018791fd1b1cd61","mpusz","2020-09-05 20:57:40","false","CHANGELOG updated",16,23,0
"mpusz/mp-units","6d9abe97e517da36dd986a34a393bb4ee0b5439a","JohelEGP","2021-03-18 18:21:37","false","docs: rephrase 'unit constant' to 'quantity reference'",35,30,1
"mpusz/mp-units","ea83af8aa9fc05ef68e14b4dbdbb5999629ba35d","chiphogg","2022-07-29 01:46:06","false","Rename `as_magnitude<...>()` to `mag<...>()`

This is easier to write and to read.",34,46,1
"mpusz/mp-units","92750072b0ee56116fa49f8c04835cbd89269239","chiphogg","2022-07-07 16:44:19","false","Reimplement `ratio_text()` as `magnitude_text()`

The algorithm is exactly the same; we just get our values for
`num_value`, `den_value`, and `exp10` in different ways.

The old printing logic assumed the ratio/Magnitude was an exact rational
number.  Formerly, we couldn't even _represent_ anything else, but with
Magnitude, we can.  Thus, we guard this assumption with a
`static_assert`.  Later on, we can figure out how we want to print
irrational bases and/or rational powers.  The point of this change is to
unblock us from moving to the new infrastructure.",34,45,1
"mpusz/mp-units","3f8cee093180e79d6928dde9a9e6903c6658a9c7","mpusz","2019-10-08 19:19:04","false","Scalar concept constraints reversed",14,12,0
"mpusz/mp-units","018c5837f931eee93602fc0fee5c528bb724905d","JohelEGP","2021-03-18 18:03:43","false","refactor: rename unit_constants to references

Addresses https://github.com/mpusz/units/pull/261#discussion_r596663522.",35,30,1
"mpusz/mp-units","39a2c2de0eead32417a8c51ba6b16524e2798bb2","oschonrock","2020-02-20 18:10:15","false","employing more mathemtaically correct ratio_gcd calc (for common ratio)
really finds the maximum common ration as opposed to previous algo which
simplified on the exp part of the ratio by using std::min
most of new code credit to Conor Williams
discussion and additional doc here:
https://github.com/mpusz/units/issues/62#issuecomment-588152833
test case was 1yd + 1in = 37in => added as a test
commenting out unusued ratio_add and its tests
if to be reintroduced, should also use the new gcd routines
additonal change was required to check in `safe_divisible` concept
den=1 is not sufficient anymore. reusing new gcd routines
moved ratio nomalize and new gcd routines into new, separate bits/ratio_maths.h
this resolves #62",17,17,0
"mpusz/mp-units","6004fa192af9fcd7e04e35e1f6a67d4afb714ff9","mikeford1","2021-03-26 21:32:59","false","fix: corrected old names in si::constants

substance -> amount_of_substance
temperature -> thermodynamic_temperature",32,30,1
"mpusz/mp-units","a3d4e04645e8a1150adebd1e5feb5d5533c6de6c","yasamoka","2020-03-26 06:27:56","false","replaced ASCIICharT typename with char",13,18,0
"mpusz/mp-units","7b78ffb6868c38dacf66a4b02e2ce2e8ad159668","hofbi","2022-11-17 14:55:21","false","pre-commit autoupdate",33,50,1
"mpusz/mp-units","1f7c72b4afa23b13786f487410506b42bb68cebe","mpusz","2021-11-15 18:39:22","false","ci: setting of a Visual Studio version for MSVC toolchain added",30,38,1
"mpusz/mp-units","88d8192b50ac6fe5d6b3b68fe9d3db421c4b5348","mpusz","2022-05-10 09:40:54","false","build(conan): `si-fps` component now correctly depends on `si-international`",34,43,1
"mpusz/mp-units","1230eb6d25aa483b91b5b14cd4b4810cd1ccfd6b","mpusz","2023-10-17 07:32:53","false","test: inherited dimension test added",1,61,1
"mpusz/mp-units","ed10f8bfeb783164bb107432a4ae6f3b659485d2","mpusz","2020-08-17 20:08:35","false","Dependencies updated in CHANGELOG",18,22,0
"mpusz/mp-units","3a378cc376f38b20e1ac09b8868b1b8d7e70a206","mpusz","2020-11-04 21:22:57","false","build: documentation generation fixed",19,25,0
"mpusz/mp-units","901f53cf1690c6dc1a53d0d8592d4237ee570a26","mpusz","2021-10-01 10:41:53","false","chore: vscode settings should now be dynamically created and used in gitpod",26,36,1
"mpusz/mp-units","53f0b5a4e51d285a8bcb9ede02cb2b67f4029fff","mpusz","2021-03-15 17:48:18","false","test: unused variable in Release disabled with [[maybe_unused]]",32,29,1
"mpusz/mp-units","552aa1a3e572ecd4b97cadbf64f0eb56c750eae9","mpusz","2022-11-08 02:36:19","false","feat: added unit symbols for `m2`, `m3`, and `s2`",32,49,1
"mpusz/mp-units","5cf076f82a1e68a36e71f7222d3c5a3a27df2527","mpusz","2023-06-23 13:19:08","false","docs: ""Interface Introduction"" chapter added",14,57,1
"mpusz/mp-units","1c7928021d75b57a738dd012a487621867609d5e","mpusz","2023-09-13 08:18:07","false","feat: `force_in(U)` support added",3,59,1
"mpusz/mp-units","c33e3a584d75715aebc16f0f29dbf5f81e0da658","mpusz","2023-05-14 07:35:18","false","feat: `ReferenceOf` concept added",48,55,1
"mpusz/mp-units","0c89df3980e548ac92dc47873992ed10ff5f1aa6","mpusz","2020-02-22 08:37:40","false","`unknown_unit` renamed to `unknown_coherent_unit`",14,17,0
"mpusz/mp-units","f45d1e82868e1a0b8fb7219a563b249d1d602f9e","mpusz","2020-09-08 11:10:34","false","refactor: `[[nodiscard]]` added to math funcitons",17,23,0
"mpusz/mp-units","0d8c398ff4e78277750baea38e3f7f0de878fbd2","mpusz","2023-08-31 16:56:43","false","docs: `quantity_point.h` mentioned in the docs",9,59,1
"mpusz/mp-units","2892a53ea6ad0069b9a9209d6974a248eea90a6d","mpusz","2020-03-19 17:17:12","false","Linear Algebra empty documentation chapter added",14,18,0
"mpusz/mp-units","2a5baff160b0cb622ffd474fb12a0b4a6ecf82e1","mpusz","2020-03-24 22:30:20","false","Custom representation types chapter updated",13,18,0
"mpusz/mp-units","1c8c0ded775bb3839162f448fc868b402599ac15","mpusz","2019-09-19 03:59:57","false","Changelog updated",4,12,0
"mpusz/mp-units","1f46ca5f0c682c26dbe813f1182ec69f90812490","mpusz","2020-02-10 18:07:13","false","Conan scm temporarily disabled",18,16,0
"mpusz/mp-units","86d4252cca108a817491da67c446778ec7c5feb1","mpusz","2019-11-16 17:16:03","false","Another bug in P1813 fixed",17,14,0
"mpusz/mp-units","0c7505d7a3f6caa5d9a01b311a6d06ee61670df8","mpusz","2023-06-23 17:15:07","false","docs: ""Systems of Quantities"" chapter added",14,57,1
"mpusz/mp-units","d6673fe0332bce48303fa9a1131377f3ecb48cfb","mpusz","2021-07-28 09:45:02","false","build: `force_host_context=True` added for `build_requires`",25,34,1
"mpusz/mp-units","3713e08a950eeef60a8245ad53a8d0429cfc4164","mpusz","2023-05-30 10:04:07","false","refactor: library concepts cleanup",48,56,1
"mpusz/mp-units","3c2b705dede7023869cf14e89fc538b7285bf7ac","mpusz","2021-11-10 18:45:39","false","Revert ""refactor: got rid of CRTP for `latitude` and `longitude`""

This reverts commit 65fed78c98ec66686670674b385d63ff7f638a7e.",31,37,1
"mpusz/mp-units","e3863e8f8d1a70327843c355bb4ba7ecf810c2ac","mpusz","2022-11-08 02:18:11","false","refactor: `unit_symbol_denominator` renamed to `unit_symbol_solidus`",32,49,1
"mpusz/mp-units","dca553ed968a0b4bd217943c2d58f563a55ae116","JohelEGP","2021-02-21 21:52:35","false","example: fix compilation for Clang 13",27,29,1
"mpusz/mp-units","4d3e4aa1fc8883ef7ff1505e84a2b0512fdc0f4e","mpusz","2019-11-04 06:46:53","false","Surface tension added",14,13,0
"mpusz/mp-units","19e07fd54969fbf0d6b41c55a4a7adaca86b01cd","mpusz","2019-09-10 20:34:26","false","Digital information concept added",4,11,0
"mpusz/mp-units","e9e54938d4f98ade594897d5aa3b9acdea299e76","mpusz","2020-03-28 11:51:17","false","Unit symbols with `⋅` symbol updated in the documentation",12,18,0
"mpusz/mp-units","671f8912ce39c4e0725e21a7af687a77b025e80a","mpusz","2020-12-29 12:48:07","false","refactor: `one_rep` moved to a primary `units` namespace",17,27,1
"mpusz/mp-units","9696e7466bc3a028662485c1d519d13cef5771e3","mpusz","2023-08-24 17:15:05","false","test: unused defintions removed from tests",9,59,1
"mpusz/mp-units","52d1fecc499a8848ac7df7652cd3d50e2402a85b","mpusz","2020-05-08 20:56:37","false","`github_url` unsupported theme option commented out",15,19,0
"mpusz/mp-units","f9b8e3cd162d5596826b57fa3629530d53938990","mpusz","2023-03-22 12:06:16","false","ci: local cache path fixed for Conan 2.0",44,54,1
"mpusz/mp-units","2be2bafc2672518ea9937ba58b325e93c27154d8","mpusz","2019-04-04 08:37:45","false","Requirements updated",2,6,0
"mpusz/mp-units","026ce8a4e7990c789a3615c138ea3879a55bbc06","mpusz","2022-12-19 11:04:57","false","feat: thermodynamics quantity specifications added",30,51,1
"mpusz/mp-units","23720d055edcc3a1b0e3db2993d968c9d8f49115","mpusz","2021-03-16 08:32:28","false","refactor: Refactored the library file tree

Resolves #249",31,30,1
"mpusz/mp-units","afa67c5f43f174f2c406fe44d10e209bcd23576c","mpusz","2021-04-06 20:21:45","false","refactor: IWYU",32,30,1
"mpusz/mp-units","02ea4825e8101e8823da655789eb5e34a2d6630d","mpusz","2021-02-17 14:45:30","false","docs: Compilation warnings handling refactored",26,29,1
"mpusz/mp-units","c598201d113fb3ae7ca133980fa1701e8157dc2d","mpusz","2022-04-22 11:07:01","false","fix: `ranged_representation` refactored to work with older compilers",35,43,1
"mpusz/mp-units","b3b52148c0b946bfdc61b3908b9dcd1c3509eee3","mpusz","2021-04-06 14:25:43","false","build: CMake message about `UNITS_BUILD_DOCS` unified",32,30,1
"mpusz/mp-units","a9cb0c0a40321c20cc309ddb8dffb53a12487032","mpusz","2023-05-15 10:56:11","false","refactor(example): `msl_altitude` moved to `geographic.h` and the header file was moved to another dir in examples",48,55,1
"mpusz/mp-units","8e489067298d5965711dfa66449ab1adb125a27c","mpusz","2023-10-17 12:29:59","false","refactor: `quantity_from_origin_` data member now has much less friendly name",1,61,1
"mpusz/mp-units","f1bb1910f31041b46ec202d4b20bfd865ea128d1","mpusz","2020-09-08 11:14:21","false","style: `Prefix` concept still does not work :-(",17,23,0
"mpusz/mp-units","c8b60b80c1a1516b21eae6f20755ac90fad0e5b6","mpusz","2020-09-07 10:46:58","false","docs: CHANGELOG fixed",17,23,0
"mpusz/mp-units","5d82969e0a2c7cd9faf0de7e4482839c40291494","mpusz","2022-04-26 14:00:20","false","fix: enable SI prefixes for `Kelvin`

Resolves #359",36,43,1
"mpusz/mp-units","63463e7a35f5de69c00c6cdfdd5396033fcd205e","mpusz","2020-02-24 19:46:21","false","Total energy example slightly refactored",13,17,0
"mpusz/mp-units","74f442d3169c7adeb94abdff0104b5203821e5ae","mpusz","2022-08-31 19:19:51","false","refactor: `quantity_ratio` removed as it is no longer used by the framework",30,47,1
"mpusz/mp-units","608a75b61f5a565efb25653faad83c61227f87f9","rbrugo","2020-04-04 00:42:34","false","Added magnetic induction unit tests",13,18,0
"mpusz/mp-units","c2e5532ae21bfedb676eec227f6e097fd3f88e6c","mpusz","2019-11-10 00:16:41","false","Basic support for deduced units printing added",13,13,0
"mpusz/mp-units","0a1ee606f31715646701df15a2b9f6a8c1485430","mpusz","2022-12-22 16:50:41","false","feat: new quantity creation syntax support added",33,51,1
"mpusz/mp-units","ab351433ee6b20dfb548c1523607fd38569d53c4","mpusz","2021-11-26 09:30:20","false","docs: typo fixed

Relates to #316",31,38,1
"mpusz/mp-units","520c944971b880fad935d4eef1fb6539562dc8da","mpusz","2022-09-03 10:29:58","false","feat: :boom: `reduced_planck` constant removed as it is unclear if it should be angular or not (leave the choice to the user)",30,47,1
"mpusz/mp-units","8a26eaf4202cf9dacfb9fd6b368d273534408251","mpusz","2021-03-30 12:47:05","false","fix: VS build fixed",33,30,1
"mpusz/mp-units","65934130812a6a37a431ed2485a74727247b4cb7","mpusz","2021-06-08 15:58:49","false","build: `CCACHE_BASEDIR` is no longer set by default",25,32,1
"mpusz/mp-units","43a112c8be469e6de282ba3ebf8a9970803dff54","mpusz","2023-03-15 20:51:37","true","Merge pull request #446 from Cazadorro/dependency_subdirectory_support

Added support for use of units as subdirectory when *dependencies* are *also* subdirectories",44,53,1
"mpusz/mp-units","ff14b49b6869b4d1c6bc04a559afecfc6f00d379","mpusz","2022-12-25 16:34:51","false","refactor: additional unit tests enabled for the V2 build",34,51,1
"mpusz/mp-units","0cebb68e2e6d659bcf4cf6a4f711b2e50e00091d","mpusz","2023-02-03 15:58:33","false","fix: broken concept names fixed",41,52,1
"mpusz/mp-units","9bddcafbe98f70114e6f0ec1840d80105c5827a0","mpusz","2023-03-21 22:30:37","false","build: `check_min_cppstd()` does not require a safe check anymore",44,54,1
"mpusz/mp-units","7d204a117754824186e6160e551d7da9aed8375f","mpusz","2020-09-10 13:22:04","false","build(cmake): mp-units-config.cmake file added with explicit dependencies

Addresses some of the issues mentioned in #156.",15,23,0
"mpusz/mp-units","3a94ca89fd8b9e2f36e9c82d2a1823570ce6efed","mpusz","2023-07-08 10:59:38","false","feat(example): `spectroscopy_units` example added",12,57,1
"mpusz/mp-units","8f04bd9cfe40f1a37daaf6c9af54b8520fde411f","mpusz","2021-02-15 16:06:09","false","build: `mp::units` CMake target was a bad idea -> `mp-units::mp-units` is back",28,29,1
"mpusz/mp-units","c14593c59b87d344591bd3f22f6f6f6247c2981c","mpusz","2022-11-08 02:13:19","false","refactor: dimensionless refactored to V2",32,49,1
"mpusz/mp-units","3fae2b537ebd2e05942e98544b75667d6e91ed31","mpusz","2020-09-14 06:43:18","false","docs: generic quantities documentation added",14,23,0
"mpusz/mp-units","541a5548522a0121f68a93971dfc8d623f34f3c8","mpusz","2023-05-02 19:42:54","false","feat: `is_kind` added to some dimensionless quantities definitions",46,55,1
"mpusz/mp-units","09a0c35cf3fbadb2acb6c9860a11967528952834","mpusz","2022-05-18 13:56:58","false","docs: `src/include` directory does not exist anymore

Resolves #363",35,44,1
"mpusz/mp-units","e3a790667dfbeedac9afffc9eb089f689fc767c4","chiphogg","2022-01-28 20:13:35","false","Guessing at what MSVC wants",30,40,1
"mpusz/mp-units","d7681e188e5298c37b46d26656db0bd46a929d73","chiphogg","2022-02-21 01:44:26","false","Support seamless interop between `ratio` and rational `Magnitude`

We provide two new functions, `numerator(m)` and `denominator(m)`, for a
Magnitude `m`.  They fulfill the following conditions:

1. `numerator(m)` and `denominator(m)` are always integer Magnitudes.
2. If `m` is rational, then `m == numerator(m) / denominator(m)`.

If `m` is _not_ rational, then the numerator and denominator are not
especially meaningful (there is no uniquely defined ""leftover irrational
part"").  However, we choose a convention that matches how humans would
write a mixed number.  For example, sqrt(27/16) would have a numerator
of 3, denominator of 4, and a ""leftover part"" of sqrt(3), matching the
""human"" way of writing this as [(3 * sqrt(3)) / 4].  This has no use
yet, but it may later be useful in printing the Magnitude of an
anonymous Unit for end users.

To further reduce friction for the upcoming migration, we provide an
implicit conversion from a Magnitude to a `ratio`.  We restrict this
operation to rational Magnitudes, and guard this with a `static_assert`.",30,41,1
"mpusz/mp-units","c64f392dc35f6a25f05c6be54a429409467dbbcb","chiphogg","2022-01-10 19:23:44","false","Remove some extra spaces",30,39,1
"mpusz/mp-units","b589ba8d86e90871e4cf0d5f318f0cc44fb8ec80","chiphogg","2022-03-19 22:09:51","false","Omit redundant computation

This stems from an earlier mistake where I was using primes in the first
wheel, rather than coprimes-to-the-basis.  1 is not prime, so we used to
need to handle it separately (in an implementation which was, to be
clear, wrong).  It _is_ coprime, so now we get it for free!",32,42,1
"mpusz/mp-units","879ec35d84217ae8d90090838c06850a7cba7625","mpusz","2023-05-26 13:57:14","false","build: conan `test_package` updated for V2",48,56,1
"mpusz/mp-units","7135148a3c877d78e8edeb6498d60245cbf196b3","mpusz","2020-12-24 08:38:37","false","docs: README badges updated",19,27,1
"mpusz/mp-units","53fd362fe32d274e9481819148db4a4f9aaec1be","mpusz","2023-03-22 15:20:12","false","docs: README badges cleanup",44,54,1
"mpusz/mp-units","ae654078760132b3cb058669262e4511e262e2a5","mpusz","2019-08-07 16:34:18","false","Missing change in unit tests committed to fix build errors",4,10,0
"mpusz/mp-units","03fe0d5b2794e272a91df7b3314d238317deb848","mpusz","2021-03-19 10:08:08","false","ci: bash set as a shell for all run actions",32,30,1
"mpusz/mp-units","35efff66d42aa819151359538f4a467afdd11c95","mpusz","2023-08-25 21:06:35","false","build: `clang-format` updated to 16.0.6 in pre-commit",9,59,1
"mpusz/mp-units","367c7d5b6e53741037829b5dc39684e568906aaa","mpusz","2019-11-02 12:58:35","false","my_value constructor refactored",14,13,0
"mpusz/mp-units","a41b3a42fe8647e840e678c42f43e4a494710a0f","mpusz","2021-02-20 16:17:45","false","fix: `gsl_ExpectsAudit()` added for all relevant `quantity` and `quantity_kind` operations

Resolves @218",26,29,1
"mpusz/mp-units","f9fb6cc8b39786cbc50066a0e9f41872353e253c","mpusz","2021-11-05 22:25:20","false","build: `projectPrefix` usage added",30,37,1
"mpusz/mp-units","1ecda6d2f91c6c8c297f5de53290da1d72c4a57c","mpusz","2020-11-05 14:49:18","false","ci: CodeQL updated again",18,25,0
"mpusz/mp-units","a1d43c2613f6b54f5eee742139dda3b5c5505b2d","mpusz","2022-07-26 09:30:38","false","chore: Conan 1.X temporary files added to `.gitignore`",35,46,1
"mpusz/mp-units","035eb7da707ccc539d9a40ee83174c2b12700334","mpusz","2022-03-22 13:57:19","false","docs: `CONTRIBUTING.md` updated",32,42,1
"mpusz/mp-units","a82a9d8fe2deffa823e896da5be149334ea87ba7","mpusz","2020-12-16 16:57:04","false","fix: `exp()` has sense only for dimensionless quantities

Resolves #178",20,27,0
"mpusz/mp-units","c056f4535c035ee36808f6c4211d2e2d99e644ee","mpusz","2022-12-23 16:58:57","false","refactor: `quantity_like` types refactored",34,51,1
"mpusz/mp-units","d03d7291e4f1c4cbf8eb441c37f4f636c38a8953","mpusz","2020-09-06 08:23:31","false","Removed cmake/common submodule",16,23,0
"mpusz/mp-units","3b07c51f50dcd402b84f7ed2b0359859a25a397e","mpusz","2019-09-30 06:55:39","true","Merge pull request #15 from jansende/patch-1

Made quantity_cast more versatile",11,12,0
"mpusz/mp-units","9f9397ffc285a354a136f46b013e3e3270b885d7","JohelEGP","2020-09-06 01:41:02","false","test: convert comments to code",16,23,0
"mpusz/mp-units","fd7b4df29d91625e28c79dc849f136d6a149e7ff","chiphogg","2022-07-07 20:52:37","false","Add zebi and yobi prefixes

Switching to Magnitude makes these easy.

Co-authored-by: Johel Ernesto Guerrero Peña <johelegp@gmail.com>",35,45,1
"mpusz/mp-units","053de8d539c00a6d2787936bb7ed5b6c7d02063d","chiphogg","2022-01-08 23:34:14","false","Replace structs with variables",30,39,1
"mpusz/mp-units","d1130c9d395d57b035b8738f6e993ca9c9ff8621","HazardyKnusperkeks","2022-08-01 12:00:14","false","Suppress float-equal warning",34,46,1
"mpusz/mp-units","4796d777b9637da91739594690302ea30e87638d","mpusz","2018-10-16 13:39:39","false","Centimeters support added",0,1,0
"mpusz/mp-units","40ab45b506df5aecce159e2d57da4693a451feb1","mpusz","2018-09-28 17:53:21","false","Code cleanup",0,0,0
"mpusz/mp-units","4b33c0f7c570452a295987a2a12ad96024c4315c","mpusz","2020-03-01 13:44:45","false","Examples with an alternate way to create quantities refactored

- examples modified to provide a unified library look-and-feel
- originals moved to a dedicated subdirectory for further reference and comparison",14,17,0
"mpusz/mp-units","1637ee21e840e51512e48c1d93cc8df8f224acb7","mpusz","2020-11-05 11:15:24","false","docs: CI badge replaced with GiHub Actions",19,25,0
"mpusz/mp-units","11dd023143f5f504863ec014f05ddcb94212a3a6","mpusz","2023-04-21 14:18:58","false","docs: comments updated in `chrono_test`",46,55,1
"mpusz/mp-units","dcc2d24c8ef4e488efa0634fb7f0e0d54dcec0c8","mpusz","2020-09-09 17:53:48","false","refactor: squared units use `*2` now instead of `sq_*` prefix",14,23,0
"mpusz/mp-units","290f406746fb1104c66690e274cda763f40a9548","mpusz","2023-02-09 05:00:52","false","fix: quantity creation in its operator/ fixed",43,52,1
"mpusz/mp-units","bf27b256b23f04abc778109e3afa37c3b2387287","mpusz","2021-03-18 19:50:38","false","docs: CMake targets definition in usage updated",35,30,1
"mpusz/mp-units","19398f4b78f5ef27ab9ada055fa2bd4b0dd12a4f","mpusz","2020-03-18 11:53:41","false","Grammar chapter updated",14,18,0
"mpusz/mp-units","ada3c60ee9f6db71aa40828738a6301d2da77b98","mpusz","2021-02-16 18:18:14","false","refactor: QuantityLike concept improved",27,29,1
"mpusz/mp-units","e5547b0a34032e545ff96fc1b0fbccbf6e097c7c","mpusz","2020-12-24 10:16:01","false","ci: Another approach to fix the `not` branch",19,27,1
"mpusz/mp-units","3d044a1f388c12175022ef0712471871f0f0d308","mpusz","2023-04-07 20:56:03","false","refactor(example): not needed explicit construction removed from `glide_distance()`",47,54,1
"mpusz/mp-units","32d0f7c8715b808b824ce29ddf04470ffa08d570","mpusz","2021-08-29 20:27:13","false","docs: Sphinx documentation fixes

Broken links, invalid chapter underlining, invalid code fragments, etc.",24,35,1
"mpusz/mp-units","f430e81202c0e094ca06f5ccf53f160b48102f91","mpusz","2022-12-27 09:51:29","false","style: CMake files reformatted to make pre-commit happy",34,51,1
"mpusz/mp-units","ed279c43ab57f4ed372cd7c19f55f60098bde5ab","mpusz","2023-08-23 09:53:49","false","feat: `quantity_point` CTAD from `Quantity` removed",13,59,1
"mpusz/mp-units","6324fe9467cff8b826e78cc4de6c13cbee0204cf","mpusz","2023-09-26 11:06:32","false","ci: GitHub actions updated to the latest versions",2,60,1
"mpusz/mp-units","80eefec97c064202f7d17a2ae6ef9fec55fb8110","JohelEGP","2021-06-27 22:35:21","false","fix: add quantity_point::origin, like std::chrono::time_point::clock",27,33,1
"mpusz/mp-units","6f4386c14e401d4fb5cb6cc8dc1d7fea10b230b6","rbrugo","2020-09-10 16:10:48","false","Updated documentation",15,23,0
"mpusz/mp-units","c103db827935fd9434264c6bc20680ce7f477139","mpusz","2023-03-05 08:08:15","true","Merge pull request #443 from JohelEGP/llvm17

refactor: update hacks for LLVM 17",44,53,1
"mpusz/mp-units","bac2b91a0f4a59ce832cffbf866a8c8076ee7a65","mpusz","2023-08-27 19:52:47","false","docs: 'important' admonition type added",9,59,1
"mpusz/mp-units","44025cd9a0eff2d60d6eab7b23c08e605f4528b3","mpusz","2021-03-17 14:57:11","false","docs: CMake generators updated in ""Live At Head"" chapter",32,30,1
"mpusz/mp-units","6c6e7955b69ecf1b48f85a2ec1b3bd067004e006","mpusz","2021-05-10 13:51:17","false","chore: .gitignore updated to ignore auto-generated docs",30,31,1
"mpusz/mp-units","4b83b3a2eed314c4a3badfb22da8cfb9ccf9e815","mpusz","2022-10-21 21:10:56","false","refactor: `text_tools` made `consteval` and `[[nodiscard]]`",30,49,1
"mpusz/mp-units","880528e5ca93da0159a3591582c7c125d461d19b","mpusz","2019-10-18 20:34:43","false","Compile-time performance of printing a prefix improved",14,13,0
"mpusz/mp-units","a32eb712da3f272e7cf63e1b071645e80c3d19cc","mpusz","2022-12-22 14:58:37","false","refactor: `quantity_spec::operator[]` made `consteval`",33,51,1
"mpusz/mp-units","8c9986dec84012f118737220313e577be367f1c1","mpusz","2020-09-08 11:23:36","false","Merge branch 'master' of github.com:mpusz/units",17,23,0
"mpusz/mp-units","90a7dbe3fa299e8efa2f7c1f2c0fb8a0fff367ab","mpusz","2019-09-16 06:21:58","false","quantity_cast<U, Rep> support added",4,11,0
"mpusz/mp-units","640fa670f874fb8077423b535e29af2762675794","mpusz","2022-05-05 09:54:23","false","build(conan): `no_copy_source` attribute added",36,43,1
"mpusz/mp-units","152510155510f1cd3cc618059724267a5d7527cc","mpusz","2021-10-20 08:52:57","false","docs: UML diagrams replaced to plantuml generated SVGs",27,37,1
"mpusz/mp-units","76a9e0ff6eddca6bf6d00b548bfd7ba6c8e82bdc","mpusz","2023-09-13 06:58:38","false","refactor(example): hello_units refactored to not use `auto`",4,59,1
"mpusz/mp-units","06c1cbde06e24fdc94f36cd0489a693559968cc2","mpusz","2021-03-30 12:01:19","false","fix: `glide_computer_example.cpp` compilation fixed",33,30,1
"mpusz/mp-units","75f41fe3df9569e4f6c5294cf7d9bd89064d762e","mpusz","2020-11-05 11:18:56","false","docs: CHANGELOG updated",19,25,0
"mpusz/mp-units","7ee95bcbebb50a05288743e0eb1c43642cd7dc16","mpusz","2022-12-27 10:04:49","false","test: metabench tests removed from repo",34,51,1
"mpusz/mp-units","ef39b8c4c7fc2ef950a0599455dbba74fc3aa678","mpusz","2023-08-18 09:01:40","false","feat: `kind_of_qs[unit]` now returns a bare unit as a reference",14,59,1
"mpusz/mp-units","d13165d9ae6302933a9956e0c84b1c7801674f7c","mpusz","2023-05-27 15:26:06","false","test: CGS tests added",48,56,1
"mpusz/mp-units","1d94eb93e842ee93e56f932321c31a66b6afb768","mpusz","2019-08-06 17:56:09","false","dimension_ prefix removed from names of derived dimensions",4,10,0
"mpusz/mp-units","d24479bec14e4fa779314705b960350ee8fd94a3","mpusz","2019-10-15 19:18:48","false","exp template parameter renamed",13,13,0
"mpusz/mp-units","d50ed286b3d35bec3249b302e6be0a95177cfdc2","mpusz","2022-07-30 08:49:44","true","Merge pull request #381 from JohelEGP/llvm16

refactor: update hacks for LLVM 16",35,46,1
"mpusz/mp-units","c46ecbd7db8e06989f1be8945538be9086f78ba6","mpusz","2023-06-08 20:08:19","false","test: no longer needed test suites removed",48,56,1
"mpusz/mp-units","4ae66aafb19f6bbf1ece5c010aed2d3826d50c2c","fdischner","2022-01-29 17:25:32","false","ci: Apple clang 13 support added to ""CMake Test Package CI""",30,40,1
"mpusz/mp-units","3f145a25dbbca46d33d42b0c02791fe65fdff1c8","JohelEGP","2022-02-08 01:07:22","false","refactor: update hacks for LLVM 15",30,40,1
"mpusz/mp-units","ba458d479e16ea87631722c19966432139ef7670","chiphogg","2022-01-08 23:19:40","false","Fix remaining constraints",30,39,1
"mpusz/mp-units","a11f5a92b6b5f914b35192abb233ee7edd256843","jansende","2019-09-30 21:38:33","true","Optimized floating point unit conversions

- Divisions are now made at compile time.
- Only runtime multiplications are left.",12,12,0
"mpusz/mp-units","a34ccb15aec433fc27e05a4c933af260d99ee406","mpusz","2022-05-12 15:11:22","false","chore(gitpod): clang-14 enabled on Gitpod",33,43,1
"mpusz/mp-units","687cabc5762174a3785f13a5047f56fdc0094127","mpusz","2020-03-18 11:17:12","false","Grammar updated",14,18,0
"mpusz/mp-units","e5cd7c80e76e77ef96a8b07419047236c368fc11","mpusz","2021-04-13 18:37:10","false","docs: typo in the chapter name fixed",32,30,1
"mpusz/mp-units","6028f182d349519565b9eb4731e6810886c2a116","mpusz","2022-12-20 11:53:08","false","feat: `magnetic_constant` constant added",30,51,1
"mpusz/mp-units","ef94100d0228c402787e52b9d72633b36f55867c","mpusz","2021-04-01 12:03:26","false","docs: CHANGELOG updated",33,30,1
"mpusz/mp-units","9f2a62accf577b4148ca3f12c977ed7f0f262a55","mpusz","2021-05-04 11:06:52","false","build: `linear_algebra` Conan recipe reference fixed",32,31,1
"mpusz/mp-units","991863594da9adfa9e77c5bf92fda01ca95bd97e","mpusz","2020-09-08 16:37:29","false","refactor: :recycle: two pow() overloads merged into one

Also fixes doxygen warnings.",15,23,0
"mpusz/mp-units","bcaf252dec9b6094ab9b92c602029f68344d103c","mpusz","2021-03-19 05:36:26","false","build: Library components exposed in Conan",34,30,1
"mpusz/mp-units","02de44cd12f4d2d3aa966780376f84f273d50c18","mpusz","2019-05-08 15:05:59","false",".gitignore updated",2,7,0
"mpusz/mp-units","2fa96c80ab00753be9ea5866a7786c654015a5b1","mpusz","2021-10-14 15:28:44","false","chore: Minor comments change in gitpod.yml",28,37,1
"mpusz/mp-units","4ba3d96230c2d0d9dbd1a2806e9e66acc188e4a9","mpusz","2022-12-19 14:26:54","false","Merge branch 'v2_framework' of github.com:mpusz/units into v2_framework",30,51,1
"mpusz/mp-units","6a6fda18373e45e41c846664ac2c07b1b028c3a8","mpusz","2022-10-18 14:09:35","false","style: SI unit symbols definition cleanup",30,49,1
"mpusz/mp-units","3f88da4ebf2a4a07ed67744cd4699842cce948fa","mpusz","2023-06-14 12:57:32","false","feat: `clone_reference_with` added",48,56,1
"mpusz/mp-units","a1e1b70b9246e19c849e80ccd7270d4704442546","mpusz","2022-08-03 11:35:18","false","test: Unit tests for 3-argument `hypot` added",34,46,1
"mpusz/mp-units","d9a16aa8079560d648ab42dd876464087c756b44","mpusz","2022-05-11 14:41:55","false","build: gsl-lite updated to 0.40.0",34,43,1
"mpusz/mp-units","b015c6baddb5bd09c3e08eca168d13762b0c2b9d","mpusz","2020-12-27 11:10:03","false","test: Test disabled for GCC 10.1.0",20,27,1
"mpusz/mp-units","f16d619d308eb79fa542131c0fc01be18dd15bf8","mpusz","2019-04-10 16:20:32","false","Documentation updated",2,6,0
"mpusz/mp-units","1d37ba64d14cfb70e65a7e0597031adb13d33be6","mpusz","2023-06-22 06:17:23","false","docs: ""quantity character"" definition improved in Glossary",14,57,1
"mpusz/mp-units","ad7f8976007a9aaabbce93925334a3b9422bd864","mpusz","2023-06-16 13:24:53","false","fix: `constexpr` evaluation maximum step limit fixed for clang for `proton_mass`",14,56,1
"mpusz/mp-units","be997394ea7714afd7a5fd37f690269713122883","mpusz","2019-05-07 15:48:49","false","git submodule update added to AppVeyor",2,7,0
"mpusz/mp-units","2b408f19c0321bcbfeb8b0765eb734f499d2b638","mpusz","2020-09-09 09:22:58","false","Merge branch 'master' of github.com:mpusz/units",14,23,0
"mpusz/mp-units","36046fb6a6bc6a733e2807779cfd4c6f82b051c7","JohelEGP","2020-09-06 02:55:59","false","test: simplify case",16,23,0
"mpusz/mp-units","7c00b196a3056c353bc5b3e3d000bf2d9ef50484","JohelEGP","2020-09-07 05:14:14","false","refactor: simplify is_derived_from_specialization_of",17,23,0
"mpusz/mp-units","556df315904f5e2e750a813f13cb62c27a84afa1","mpusz","2023-10-15 15:08:19","false","feat: equality for dimensions now will allow derived classes as well (but not from `derived_dimension`)",1,61,1
"mpusz/mp-units","6c576d7120ab27b0d4970cd46308e5800e90f32d","mpusz","2023-09-13 09:27:56","false","style: another whitespace removed from the `currency` example",3,59,1
"mpusz/mp-units","65b51a2d26e91b63bcf961a922ef6e006185d6e4","mpusz","2022-09-01 14:20:23","false","chore: symbolic link to CHANGELOG added again",30,47,1
"mpusz/mp-units","05a5c881f0e48ffd1659513687366e4fccf7829e","mpusz","2022-05-11 17:35:07","false","ci: clang-14 support added",34,43,1
"mpusz/mp-units","5bd378a835909120f58a61d2c89c8732ff775080","mpusz","2022-07-31 13:45:40","false","refactor: `base_units_ratio.h` renamed to `absolute_magnitude.h`",34,46,1
"mpusz/mp-units","e122d6baae5991aeba56727aad9c8498fb5470a0","mpusz","2020-03-09 17:56:00","false","avg_velocity renamed to avg_speed",15,17,0
"mpusz/mp-units","627f39742d2e97280a304835faf0679853bdbd6b","mpusz","2021-10-20 20:28:42","false","docs: SVG files are now copied and searched correctly",27,37,1
"mpusz/mp-units","43047474065c647b21d4a14edc2f193b495611f3","mpusz","2019-12-11 08:27:17","false","-pedantic warning flag reenabled",18,14,0
"mpusz/mp-units","d171f5451e127f989eba11bdae76b0f498d01586","mpusz","2020-06-27 17:15:46","false","NTTP ratio support added (resolves #49)",20,21,0
"mpusz/mp-units","a3e5c84a4750dc265c886af19d98dccb2d6d530a","mpusz","2023-05-24 20:39:42","false","feat: support for convertibility of point origins added",47,56,1
"mpusz/mp-units","caab43cd256e4c617f57b896afb5780d1353f119","mpusz","2023-08-06 10:22:05","true","Merge pull request #480 from bourumir-wyngs/master

Fix ""control reaches end of non void function"" error.",15,58,1
"mpusz/mp-units","211bd61895b55751a3f07dba916e316c11c05d8f","mpusz","2023-06-13 06:12:04","false","refactor: `sudo_cast` improved to benefit from `treat_as_floating_point`",48,56,1
"mpusz/mp-units","c60f94caa3e04f0bbe8b0c11407e083547507ab3","mpusz","2023-07-10 10:33:54","false","docs: code samples with `quantity_spec` definitions now have 3 versions",12,57,1
"mpusz/mp-units","62434507a2a28c640842260f8135fd69d6ef4c7f","mpusz","2020-05-10 20:59:16","false","test_package fixed",16,19,0
"mpusz/mp-units","341b17e99abbc73d265f88d76186a6c69150f18a","yasamoka","2020-05-25 17:59:02","false","passed rep by reference; added constraints for rep",16,20,0
"mpusz/mp-units","e40a5d631c7f6531b99c9feccc48102d8af24910","mpusz","2022-09-01 10:16:47","false","feat: solid angle support added",31,47,1
"mpusz/mp-units","c7c4fdd7b3291fc3e03a9e65d31798ae255b5543","mpusz","2021-09-30 19:31:15","false","Merge branch 'gitpod' of https://github.com/mpusz/units into gitpod",26,36,1
"mpusz/mp-units","8e6fb7818b6de7271e047f0b89fed7bdef33b4c5","mpusz","2023-02-13 17:39:12","false","fix: `isq_angle` compilation fixed",43,52,1
"mpusz/mp-units","613bbca6207fc20ff26eb35b2fa0172568e5a7e4","mpusz","2023-08-01 09:57:20","false","fix: `quantity_point` now uses `absolute()` instead of `relative()` for comparisons",13,58,1
"mpusz/mp-units","09e24114b012d3e846b6b80338c51fe1f37ee947","mpusz","2020-05-10 20:40:28","false","Missing headers added to si.h",16,19,0
"mpusz/mp-units","8fd59a5db0d099f8574a193703c4586a1d9c5b9b","mpusz","2020-12-21 22:06:37","false","build: Removal of build_docs disabled for now",19,27,1
"mpusz/mp-units","eee6f7ed879480548fb37ddfa6964efc289b559a","mpusz","2022-11-11 02:46:56","false","style: core code reformatted with clang-format-16",33,49,1
"mpusz/mp-units","d31d2cf439cfbd2efc5e0e2373e6997135e99762","mpusz","2019-10-15 17:03:45","false","Base dimensions refactored

-",13,13,0
"mpusz/mp-units","929a812ec49cc36b79a2b9b9fdb665421a8fe7c5","mpusz","2019-09-18 15:49:17","false","cmcstl2 dependency changed to range-v3 0.9.1",4,12,0
"mpusz/mp-units","6147348b88a70e4ed751445dc2b42522fed7ede6","mpusz","2022-08-02 13:41:20","false","ci: ci-conan no longer uses conan-package-tools",34,46,1
"mpusz/mp-units","86584dbfe2f5e13523cd2e249df24865ea892564","mpusz","2021-02-17 16:54:12","false","docs: ""UDLs vs Unit Constants"" chapter extended",26,29,1
"mpusz/mp-units","95ac869522496d0c9e4689f3066ae146187f5253","mpusz","2021-06-27 09:31:54","false","extended is_quantity<T> to support quantity-derived classes

N.B. inheritance is preferred to composition/delegate class to avoid duplication and also inherent the various required operators ('+','-',..., '+=', ...) for details see discussion #271",26,33,1
"mpusz/mp-units","6a2371896957657d591a5a82cce85977a3cd60ab","mpusz","2020-12-16 20:54:43","false","build: Conan test_package fixed",20,27,0
"mpusz/mp-units","b2e98808c4d56b6ac64cc80e2924a7ff4c958b0f","mpusz","2021-07-28 11:11:11","false","ci: The same changes applied to ""CMake Test Package CI"" workflow",25,34,1
"mpusz/mp-units","11d64094c109fdb810b0b0a9137ce52250745d6f","mpusz","2022-12-20 09:48:07","false","refactor(unit test): `symbol_text_test` refactored for V2",30,51,1
"mpusz/mp-units","5a87b6400965ccfc82949d4a1a1cf2e9c872a6e3","mpusz","2020-09-13 15:44:48","false","docs: more core docs restored",14,23,0
"mpusz/mp-units","a9ff29c637f8ecff441fbfafaaa641f571f5bfa3","mpusz","2020-05-11 06:52:08","false","Compiler Explorer links updated (resolves #104)",17,19,0
"mpusz/mp-units","c950a513a4f2e48b676e576388270f6b72d95b58","mpusz","2021-11-10 18:02:08","false","refactor: `latitude` and `longitude` simplified",31,37,1
"mpusz/mp-units","83516346e7bd73d02e6ad13f3791acadc4f4cc14","mpusz","2019-12-26 11:06:12","false","tonne definition fixed",16,15,0
"mpusz/mp-units","a9627c60cdcad0c163e2e3bd675c39453993caae","mpusz","2020-05-28 17:20:12","false","math.h function signatures refactored to use Quantity concept (thanks kwikius!)",17,20,0
"mpusz/mp-units","2e410278baa4301011511dfa57c3a4167a606b0e","mpusz","2022-07-30 12:29:17","false","Revert ""build(conan): `cmake_layout` import added too early by an accident""

This reverts commit 5efbda75d563d49a1637bae241155140161c2842.",35,46,1
"mpusz/mp-units","6399e53776f35564aad01f43da0ea33f3b6e84aa","mpusz","2023-05-12 10:19:23","false","docs: link in usage.rst fixed",48,55,1
"mpusz/mp-units","8accecb15c0d19d50bed8afd2a9986a6c945fd1f","fdischner","2022-01-29 18:12:09","false","ci: Apple clang 13 support added for Conan",30,40,1
"mpusz/mp-units","67b1c499d130ac2b768ca396757d0ec2ea8c0b6d","JohelEGP","2020-07-19 18:27:46","false","refactor: avoid always false comparison",20,22,0
"mpusz/mp-units","f83ba6eb39bb5117a5f3aee8e60e02d16445b890","JohelEGP","2020-09-08 03:28:02","false","refactor: remove indirection for further simplification",17,23,0
"mpusz/mp-units","7615de4720352bd89da164bb5b04d7c0d437e2be","chiphogg","2022-02-06 21:06:53","false","See if passing by const& will satisfy all compilers

The only reason we had the `is_magnitude_integral` type members before
is because the compiler complained about incomplete types.  Passing by
`const&` might eliminate this need.",30,40,1
"mpusz/mp-units","f77a92ca043a0b460fc7ff910ab008ed47fc90af","chiphogg","2022-04-06 00:36:18","false","Reproduce requires clause

clang appears to care about this.",35,42,1
"mpusz/mp-units","04b80f0827b56baa43fcd50b69ffcfe763a88c92","chiphogg","2022-03-10 23:29:02","false","Use wheel factorization for prime numbers

Certain existing units in the library require very large prime
numbers---so large, in fact, that our naive trial division hits the
_iteration limit_ for `constexpr` loops.  We don't want to force users
to provide a compiler option override, so we'd better find another way.

The solution is to use the ""wheel factorization"" algorithm:
https://en.wikipedia.org/wiki/Wheel_factorization

This lets us skip most composite numbers in our trial division.  The
implementation presented here is configurable in terms of the size of
the ""basis"" of primes we use.  Bigger bases let us skip more primes, but
at the cost of storing more numbers.  Fortunately, it turns out that N=3
was good enough for our purposes.",31,41,1
"mpusz/mp-units","cee27390e677c2136c16ddaae111a137209c62b3","mpusz","2021-04-14 18:22:20","false","feat: Formatting support for Kalman related types added",32,30,1
"mpusz/mp-units","ec8c19b947052a71a848b24aad4549b6508dc810","mpusz","2021-04-15 12:03:32","false","refactor: natural units refactored",32,30,1
"mpusz/mp-units","2f1dc6a9f363cea289245afb9409c1f7aa627ccd","mpusz","2021-03-16 08:57:54","false","ci: Add support for clang-12 to Conan's settings.yml",31,30,1
"mpusz/mp-units","458ac0918bee54ec81475c725d39ac5c34d421b2","mpusz","2019-10-08 19:20:37","false","Scalar constraint added to quantity constructor",14,12,0
"mpusz/mp-units","74ad0f6f68b4c2ce9abaaf73dced8c67f0bcb418","mpusz","2023-06-13 14:34:37","false","fix: more constraints added to `ReferenceOf` to provide support for corner cases of dimensionless quantity tree",48,56,1
"mpusz/mp-units","a4fcc9422df026e761d32cf09a4140a534177487","mpusz","2020-06-22 17:43:06","false","glide_computer example added to docs",19,21,0
"mpusz/mp-units","82baa517088da23f61c7ae2b471cf95ca23afb6e","mpusz","2020-08-17 20:07:59","false","fmt updated to 7.0.3",18,22,0
"mpusz/mp-units","a9432b1407242563f452d7812fbc4ff0657d1e09","mpusz","2020-03-19 10:54:23","false","Note refactored again",14,18,0
"mpusz/mp-units","03facbefd22b590833aeab4ada74b83c48dfa7ff","mpusz","2020-06-25 15:45:50","false","`--recurse-submodules` changed to `--recursive` in Usage docs",18,21,0
"mpusz/mp-units","5a7324596d54f2dea83cfb4437dc9c78c478d91b","mpusz","2019-12-11 12:31:40","false","Resulting unit ratio fixed in arithmetic operations",18,14,0
"mpusz/mp-units","49da1ced3a2144c7850442ae28974b60c943b124","mpusz","2023-09-20 18:31:49","false","refactor: `make_reference` added and used in constraints for `quantity` and `quantity_point`

`quantity_spec[unit]` syntax will not work for natural units and we want the interface to be widely applicable to all domains.",2,60,1
"mpusz/mp-units","6390eba786b4a746b22efd6d282fcb865d1a5075","mpusz","2019-09-19 03:24:40","false","Dimensions comparison improved",4,12,0
"mpusz/mp-units","987ab86439b001d8b65f072c92c572da9048f433","mpusz","2019-10-18 20:36:57","false","Added support for prefixes of non-coherent units",14,13,0
"mpusz/mp-units","9a022da91948ad6d495a99765ff7b7ca2571948f","mpusz","2022-05-11 14:48:39","false","chore: SVG image fixed to make pre-commit happy",34,43,1
"mpusz/mp-units","b5f966e54f0a4f2f40df94bcd577fda8615e1aa7","mpusz","2023-09-25 17:49:42","false","Merge branch 'master' of github.com:mpusz/units",2,60,1
"mpusz/mp-units","aff83b31dc56ac3d14f648bf893470a062706364","JohelEGP","2020-09-06 02:39:34","false","test: codify comment",16,23,0
"mpusz/mp-units","9a520edfe9c15374cf07055b018f2292f85f587e","JohelEGP","2021-03-17 19:20:07","false","refactor!: replace one_rep with reference<D, U>",34,30,1
"mpusz/mp-units","2853a20c7f3afad08992e72580d4774da86ebc12","JohelEGP","2020-09-09 06:21:50","false","style: remove empty parameter list",13,23,0
"mpusz/mp-units","86eefe1b0db025562453d8c25016bd184f609de6","rbrugo","2020-04-05 10:58:39","false","Added magnetic flux",13,18,0
"mpusz/mp-units","1ef2bf9f28020f29cb86a46548f4f41daf7518a6","dkavolis","2020-11-02 13:28:13","false","After review",19,25,0
"mpusz/mp-units","6dd07002c2058007f27d62628eaab6f442d2819b","mpusz","2018-09-30 01:19:25","false","Unit specific concepts introduced",0,0,0
"mpusz/mp-units","4fa0f90a4e6fa7a7ba57c908139f395bb49aafb7","mpusz","2020-05-08 21:08:01","false","gcc10 build added to Travis CI",15,19,0
"mpusz/mp-units","2a3e1f60353864aa516833b8c7d37d2709ba24bb","mpusz","2022-12-25 16:32:29","false","refactor: `angular` system created",34,51,1
"mpusz/mp-units","666676f4249a3bd7bd734b7c0cde979d89fc2fe9","mpusz","2023-03-21 22:30:02","false","build: MSVC update is not checked in `validate()` anymore",44,54,1
"mpusz/mp-units","69974f82cde6787c210f3304aa105032ac575d2f","mpusz","2019-12-23 12:23:23","false","Floating-point UDLs removed from fmt_test",16,15,0
"mpusz/mp-units","8687527b34457592ffdff33760b0fe14dc3401c3","mpusz","2020-09-15 05:30:06","false","perf: temporary string creation removed from `quantity::op<<()`",16,23,0
"mpusz/mp-units","4a49bdda053ade87b72c6efca0824a1579dd3ee1","mpusz","2022-10-06 22:43:01","false","refactor: V2 design update",30,48,1
"mpusz/mp-units","a384fbd75acf57ad9cd30038bd1699b2f86b1ea1","mpusz","2019-12-17 08:15:31","false","README updated",20,15,0
"mpusz/mp-units","e51bbcc888ee36884934170b0186392299ddd3f3","mpusz","2020-03-13 18:14:01","false","`seealso` added to ""Obtaining Dependencies""",14,17,0
"mpusz/mp-units","4330cabd59c9aa41fb230aa091e0e0c952cc3652","mpusz","2023-06-13 06:14:53","false","feat: `pow`, `sqrt`, and `cbrt` support added for `reference`",48,56,1
"mpusz/mp-units","395a98c05531e153871713430724dc997f1b03e9","mpusz","2020-02-14 20:58:50","false","WrappedUnit support added",16,16,0
"mpusz/mp-units","d853a2937a769c4bbb169f258281475201f1ade4","mpusz","2021-10-15 15:44:49","false","refactor: `fmt` algorithms were overconstrained with `forward_iterator`",28,37,1
"mpusz/mp-units","77e11173bf30149542397c91d26235111cfc37e7","mpusz","2020-09-06 13:35:08","false","Unit tests compilation fixed on VS",16,23,0
"mpusz/mp-units","c6d2002ebd41556670280f93fc500349ff507254","mpusz","2019-11-06 22:45:45","false","More fmt unit tests added",14,13,0
"mpusz/mp-units","17e8558555966a0bb4383e49154589f164bcd812","mpusz","2023-02-09 17:59:11","false","refactor: operations on friends made hidden friends",43,52,1
"mpusz/mp-units","81febba3f7615c7bd0427164219d8754e55eae7c","mpusz","2020-02-19 10:01:17","false","Compiler Explorer link updated",17,17,0
"mpusz/mp-units","1ebf72e04127f0ef4a99ca6dcf315be0e3ddd094","mpusz","2021-09-09 07:13:10","false","build: linear algebra switched to wg21-linear_algebra/0.7.2",24,35,1
"mpusz/mp-units","b252da0fe1643e9b5080f0487da2ae25b6978921","mpusz","2022-08-03 11:10:59","false","test: `hypot` unit tests added",34,46,1
"mpusz/mp-units","8765a9c1e3c4a6c86b3b08481958e231087bf3ff","mpusz","2023-07-10 14:54:25","false","refactor(example): `StorageTank` example now properly uses `horizontal_area` quantity",12,57,1
"mpusz/mp-units","1585f96befcb4fdf86f99bb8e995237d70a80a57","mpusz","2023-07-10 14:55:44","false","docs: ""Basic Concepts"" TOC refactored",12,57,1
"mpusz/mp-units","03a22cba2aa794f70fc4b9c9a629f50628b2b594","mpusz","2019-07-18 21:24:24","false","upcasting renamed to downcasting",3,10,0
"mpusz/mp-units","605d00219a00cd3b6231f81a3f9b94f5195f6e10","mpusz","2020-03-17 13:04:23","false","""Library Directories Structure"" chapter added",15,18,0
"mpusz/mp-units","2a5066aa9ab4c88385bd614365bc0370465934fd","mpusz","2023-08-30 15:42:23","false","docs: `avg_speed` and `si_constants` examples added to docs",8,59,1
"mpusz/mp-units","c545328be780f867f6319a8e51cd409752449d31","mpusz","2021-04-08 10:41:23","false","docs: Added the comment about the reason of ignoring diagnostics in `experimental_angle`",32,30,1
"mpusz/mp-units","2d5278240726163a4a64f2a61e2718d34d8ff851","mpusz","2019-05-07 14:28:02","false","type_list moved from mp to units namespace",2,7,0
"mpusz/mp-units","92c575cb1de2c546fb8e53655c381f7e4427da96","mpusz","2020-09-14 06:34:03","false","build: Sphinx output disabled (only warnings and errors left)",14,23,0
"mpusz/mp-units","89d704f86763744e25e46256a9a202ebba33ff0d","mpusz","2021-09-09 08:20:53","false","ci: Setting CMake generator in Conan fixed for VS2019",24,35,1
"mpusz/mp-units","c26f4500e1a0a08b56fb442f5989cb6d6d2caf31","mpusz","2020-03-16 10:31:02","false","`E` and `O` format specifiers removed and `A` added",15,18,0
"mpusz/mp-units","a7f1817c9bbb12c6e6c6401c77ad9d07f0684b0d","mpusz","2022-05-09 11:59:56","false","feat: SI prefixes allowed for a `yard` unit as at least `kiloyard` is used in some domains",36,43,1
"mpusz/mp-units","322cde70b948e184c987dd3fa3eb2aef61b119f5","RalphSteinhagen","2021-08-02 20:15:54","false","added HEP specific units and definitions

in accordance with https://www.bipm.org/documents/20126/41483022/SI-Brochure-9.pdf#page=147

see also disccusion thread #292",25,34,1
"mpusz/mp-units","93e2daced8ee623018a5233e9dfdd53f84017814","Twon","2023-01-06 16:20:12","false","Environment variable acccess does not require env prefix",35,51,1
"mpusz/mp-units","8d8f73c0cf9e2d4e2f36b776540ab4859c63d3c3","JohelEGP","2021-09-14 14:42:43","false","refactor: update hacks for LLVM 14",24,35,1
"mpusz/mp-units","3063aebe5a73f71b6d01ecb582633494b1f0f22c","chiphogg","2022-01-08 19:21:13","false","Clean up pairwise_all() and strictly_increasing()",30,39,1
"mpusz/mp-units","4282bd0cc7da5be5932d2f3f3f4be6822d004892","mpusz","2019-05-08 17:25:09","false","Project version updated to 0.2.0",2,7,0
"mpusz/mp-units","eaf51c467c578e9ca7a0f6c60c1eb2f6d3e544e4","mpusz","2023-09-26 08:37:12","false","Merge branch 'master' of github.com:mpusz/mp-units",2,60,1
"mpusz/mp-units","9c6229302dfbf1fe69d75c67827b7a996acd6d93","mpusz","2019-11-16 17:27:31","false","Small code cleanup",17,14,0
"mpusz/mp-units","4092700cf93659a82337f6cbf152aa4899eaa92b","mpusz","2023-06-12 08:34:07","false","refactor: casts cleanup and improved",48,56,1
"mpusz/mp-units","33b6fa9f3f0bd053353ad8930e5cb47e78f264f7","mpusz","2019-08-08 20:31:22","false","Concepts removed from unit related utilities to increase compile-times",4,10,0
"mpusz/mp-units","533b957a232d6cd36a49765156ed908dc3920821","mpusz","2021-03-18 07:17:00","false","build: disabling of gcc warnings removed from Conan

Refers to #203",35,30,1
"mpusz/mp-units","ae752da50ee5547ba693821759008cd5035e5cbf","mpusz","2021-06-29 17:20:10","false","build: linear_algebra updated to 0.7.1",27,33,1
"mpusz/mp-units","6557647ce94f043e91930099b0dd2ab0381f04c2","mpusz","2022-08-02 10:57:09","false","ci: MSVC condition added to VS-specific branches",34,46,1
"mpusz/mp-units","6b7e5893d2cb66cf749d45216235cf0e9f5b1e29","kwikius","2020-03-19 11:43:12","false","examples, alternative namespaces : Part2 of  put alternative namespace definitions in local headers.
examples, clcpp_response,alternative_namespaces::clcpp_response : use fmt functions for showing precision of quantities
examples, alternative namespaces : combined the alternative namespace quantity typedefs in header files.
examples, alternative namespaces : add simple timer example",14,18,0
"mpusz/mp-units","a2376b9b53fe358f50e72138a48d38dc5b6bdf62","mpusz","2023-08-25 19:15:00","false","refactor: workaround to enable clang-16 compilation",9,59,1
"mpusz/mp-units","64edac75a738f8d79638708bf4e276f9349d08db","mpusz","2021-08-10 12:37:03","false","docs: ""Quantity References"" chapter fixed",25,34,1
"mpusz/mp-units","d6cf7936825dcf981d39be2ffb07b86495aef604","mpusz","2022-10-03 19:08:44","false","build: clang-12 is not supported in jammy",30,48,1
"mpusz/mp-units","66a24e47c79a33f0925e8882d15bf366492c957b","mpusz","2023-06-30 16:34:47","false","fix: `quantity_point` converting constructor fixed to account for different offsets of point origins",11,57,1
"mpusz/mp-units","f1caad7b749b1161392a3cb9a451692a9ef778da","mpusz","2022-11-05 17:45:02","false","fix: expression template simplification bug fixed",32,49,1
"mpusz/mp-units","78350ed94bd1e060c7c84f27da25d51d2f8ce35a","mpusz","2020-02-08 19:11:20","false","`same_as` remplaced with `is_same_v` in `if constexpr`",18,16,0
"mpusz/mp-units","5ec3211a3a38f0449d7ed700a2f842c27da4ef6c","mpusz","2022-12-19 19:37:51","false","refactor: natural units system refactored for V2",30,51,1
"mpusz/mp-units","f2b52e974379cf4842e402ed95fb7a75a92ce21d","mpusz","2021-03-17 12:46:59","false","Merge branch 'master' of github.com:mpusz/units",32,30,1
"mpusz/mp-units","7f9dcbf3d6131aecdeaa3b654f2bd761b819b972","mpusz","2021-09-02 20:24:20","false","docs: HEP system documentation added",24,35,1
"mpusz/mp-units","81a02837aa9b5d38fc19da3f382fb07e00cb6753","mpusz","2022-12-19 11:00:54","false","refactor: `quantity_kind` removed",30,51,1
"mpusz/mp-units","fa8fc078df64e9571accd7fdb9cbfb7616428573","mpusz","2023-06-15 14:38:59","false","fix: forgot to add hacks header to `ratio`",15,56,1
"mpusz/mp-units","9000a0206ec2c6d79260c9e0402e62e0c3bde493","mpusz","2019-05-08 17:13:23","false","Compile flags updated",2,7,0
"mpusz/mp-units","84df87dd2c48aff2adfae80d3debbba55246cfcb","mpusz","2023-10-06 21:52:58","true","Merge pull request #496 from mpusz/unit_compose_ext

feat: quantities can now be multiplied and divided by units",1,60,1
"mpusz/mp-units","be195a294c467208bab7ea58c70400ccd5918144","mpusz","2023-03-30 15:45:03","false","fix: workaround for template argument deduction for MSVC",44,54,1
"mpusz/mp-units","39b5d16b236a11be025880466e21a877567147fb","mpusz","2020-09-05 19:49:29","false","Merge branch 'master' of https://github.com/mpusz/units",16,23,0
"mpusz/mp-units","d5a0874bea51344d028a0481c408dca793e20924","mpusz","2023-09-29 04:30:28","false","fix: symbols of named dimensionless units with the ratio = 1 were not printed",2,60,1
"mpusz/mp-units","28277c56ed3ada0cfe96a051c7f80e4beac9e4dd","mpusz","2019-05-17 21:34:09","false","A small refactoring of a metabench cmake",2,8,0
"mpusz/mp-units","5a1fe99a8edc02daea950679cf202f092ce3c1ca","RalphSteinhagen","2021-06-29 15:33:17","false","removed superfluous `requires` statement in is_quantity<T>",27,33,1
"mpusz/mp-units","9988d9284cea127d1958f8ace2f987c931ad826f","RalphSteinhagen","2021-04-08 07:54:44","false","adding missing/required (?) '#defines' for compiler-explorer examples

N.B. The compiler explorer examples seem to miss to the following
```
#define UNITS_REFERENCES
#define UNITS_LITERALS
```
defines to execute and recompile slightly modified versions.",32,30,1
"mpusz/mp-units","f495ad9e756ffea6c267da84ce51d78a1b717953","chiphogg","2022-03-19 17:27:38","false","Replace `accumulate` with `reduce`

Perhaps this will also satisfy Apple's Clang 13?  Since `reduce` is
newer, it may be more likely to be `constexpr` compatible.",32,42,1
"mpusz/mp-units","f004854a9ef7c5b141954f5d61db4aa2162eb053","chiphogg","2022-06-15 21:44:27","false","Remove useful names to appease MSVC 14

Looks like another compiler bug, where it considers a formal parameter
to be ""unused"" if it isn't used in any `if constexpr` branch.",34,44,1
"mpusz/mp-units","6f791c7cc4c9f31cdc9718074a4a9f94904450cc","mpusz","2022-08-02 13:59:29","false","ci: Conan remote usage fixed",34,46,1
"mpusz/mp-units","335ebc9b7b42589112fe12e06c1458cb47632dad","mpusz","2023-10-01 04:20:42","false","style: whitespaces in FAQ fixed to make pre-commit happy",2,60,1
"mpusz/mp-units","b2423bfded1c028a8a57dbc8a8927cb75c50cfa3","mpusz","2023-09-30 03:40:24","false","feat: quantities can now be multiplied and divided by units",2,60,1
"mpusz/mp-units","7e09a5f810d47ff7513e36d8342dc2c28f52cba2","mpusz","2022-11-08 02:19:42","false","test: more static unit tests added",32,49,1
"mpusz/mp-units","54489a57b2ed9e9742c137c8260bf3a1b98f1bd3","mpusz","2022-05-11 20:56:58","false","refactor: missing constraints on a return type added

Implementation verification and interface documentation purposes",34,43,1
"mpusz/mp-units","4990274281f823ea8547707e1321a354630de697","mpusz","2019-05-08 13:17:28","false",".vs adde to .gitignore",2,7,0
"mpusz/mp-units","d70b95237ced414cea10357ee555a0936582cfc4","mpusz","2023-02-09 17:42:00","false","refactor: Quantity no longer can be constructed with a raw value

Resolves #434",43,52,1
"mpusz/mp-units","df7edd6377b90433f585dd9f2ad2371399b9370c","mpusz","2019-07-19 14:53:32","true","Merge pull request #4 from mkrupcale/fix-conan-install-doc

Fix conan-mpusz remote URL",4,10,0
"mpusz/mp-units","db64a3e6a19888f38626940733e959ca4d04a6fa","mpusz","2018-11-15 04:27:16","false","More constraints added for Dimension and Unit concepts",2,2,0
"mpusz/mp-units","810fc615b4b821f4a76e82d3668d8e12ecc883bc","mpusz","2019-04-07 10:38:36","false","Most of the environment variables moved from .travis.yml to build.py",2,6,0
"mpusz/mp-units","7ed09c1bb9653cd36e47c8415562474245519b37","mpusz","2020-09-05 11:06:09","true","Create CODE_OF_CONDUCT.md",16,23,0
"mpusz/mp-units","cdba0cdbc4d20254e907a002f131fe5160676c4d","mpusz","2021-02-26 13:10:36","false","refactor: `glide_computer` refactored and extended with geographical coordinates",30,29,1
"mpusz/mp-units","89a412593a7a7549e2946191da587daef883ab89","mpusz","2022-05-11 18:22:44","false","docs: `wg21-linear_algebra` Conan repo URL changed to `https://conan.io/center/wg21-linear_algebra`",34,43,1
"mpusz/mp-units","3d1f339115f54371b3b5bc9f6ce61ff6023a2030","mpusz","2022-11-08 20:37:41","false","refactor: `reference` now takes NTTPs rather then types

Even though it makes error logs a bit more obscure it simplifies coding a lot.",32,49,1
"mpusz/mp-units","10f8254cc8f72a9e240dd628cdb77ad75b068155","mpusz","2022-05-13 07:56:58","false","style: `si.h` includes order fixed",33,43,1
"mpusz/mp-units","6d9cb8197fb9124be82a1eecf36f680bc27258f1","mpusz","2019-11-12 15:55:11","false","fmt fill and allign support added",12,13,0
"mpusz/mp-units","603bc36efbc3afa77745ec6824ee7e8c4afd9b0b","mpusz","2021-04-02 16:47:17","false","docs: Systems documentation updated",33,30,1
"mpusz/mp-units","2ab233610f6c41cbbcbcd4a351e19aa10cf5b450","mpusz","2019-12-17 21:26:34","false","physical::DimensionOf concept updated",17,15,0
"mpusz/mp-units","b50df229019daac0ce638dd5f0dbb366dd8f59ee","mpusz","2021-04-02 17:31:58","false","refactor: IWYU",33,30,1
"mpusz/mp-units","74ec93bda3a807f35d0b9d3a76fc5b1992db3f63","mpusz","2021-09-09 07:05:19","false","build: Required Conan version bumped to 1.40",24,35,1
"mpusz/mp-units","7dd5580afb7ec0476f0ecd4cbaf8341216970319","mpusz","2023-02-03 14:19:25","false","fix: `value_cast` compilation fixed",41,52,1
"mpusz/mp-units","5082aaaf7024344c04179cdf37b995b573c69450","mpusz","2019-10-15 17:05:40","false","'todo' -> 'TODO' refactoring",13,13,0
"mpusz/mp-units","b894ee6558dad30e015ba73ba866a86e164c9ec9","mpusz","2021-05-10 16:03:47","false","refactor: :boom: got rid of a `noble_derived_unit`

Resolves #280",29,31,1
"mpusz/mp-units","4f7c944022fee5c6e937623527beb43e07d98eda","mpusz","2021-03-19 22:20:32","false","docs: `quantity_kind.rst` fixed and included in TOC",32,30,1
"mpusz/mp-units","813197021fb9551aee8ed23b5a5de9747ab20b8d","mpusz","2021-04-15 12:05:36","false","refactor: `measurement` example moved to a root examples directory",32,30,1
"mpusz/mp-units","8b15826c654face1b283e9921fda942b174d0667","mpusz","2020-10-08 06:54:30","false","refactor: Small cleanup after @johelegp code review",17,24,0
"mpusz/mp-units","a8ca425e2d4b7b66b88d3961f06f0f1634d7b285","mikeford1","2020-05-04 14:34:57","false","Added absolute functions (abs, fabs) and epsilon.",15,19,0
"mpusz/mp-units","c97a438807ada06041bae8e3515bbebca531ffa4","mikeford1","2020-05-31 11:32:14","false","playing with named derived units to allow knots to be deduced from
nautical miles & hours but be called knot instead of mi(naut) / h",17,20,0
"mpusz/mp-units","a5c7934e0e0a3fb125b6349af536a8aef678dc5b","mpusz","2022-10-18 19:24:09","false","refactor: units nearly done",30,49,1
"mpusz/mp-units","fa53d854ca78245ae30a2e1d67105c7b7d6d08a9","mpusz","2019-08-06 14:39:52","false","Bintray badge fixed in README",4,10,0
"mpusz/mp-units","554323d3a63b75c8809692842542a3ceba112ac6","mpusz","2021-04-16 12:41:05","false","refactor: conversions part of the `custom_systems` refactored to be more explicit",32,31,1
"mpusz/mp-units","cfcf26c3a758f0a6f7c1679a8d53824e01ce7685","mpusz","2020-12-17 22:06:52","false","ci: CMake test package workflow added",19,27,1
"mpusz/mp-units","06e4548dc9a5f2b30828890468d75f88a7f59995","mpusz","2023-09-29 08:08:01","false","fix: clang compilation of `inverse` fixed",2,60,1
"mpusz/mp-units","e9db800193e6a32ff91e399d20de4d1427d03893","mpusz","2021-01-04 11:37:06","false","test: Got rid of `<>` for `min_expl`",21,27,1
"mpusz/mp-units","653a090a8a1f61c7e4fcb71220b3e12f85300383","mpusz","2020-08-18 12:27:33","true","unknown_dimension simplified",15,23,0
"mpusz/mp-units","6a1e600f65b8be1287ef6c538ee317bc74c123ae","mpusz","2023-09-13 17:57:05","false","feat: `quantity` compound assignment now preserves the value category",3,59,1
"mpusz/mp-units","9f8973e6f2badf3b5fa95049dab47adda7b7233b","mpusz","2023-06-08 17:09:20","false","refactor: `parsec` definition refactored",48,56,1
"mpusz/mp-units","c266db9c24a061844f927bba4d33b40e449eb5ef","mpusz","2022-12-16 17:16:41","false","fix: expression template two power simplification fixed",30,51,1
"mpusz/mp-units","209f193086cff97de0040d8bee3470671aa8901b","mpusz","2021-03-15 11:12:41","false","fix: `exalitre` fixed

Resolves #252",33,29,1
"mpusz/mp-units","804d4e1cd4f703cd54beb8119063876539f566ff","mpusz","2022-08-01 16:29:03","false","build(conan): `cmake_layout` support added",34,46,1
"mpusz/mp-units","48265f0d4eee99c76de13f8d3ddaa4a4c2b8ac86","mpusz","2023-01-04 19:40:12","false","ci: gcc-12 support added",35,51,1
"mpusz/mp-units","d781322a8e39475fd2aff433262f0b4a2ee1beed","mpusz","2019-04-09 11:33:59","false","CONAN_RUN_TESTS support added",2,6,0
"mpusz/mp-units","38fb9911a9714fbdf6dd963e6ed287c5720d6086","mpusz","2022-05-24 10:48:07","false","refactor: :boom: ! "" ⋅ "" replaced with ""⋅"" in derived unit symbols",34,44,1
"mpusz/mp-units","411f7a0bb7107f47badbf5f36c0be4caafa967e1","mpusz","2022-11-10 08:50:19","false","refactor: `magnitude_text()` moved to the magnitude header file",32,49,1
"mpusz/mp-units","2b3ae64ba1f1b043b719ed981b6b08eb5ba4f3d6","mpusz","2021-09-30 19:58:51","false","chore: VSCode initial settings added for gitpod.io needs",26,36,1
"mpusz/mp-units","82263d856277b1d2e9ea634f417f23628511792e","mpusz","2019-05-08 03:43:40","false","Hacked std::type_identity removed",2,7,0
"mpusz/mp-units","35320fc0567d7baeb97ba966f468563f078fb213","mpusz","2020-03-26 16:09:57","false","Release names made bold in CHANGELOG",13,18,0
"mpusz/mp-units","f46e0af79d9a88199d704102bd3e38fd33f4da81","mpusz","2020-05-13 13:36:50","false","Minor cleanup in directories chapter",16,19,0
"mpusz/mp-units","ad3935cbfb850dd72dc9c0c2a50fc709c7a5f036","mpusz","2023-06-08 17:10:02","false","test: Hubble constant unit symbol test added",48,56,1
"mpusz/mp-units","caeae6832674e6ce1b07027d68de94a1fa28af08","yasamoka","2020-05-27 21:04:40","false","removed redundant explicit keyword from default constructors",16,20,0
"mpusz/mp-units","f6d9a1cbda20f1167b9e23fbbb907aeabd38babc","yasamoka","2020-03-24 20:18:54","false","removed c_str(), size(), operator<< abstractions from basic_symbol_text",13,18,0
"mpusz/mp-units","8076ecf50f8d133a66dfccdaf6d0cc040e4199bc","chiphogg","2022-08-10 01:14:00","false","Update CMakeLists",35,46,1
"mpusz/mp-units","9593ca04d7e789917fa95fa31a90e33046ea279f","chiphogg","2022-01-29 03:47:16","false","Refer to class instead",30,40,1
"mpusz/mp-units","a91e234c90c4415e9ba5b69b2aaa3df6f4228f6d","mpusz","2021-03-05 11:14:42","false","build: `get_version()` replaced with `set_version()`",32,29,1
"mpusz/mp-units","1f80c57fad20040cb6b5366936c8df072198ac9f","mpusz","2021-04-06 14:36:52","false","refactor: `hello_units` fixed to provide `literals` and `references` preprocessor defines explicitly",32,30,1
"mpusz/mp-units","a0aa4502679dc68049db7111383c6548a8597f54","mpusz","2021-02-15 19:09:35","false","build: `downcast_mode` verifications added to Conan unit tests

Only `auto` and `on` for now as `off` does not work",26,29,1
"mpusz/mp-units","bc1901f4f001cde3efb238f147815467b75a0a46","mpusz","2019-12-11 07:07:13","false","Text formatting enabled + directory tree refactoring",18,14,0
"mpusz/mp-units","f37aa8bbd008cd1370365a14285aa2f7bb0d8363","mpusz","2023-08-25 18:28:24","false","test: unused origin definition removed from `concepts_test.cpp`",9,59,1
"mpusz/mp-units","a0beeb48b104542de1fd4700d31f0cbf6441596b","mpusz","2020-09-10 19:17:43","false","feat: custom systems examples added",15,23,0
"mpusz/mp-units","29e82786138374b2289ba968c316a0ef3dbf4399","mpusz","2019-09-15 17:09:10","false","type_list metabench tests updated",4,11,0
"mpusz/mp-units","45f7b4f19f904d8db812bc78e276f2155a4c73e9","mpusz","2018-11-17 11:38:45","false","static_assert replaced with a concept constraint in unit",2,2,0
"mpusz/mp-units","c003f5d604dac6c06238be738409459e535f32ef","mpusz","2022-12-01 19:38:11","false","ci: GitHub Actions updated",33,50,1
"mpusz/mp-units","4e756f52d9004bdc184560d0fcdf13898c1ed39e","mpusz","2023-06-08 19:29:16","false","test: natural system tests added",48,56,1
"mpusz/mp-units","488e9be61f2648ca75304b49c0de8bd8bd1f7e50","mpusz","2019-11-12 21:18:04","false","CMake install destinations updated",16,13,0
"mpusz/mp-units","b78b53e75727b5cba70543caef2371c57395af8d","mpusz","2023-01-04 14:32:13","false","build(example): `custom_systems` example removed as not relevant anymore",35,51,1
"mpusz/mp-units","f1e46dd9e7905bbd1e645f2be30aa03c92dd485e","mpusz","2020-09-13 14:41:56","false","docs: changelog updated",14,23,0
"mpusz/mp-units","7a833e496efd1d96dafbe59aa5c874ad004d8eeb","mpusz","2021-09-08 07:21:07","false","build: `conanfile.py` cleanup",24,35,1
"mpusz/mp-units","44a8d0ad1ec920751928a60c82fc580dc2515537","mpusz","2021-11-07 08:42:15","false","build: forgot to commit changes in one CMake file :-(",30,37,1
"mpusz/mp-units","e622ecb35aaa12fd3acffe7da84899fe1f3e190d","mpusz","2019-12-23 12:19:34","false","Warning and other compilation flags cleanup",16,15,0
"mpusz/mp-units","cc68172de734fb9e3f24612eca0f89e1464fb966","mpusz","2020-09-14 18:41:57","false","fix: invalid tests removed from custom_rep_min_req_test",16,23,0
"mpusz/mp-units","537aca2bc0185292bef3ee4dab03c1db6ceb39c6","tobylorenz","2023-05-24 13:28:54","false","Add ""inch of mercury"" pressure unit as US Custom Unit

Signed-off-by: Tobias Lorenz <tobias.lorenz@gmx.net>",47,56,1
"mpusz/mp-units","00cb2cd6c33978ebfccf0d71584de54aac495d64","mpusz","2020-09-07 09:11:12","false","refactor: cast_ratio now uses quantity_ratio",17,23,0
"mpusz/mp-units","5c1b1e0ff48245b1daee27009e608bed5d22493b","mpusz","2023-06-16 14:00:41","false","test: `QUANTITY_SPEC_` macro fixed",14,56,1
"mpusz/mp-units","283e9d81a317351cc16a13cbe4a13eabe979fbd8","kwikius","2020-01-10 02:03:27","false","Split the various non-si length units into their own namespaces.
new namespaces are
international ( combination of us and imperial + Canada etc)
iau  (https://www.iau.org/
imperial ( old imperial units)
typographical ( for sizes of printing fonts etc)

These namespace are based on some research , mainly on wikipedia.
Look in src/include/units/physical/si/length.h to see links to see the references to documentation justifying the change.

Unfortunately there are 3 foot units for example, an old imperial version, an old us version and an international version, which is more recent and attempts to unify the two previous ones. All versions have slight changes in value, so I opted to use the international version
The main change in the layout is that inch,foot and yard have been moved from us to international.

With this modification, I also modified the physical/us/area.hpp, volume.hpp and volume.hpp headers to refer to the international units.
This may not be correct, but if the modified us::foot (rather than international foot is used as a basis for these units, then
there is a ratio integer overflow during compilation, probably due to taking 3rd power of a ratio. After this commit. I will try to show that on another branch.",16,15,0
"mpusz/mp-units","47c1930721c883fa532e73958fed129fcf1e4faa","mpusz","2020-09-11 19:23:46","false","refactor: derived_from concepts refactored",14,23,0
"mpusz/mp-units","159e2c1c0205cdc288c623ee075c7979f03ca630","mpusz","2019-12-29 16:19:55","false","`ratio_text` improved to omit `den == 1` for `exp != 0`",16,15,0
"mpusz/mp-units","991bb2b6ebe06c9d7bd513eedb2f7b601d1f16f3","mpusz","2021-06-08 16:00:53","false","build: `PROJECT_SOURCE_DIR` explicitly set as the `CCACHE_BASEDIR`",25,32,1
"mpusz/mp-units","8b52f46bed969abf8de3980f849b61e4a0d9d66d","mpusz","2022-05-09 12:01:08","false","fix: `fps` can now coexist with `international` system

Resolves #347",36,43,1
"mpusz/mp-units","563b358d5e35c9650f6eb5aee42f8638d325fe49","mpusz","2020-09-08 09:02:16","false","feat!: :boom: dimensionless quantities refactored

Dimensionless quantities are now represented by quantity types rather
than by plain representation types. Only dimensionless quantities with
`unitless` unit are implicitly convertible from representation types.

`units::exp()` now is a function doing std::exp() on a representation
type (previous `units::exp` class template was renamed to
`units::exponent`).

BREAKING_CHANGE: gcc-9.3 support removed
BREAKING_CHANGE: `exp` and `Exp` renamed to `exponent` and `Exponent`
Resolves #27
Resolves #42",17,23,0
"mpusz/mp-units","60cec6020bf090d9ed0dbdcb72c3836387423af3","mpusz","2022-12-01 19:15:52","false","fix: MSVC-193 compilation issue workaround

Closes #403",34,50,1
"mpusz/mp-units","b1bd4cab2d4fa88b2edfc46f441640f00c1ec58d","mpusz","2021-09-20 13:01:58","false","feat: `std::format` support for compliant compilers added",26,36,1
"mpusz/mp-units","6030b2e4e444ca167d8478c1704964b712c45535","mpusz","2023-02-01 20:03:56","false","Merge branch 'master' of github.com:mpusz/units",39,52,1
"mpusz/mp-units","0a7aa690b9ee6af253350690d3e97027c651e6b8","mpusz","2019-07-24 09:33:15","false","Small documentation update

- default value for quantity representation",4,10,0
"mpusz/mp-units","13f03bfe704083fb1e397f515fba08fd730823be","mpusz","2022-05-13 12:31:13","false","feat: `luminous_flux` support added",33,43,1
"mpusz/mp-units","8ab3af398707ba2e709a2d678cf5e6d9703dd47e","mpusz","2020-12-27 10:52:02","false","ci: GCC 10.1.0 magically dissapeared from the GitHub actions build

The last time I saw GCC 10.1.0 was here: https://github.com/mpusz/units/runs/1602533362?check_suite_focus=true#step:7:231.
The following builds (i.e. https://github.com/mpusz/units/runs/1602670143?check_suite_focus=true#step:7:231) were using GCC 10.2.0 and I was not able to revert the behavior to have GCC 10.1.0 on board again.",20,27,1
"mpusz/mp-units","544ecfce0a649d003bb2dab8616a09a57c0c1d91","mpusz","2019-11-02 12:55:23","false","Description of dimension extended",14,13,0
"mpusz/mp-units","82e808855f6dba66e1966d23482d05704b011b85","mpusz","2022-08-02 07:42:31","false","ci: `ci-test-package-cmake.yml` updated to the `ci-conan.yml` state",34,46,1
"mpusz/mp-units","ebc5757835764b78c9b4e9804ac0c95f6237730d","mpusz","2023-10-25 19:39:09","false","docs: ""Basic Concepts"" and ""Interface Introduction"" chapters updated",2,61,1
"mpusz/mp-units","f1c2c74ab068b3ed9c2113ef0fda5592b1353130","mpusz","2023-08-30 09:30:35","false","refactor: `quantity::value()` renamed to `quantity::numerical_value()`

According to https://jcgm.bipm.org/vim/en/1.19.html ""quantity value"" also contains a unit. According to https://jcgm.bipm.org/vim/en/1.20.html ""numerical value"" is the correct term for just a number.

Resolves #423",9,59,1
"mpusz/mp-units","a69a027cac5a3a7963a7ba51eaf884c4623f8890","mpusz","2023-05-11 16:01:30","false","docs: usage updated for Conan 2.0",48,55,1
"mpusz/mp-units","d325a0b5b505f6f5af09f8086bd4f2e000b29602","mpusz","2021-09-20 15:04:35","false","fix: clang compilation issues fixed",26,36,1
"mpusz/mp-units","6d39459cbcfe238ea679af8baec11563783e0804","mpusz","2021-05-03 17:44:50","false","perf: rvalue references support added for constructors and getters

Resolves #275",33,31,1
"mpusz/mp-units","9666c1a0651e90c2764b29a2bc4009ed658a9bfc","mpusz","2023-04-07 20:54:47","false","feat(example): `spherical_distance()` now uses quantity-based trigonometric functions",47,54,1
"mpusz/mp-units","8cc784aa286d671ccc43233359c3c3d30f1739c6","mpusz","2020-09-08 16:40:46","false","docs: missing namespaces added",15,23,0
"mpusz/mp-units","9e42e1faca359cd6acf6e7a3ff951674ca364657","mpusz","2023-07-07 07:36:08","false","feat: `quantity_point` can now be constructed faster from another one if they share the same `point_origin`",11,57,1
"mpusz/mp-units","63a88e929b2a34dd9232c2c9d6a4bff672075b7c","mpusz","2019-04-06 21:49:33","false","CONAN_REMOTES variable added for Travis",2,6,0
"mpusz/mp-units","ecb158eaa722759a966f9b24a61f43b1ab9df65e","mpusz","2020-03-26 15:37:47","false","Concepts enabled for customization points",13,18,0
"mpusz/mp-units","8a124ffbf0592542ff255e8873d9dc562b0d4644","mpusz","2023-06-12 09:12:38","false","test: `custom_rep_test_min_impl` updated for V2",48,56,1
"mpusz/mp-units","a6e4851efe338cff05ff6782dcbc95237547a5ca","mpusz","2023-08-01 10:00:35","false","test: more binary operators tests added for `quantity`",13,58,1
"mpusz/mp-units","daf4657375bd2b664d7f804695edaf251822bcfb","mpusz","2023-09-24 18:06:07","false","docs: library versions bumped in the docs",2,60,1
"mpusz/mp-units","a9db8a1538415b5890195d66513b04d93d6b0dd3","mpusz","2022-12-19 11:02:54","false","fix: mechanics quantity specifications fixed",30,51,1
"mpusz/mp-units","6780978be640632de6b7e7bad799850ef08ca4e6","mpusz","2019-05-18 19:21:46","false","ratio_type_constexpr refactored to provide safe_multiply",2,8,0
"mpusz/mp-units","00ed8ad83aedd917b3cf515e1f8759691cfa036e","mpusz","2019-09-26 21:08:33","false","Missing CMake change added to fix the compilation",6,12,0
"mpusz/mp-units","25f986d32cd3f7863a67bca547a2639457d0c343","mpusz","2023-10-04 16:00:17","false","fix: MSVC-related fixes and workarounds",1,60,1
"mpusz/mp-units","e39ef2f85025d440c6fa4c257e4e733f20f78919","mpusz","2021-04-09 10:52:15","false","fix: `reference` redefined in terms of `dimension` and `unit`",32,30,1
"mpusz/mp-units","9f3ea544d5247e77c48375515c221cee655a4c0c","mpusz","2023-03-30 15:49:02","false","fix: `standard_gravity_unit` now prints a correct unicode symbol",44,54,1
"mpusz/mp-units","7b0730cf172176117c15737977bf535c8b2fdaa5","mpusz","2021-05-08 16:28:49","false","build: ccache support added",33,31,1
"mpusz/mp-units","7b36f54872df82d3081ab9882e0208f0083e98a4","mpusz","2021-09-30 20:02:50","false","fix: Invalid paths in .gitpod.yml fixed",26,36,1
"mpusz/mp-units","bf8aad46ecc9e97755bc4b463346ee13975b31da","mpusz","2022-10-03 19:18:30","false","build: gitpod conan profile for clang14 fixed",30,48,1
"mpusz/mp-units","2229012f9306ca9ed165f0a817a81463f173f8d7","mpusz","2021-03-05 11:12:01","false","build: Additional Conan settings added",32,29,1
"mpusz/mp-units","ed15ef772984cae2582edb26f83cf92171c16dbb","mpusz","2020-09-07 11:17:06","false","docs: unintended links replaced with code snippets (I have this part of RST)",17,23,0
"mpusz/mp-units","22e0089c778ff13718b390357b71dad1deed33c1","mpusz","2019-07-24 11:28:07","false","Conan test package build fixed",4,10,0
"mpusz/mp-units","952b19c2ed2519fb916235e73daacbf704f19d9e","mpusz","2019-09-28 17:10:06","false","`bool` removed from concepts definitions as gcc-9.1 supports this syntax already",11,12,0
"mpusz/mp-units","cc3314903d596b4c5ca18636133b53ee44c79e79","mpusz","2023-04-21 13:41:33","false","feat: `quantity_spec` logic implemented",46,55,1
"mpusz/mp-units","290161ab07eda99fb65d4eeb88e84424135ab0b8","mpusz","2023-08-03 17:05:03","false","docs: `subtraction` of two points to get an absolute `quantity` case added",14,58,1
"mpusz/mp-units","1b9d6802752b93920e6cbbb4d18cf518e5ed3898","mpusz","2022-03-10 20:23:00","true","Merge pull request #335 from JohelEGP/non_static_constexpr_globals

refactor: drop `static` from `constexpr` globals",31,41,1
"mpusz/mp-units","c0197aec7d5032fec5827c04f87247d58dabcfae","mpusz","2020-12-28 16:40:54","false","docs: CHANGELOG updated",17,27,1
"mpusz/mp-units","d9b227ad30ebaa7b1e15af97cb77186504aa285b","mpusz","2022-12-04 14:04:37","false","feat: units now allow inheritance

For example to define `cgs::second` based on `si::second`",33,50,1
"mpusz/mp-units","d452ec7df542260cbde8b46a059d2cf59efff478","mpusz","2020-08-17 19:33:23","false","gsl header replaced with gsl_assert",18,22,0
"mpusz/mp-units","0ebf85b9db431360746f67b8a8c46cc3a572e83a","mpusz","2022-08-01 09:59:00","false","fix: `unknown_coherent_unit` fixed",34,46,1
"mpusz/mp-units","f24f87302f0e4939c8cd88118faf28189f52c8c4","mpusz","2022-08-02 06:51:52","false","ci: CMake preset name fixed in documentation script",34,46,1
"mpusz/mp-units","6596c15238911e9156728befb2c5824d2d39d680","mpusz","2019-12-14 20:16:15","false","scaled_unit template parameters order fixed (sorry Oliver)",20,15,0
"mpusz/mp-units","27d61805792667f86bf437ba8b2d3d531ab9d163","mpusz","2023-05-12 06:31:10","false","ci: ""build_all"" disabled in CMake Test Package CI",48,55,1
"mpusz/mp-units","b96be72457118863cc41c82b941cdec6fb0e5ea4","mpusz","2023-10-15 07:39:18","false","feat: :boom: `quantity_point` does not provide `zero()` anymore",2,61,1
"mpusz/mp-units","d8f646a1e4dc4b34f71ae7e808a86cbff7d5ab13","mpusz","2023-08-23 13:43:19","false","docs: ""The Affine Space"" chapter updated with the latest changes",13,59,1
"mpusz/mp-units","f4a8a1358ebc342363208e3e812a9e46ea127afd","mpusz","2021-05-07 18:46:40","false","build: iwyu CMake script refactored",33,31,1
"mpusz/mp-units","3c56375e85db0f8719cbc118080bbef0a5a73780","mpusz","2021-04-16 11:01:12","false","refactor: Example updated to benefit from USCS system",32,31,1
"mpusz/mp-units","9fd3d5dc3f51a060533fc3614bc519505089c8ce","mpusz","2022-11-08 23:21:09","false","refactor: bad interface fixed",32,49,1
"mpusz/mp-units","a0a18f35acb27d2abedafc62ca88a7075ff97294","mpusz","2020-02-23 16:40:01","false","Momentum support added",14,17,0
"mpusz/mp-units","d832b3a462d25f27b70b1f94aa49a22515703444","mpusz","2020-02-12 08:55:28","false","basic_fixed_string op== improved",16,16,0
"mpusz/mp-units","0c09871bca37acb130a048bc5c5b2c620a1fac65","JohelEGP","2021-03-18 18:19:16","false","fix: do not forward declare reference's interface on MSVC",35,30,1
"mpusz/mp-units","c61b8643d709924d4ac56b241be0e572ac587f20","JohelEGP","2021-03-18 21:00:36","false","refactor(test): rename references.cpp to references_test.cpp

Addresses https://github.com/mpusz/units/pull/261#discussion_r597217632.",35,30,1
"mpusz/mp-units","d4492524d1a5db146f82d578227634178211a27e","oschonrock","2020-02-23 15:36:07","false","use assert. static can't work",13,17,0
"mpusz/mp-units","6f8bddc8324a3c385a49aa02d0ea26cc5488cba1","yasamoka","2020-04-17 03:20:13","false","added more prefixed SI units; added alias_unit and prefixed_alias_unit types",13,19,0
"mpusz/mp-units","1dca9fa890cabdab37b1020d4eb5557e4bf3b7cd","mpusz","2019-04-10 16:12:24","false","Obtaining library version from a CMake file added",2,6,0
"mpusz/mp-units","55456e5d42efd0c0e73cadbc22d8a2e88f906df7","mpusz","2021-09-20 13:43:28","false","fix: truncating conversion issues in fmt fixed",26,36,1
"mpusz/mp-units","f4f12086f78462b15a01a38710d5eb33ed731c8c","mpusz","2020-03-10 08:38:30","false","Travis CI deploy hack",15,17,0
"mpusz/mp-units","b08f626af2f7b7e32152391e50dae08bf3aca4b5","mpusz","2021-10-14 12:29:29","false","chore: ""C++ TestMate"" extension added to gitpod",27,37,1
"mpusz/mp-units","5e365f190599691e6253a675fc44e8a9a0455153","chiphogg","2022-04-09 17:56:01","false","Delete obsolete test case",35,42,1
"mpusz/mp-units","791b155a22d05839d75a383fba224adbb07091d5","mpusz","2021-09-02 19:41:54","false","Merge branch 'master' of git://github.com/RalphSteinhagen/units into RalphSteinhagen-master",24,35,1
"mpusz/mp-units","91bcfedf1ecac891fbe77c220223ec8394a04ae3","mpusz","2019-11-04 06:37:50","false","Deduced units symbols refactoring started",14,13,0
"mpusz/mp-units","71981172c332462483d47ba146adfe85a4f25841","mpusz","2023-08-23 08:41:37","false","feat: `quantity_point` does not take a default origin anymore + `common_qs` logic removed from the binary operators",13,59,1
"mpusz/mp-units","77197767119204e7b7cfdcef5a34d2e24e16d204","mpusz","2022-09-01 08:48:34","false","feat: `gradian` support added",30,47,1
"mpusz/mp-units","9fbe7003fc0cb2bca887287d1145c3c9d16c42d2","mpusz","2020-12-17 22:48:15","false","ci: test_pacakge workflow and job renamed",19,27,1
"mpusz/mp-units","021df4a46f0c992426eefb1d133c2ca613907c6b","mpusz","2019-09-18 21:32:22","false","dimension_sqrt and dimension_pow support added",4,12,0
"mpusz/mp-units","ddd998cb5315d81a3b9c5c730bec0d2504757aea","mpusz","2019-11-02 12:55:55","false","type_list_sort_impl cleanup",14,13,0
"mpusz/mp-units","a19c97fe85110c565d7daaad5da213cdbdaa24de","mpusz","2020-09-12 19:20:17","false","refactor: small downcasting refactoring",14,23,0
"mpusz/mp-units","85b6dd0e3857e2e1500531a601ed5e78aad471c7","mpusz","2023-08-24 17:32:14","false","fix: not enough changes were commited in one of the previous commits",9,59,1
"mpusz/mp-units","092e1569a735b790ec51bf833374d8c60edfdea1","mpusz","2023-08-01 10:36:27","false","feat: `heat` is now a quantity of `energy` kind

ISO 8000-1 says: ""The quantities heat, kinetic energy, and potential energy are generally considered to be quantities of the same kind, namely, of the kind of quantity called energy.""",13,58,1
"mpusz/mp-units","75fc3a038466963966dfd1078d3d3d25cc8a5447","mpusz","2023-09-13 09:56:06","false","style: more whitespace issues caused by rebase fixed",3,59,1
"mpusz/mp-units","978c6297f024e7064233c275bf552644ff8d728d","mpusz","2020-09-11 19:24:22","false","fix: forgot to comit one file with changes",14,23,0
"mpusz/mp-units","3651e199bfba95b5e21e89df802488a4d079a62c","mpusz","2022-02-08 09:40:31","true","Merge pull request #331 from JohelEGP/llvm15

refactor: update hacks for LLVM 15",30,40,1
"mpusz/mp-units","bc2a3572ea4ccf6f7aea33d1c76741690807ad1e","mpusz","2023-08-03 11:17:51","false","docs: clarification and cleanup applied to ""The Affine Space"" chapter",14,58,1
"mpusz/mp-units","0ce18dc3c7c6200eaea645de0dbfe06fc327a52b","mpusz","2021-11-15 15:28:26","false","feat: `std::format` usage enabled for VS2022",31,38,1
"mpusz/mp-units","5fc4820102aa3d658c84a160bdd0d83eb9ddb247","mpusz","2022-08-02 13:44:40","false","ci: `-b outdated` fixed",34,46,1
"mpusz/mp-units","0513d4f74bbfca38cef0fdb4f1c94caf6c44e923","mpusz","2021-05-08 16:45:41","false","ci: ccache-action added to ci-conan",33,31,1
"mpusz/mp-units","2e1ce83024057b3938379116c0023f78ba0053cf","mpusz","2019-09-26 20:30:57","false","Downcasting facility refactored so the user does not have to write the boilerplate code anymore",4,12,0
"mpusz/mp-units","1fbaeb4ffc39fb44de638a78141fbed7caf63e26","mpusz","2022-11-30 09:13:04","false","feat: `magnitude` now uses `treat_as_floating_point`",34,50,1
"mpusz/mp-units","f8837de0cb2a200fa13e09b2177f52891fe5bf5a","mpusz","2022-05-06 16:36:27","false","ci: Conan 1.48 does not set `CMAKE_BUILD_TYPE` in the `conan_toolchain.cmake` anymore",36,43,1
"mpusz/mp-units","1ff048a70ee76db9732f6fc3158f44d54c06fa0b","mpusz","2022-12-22 14:56:14","false","refactor: unused `reference` operator removed",33,51,1
"mpusz/mp-units","75940488506df9560dd71ea86448a2e271f02c79","mpusz","2023-08-23 09:42:43","false","fix: `relative_point_origin::quantity_spec` setting fixed",13,59,1
"mpusz/mp-units","32391866be33ef3ea60019f017fc0e6f0945e96f","mpusz","2020-12-28 17:40:58","false","refactor: Limited the `equivalent` trait usage",17,27,1
"mpusz/mp-units","8193065feb413204c68b0790ab6a5f226e877256","mpusz","2021-02-17 15:45:31","false","Merge branch 'master' of github.com:mpusz/units",26,29,1
"mpusz/mp-units","b65a5bf6b23fe17b35ddbce65f613fa709519ca9","mpusz","2020-05-20 20:12:37","false","quantity_of_matrix_tests uncommented thanks to a fix in the LA library",16,20,0
"mpusz/mp-units","8100b6c13d864f2896cf776c150cb0f920e719d7","mpusz","2021-01-28 17:53:00","false","build: `scope` parameter added to `set_warnings()`",27,28,1
"mpusz/mp-units","1bb484e1c41367bd015dcc59bcaff5e6c6e93c2f","mpusz","2020-03-17 14:26:53","false","""Grammar"" chapter refactored and ""Default formatting"" chapter added",15,18,0
"mpusz/mp-units","48d11cce8a866f883475cd9628402483c3cdf0dd","mpusz","2023-02-01 20:03:44","false","docs: Compiler Explorer examples compilation fixed",39,52,1
"mpusz/mp-units","a02a375dc8564be076d7daec90c48ac58c3bec46","mpusz","2020-09-06 08:30:05","false","Merge branch 'master' of github.com:mpusz/units",16,23,0
"mpusz/mp-units","b889c81cb929ee3bfbbe10c7d9c613ce3420ae89","mpusz","2019-10-15 09:32:59","false","Short name added to derived unit definition",13,13,0
"mpusz/mp-units","4a83c66bf41f42b3a2668cca210c21a40916ae29","mpusz","2023-09-25 17:49:35","false","refactor: clang compile-time errors improved by explicit resolving a type of an using alias",2,60,1
"mpusz/mp-units","f18b00252bdeee399ced70ca29218d5ba9a4dc9d","mpusz","2019-05-18 10:59:37","false","Metabench chart renamed",2,8,0
"mpusz/mp-units","f56e3bc0da713b08ba94dc836d2e6bdec90f794c","mpusz","2022-03-18 11:35:34","true","Merge pull request #339 from mpusz/clang-format

style: all files refromatted with clang-format",31,42,1
"mpusz/mp-units","d5f9c6b9889732f2c913c70c2e343a32f4b66f4c","mpusz","2021-11-08 17:37:44","false","Merge branch 'master' of github.com:mpusz/units",30,37,1
"mpusz/mp-units","ec4c283cc0bd0a2f272939d0b50bb6652c268104","mpusz","2021-03-19 10:08:50","false","build: range-v3 dependency added to CMake config file for clang + libc++",32,30,1
"mpusz/mp-units","dc3e44bdf5df73baeda18eec7513131166a869e5","mpusz","2023-05-11 18:50:51","false","ci: documentation generation disabled in CMake Test Package CI",48,55,1
"mpusz/mp-units","fe335b656a6c8107c6eedaff7685a34678595e38","mpusz","2021-02-18 19:15:52","false","build: Audit contracts checking enabled for a Debug build",26,29,1
"mpusz/mp-units","a63b5ab1113f007ccc4f08d772f9f8e63eec1eb3","mpusz","2019-05-10 01:54:18","false","std::ratio<1> set as a default for unit",2,7,0
"mpusz/mp-units","c6f35b02319a6fc03d837d0e656463440e114a98","mpusz","2022-03-18 07:19:40","true","Update src/core/include/units/quantity_cast.h

Co-authored-by: Johel Ernesto Guerrero Peña <johelegp@gmail.com>",31,42,1
"mpusz/mp-units","9915ae22b5d6c506c7d2b942c205131fe07fdcf6","mpusz","2022-10-25 17:31:41","false","fix: `__cpp_explicit_this_parameter` spelling fixed",31,49,1
"mpusz/mp-units","0fbc84960841293e237f0a1c95df32476c91b569","mpusz","2023-06-21 20:46:50","false","docs: ""Glossary"" page added",14,57,1
"mpusz/mp-units","79b402db4190f8624ca89853a2af3b2ddd474ca0","mpusz","2020-09-14 18:42:19","false","refactor: small cleanup in quantity_cast",16,23,0
"mpusz/mp-units","62cf5ca493ea59600833eb409c2bd2b9bc611319","mpusz","2019-04-07 06:34:47","false","Additional design questions added",2,6,0
"mpusz/mp-units","adca315f15044428b5f431209b2cbb2fec52ae9a","HazardyKnusperkeks","2021-03-25 05:41:17","false","fix: Add missing include

Otherwise the namespace si is not defined",32,30,1
"mpusz/mp-units","929913117419ed6edf3a50cab1ef79db1bf051e6","JohelEGP","2020-09-07 05:53:19","false","refactor: simplify is_derived_from_{scaled_unit,base_dimension}",17,23,0
"mpusz/mp-units","7ed29807a65d0bb7e6ef0334758620748188073f","RalphSteinhagen","2021-06-29 15:33:17","false","removed superfluous `requires` statement in is_quantity<T>",27,33,1
"mpusz/mp-units","a6901a17e8e8a917aaf413e333d1ee7739216547","burnpanck","2022-12-31 13:07:33","false","double check MSVC fix",34,51,1
"mpusz/mp-units","7bebf6e1e0dd98ccc76b930727f7fcf555c0a0f7","mpusz","2019-05-17 20:41:46","false","Metabench support and tests added",2,8,0
"mpusz/mp-units","73033e347ae1c563aaff9f68b6d51f2e3d7c2675","mpusz","2019-12-11 16:41:18","false","exbi data prefix added (resolves #37)",19,14,0
"mpusz/mp-units","0b3618d72322740bf7c0fb48c7e936d218968299","mpusz","2023-10-25 12:12:25","false","docs: ""Getting Started"" chapters updated",2,61,1
"mpusz/mp-units","a6c767682882b3bf7aad021694d26363c3637c55","mpusz","2020-05-10 21:24:24","false","travis.yml fixed",16,19,0
"mpusz/mp-units","2d5386504d3a4c73e18c303646f16d4f9212cd10","mpusz","2022-09-16 23:38:40","false","refactor: Unused code commented for now",30,47,1
"mpusz/mp-units","fadec03ceeb17effb9e90bd0e0d443186a56b442","mpusz","2021-04-09 06:26:24","false","feat: `reference` added to `quantity_kind`, `quantity_point`, and `quantity_point_kind`",32,30,1
"mpusz/mp-units","ad69f338b86a4cf0067447f9d4f9141dc1edfd2b","mpusz","2019-09-24 14:59:45","false","pow<N>() fixed to work with the integral representations",4,12,0
"mpusz/mp-units","2b5777be7221bd2fde0e2b36fee40b94c2a65cde","mpusz","2021-01-04 11:36:30","false","test: Tests for no conversion from a dimensionless quantity added",21,27,1
"mpusz/mp-units","d310bb1b8de5f8d4f632009c5366054f7b36a413","mpusz","2022-08-01 09:59:45","false","docs: Documentation updated for the latest `unknown_coherent_unit` changes",34,46,1
"mpusz/mp-units","47ad0d7cdf1e0ba57d003e7522c42a364631d759","mpusz","2021-04-09 10:52:28","false","Merge branch 'master' of github.com:mpusz/units",32,30,1
"mpusz/mp-units","e93d799403336b99fd2813517af9ec9ee20f0a83","mpusz","2020-12-24 09:50:45","false","ci: Setting of a docker image fixed",19,27,1
"mpusz/mp-units","bc98254e7a007fd0e1ec14ade3d4bca67d899a57","chiphogg","2022-04-09 17:35:15","false","Support `-` and `<=>` in `ratio`",35,42,1
"mpusz/mp-units","faa4c203aa0b77d38f09498e003684bbd0f97a69","mpusz","2023-06-17 03:44:20","false","fix: `treat_as_floating_point` and `Scalable` fixed for the case where the type has both `value_type` and `element_type`",14,56,1
"mpusz/mp-units","fc2b1add8474ed86872fd1bcdc7e761c70a07a62","mpusz","2019-09-16 02:04:51","false","The title of one of the metabench renamed",4,11,0
"mpusz/mp-units","0db297ac189c6ae048a982c3d93b3210ca430b6c","mpusz","2023-08-30 15:39:22","false","feat(example): the last remaining constant added to si_constants example",8,59,1
"mpusz/mp-units","4ef4c1ea1f333f958f0324bc1803c7d3eb4333ba","mpusz","2021-03-18 07:18:18","false","build: `CONFIG REQUIRED` added for `range-v3`",35,30,1
"mpusz/mp-units","d2a7df6540d899894de54e1a3193a9d5a133fbdb","mpusz","2021-04-13 17:28:53","false","fix: clang compilation fixed",32,30,1
"mpusz/mp-units","a172f346843cd869f8ea9c09f23623673a5fca08","mpusz","2020-12-21 21:56:00","false","build: Minimum CMake version required set for each file based on its contents",19,27,1
"mpusz/mp-units","26ed24166296c06d546d44e117e5b5989a25a29b","mpusz","2023-02-09 05:15:42","false","fix: `value_cast` fixed",43,52,1
"mpusz/mp-units","028b8fb80c2d116ad0bc64dfccf0a8520c4dcdb8","mpusz","2020-12-28 15:15:47","false","refactor: algorithm.h removed from ratio.h",17,27,1
"mpusz/mp-units","6267b3372c165918222eface35f3fb53eba89693","mpusz","2022-08-02 16:35:52","false","docs: READTHEDOCS build support removed",34,46,1
"mpusz/mp-units","82b1f7ffc02fc3a8b5b7e80060e6998f1fb45bd3","mpusz","2022-12-20 16:26:55","false","refactor(example): `RepresentationOf` support added to examples",30,51,1
"mpusz/mp-units","c75559dd344b719a662e38a90fc4225f6ecc5049","mpusz","2023-10-10 18:24:23","false","docs: ""i.e."" replaced with ""e.g."" everywhere in the project",2,60,1
"mpusz/mp-units","41fdfeeea99e70fc51b484220a0d6d250da8882d","mpusz","2019-07-24 11:27:46","false","Version updated to 0.3.0",4,10,0
"mpusz/mp-units","67b2ad5d0542d5c38eee2a6faa4bbbda5d02977c","mpusz","2021-03-19 06:35:40","false","Merge branch 'go2sh-add_symbolrate'",31,30,1
"mpusz/mp-units","31d00ea3702d3da8cb060bbe4a2d56d2b56a0094","mpusz","2020-12-23 21:29:37","false","ci: Conan CI GitHub Action replaced with a new one",19,27,1
"mpusz/mp-units","2337ea9159641c4f358f6847d561145a93f5d927","mpusz","2023-06-08 19:58:49","false","ci: clang-format updated in pre-commit",48,56,1
"mpusz/mp-units","43825a531fa91501277161fefd94c50a3cf0ea96","mpusz","2021-05-11 21:07:03","false","chore: project version moved to 0.8.0",25,31,1
"mpusz/mp-units","3e131a82d436b552125c2c5d115839765deed2be","mpusz","2019-11-05 20:34:58","false","derived_unit removed",14,13,0
"mpusz/mp-units","ca1867c9b2818c6cbc7790809edd07b6e9f1d548","JohelEGP","2020-09-05 22:20:19","false","refactor!: pow functions as detail",16,23,0
"mpusz/mp-units","2600ababb69521d934f3a057af15eeef33b986ad","JohelEGP","2020-09-08 02:57:39","false","style: fix indentation",17,23,0
"mpusz/mp-units","a0ac140a198817099a5d5ca7a5ab33576f6fd1c3","chiphogg","2022-05-12 16:54:48","false","Merge fixes into branch after updating with upstream changes",33,43,1
"mpusz/mp-units","419db7a36eb89b29fc6c72c08e3f73a17d2f26fa","mpusz","2021-02-18 18:34:22","false","Merge branch 'master' of github.com:mpusz/units",26,29,1
"mpusz/mp-units","33ad51311b835efb7f7767473f971c02a3140073","mpusz","2020-09-08 15:13:38","false","docs: :pencil: dimensionless quantities documentation added",15,23,0
"mpusz/mp-units","25b67101d9557b151353c1bbd40ead5cd06c1983","mpusz","2020-06-28 16:03:09","false","Minimum compiler version supported changed to gcc-9.3",19,21,0
"mpusz/mp-units","6201109c60e63fd0f92029703227c64673be6912","mpusz","2023-06-21 16:07:55","false","refactor: `TYPENAME` and `CONSTEVAL` macros got `MP_UNITS_` prefix",14,57,1
"mpusz/mp-units","5300caf17b08c1540a7d7ce7817aca164ef571b8","mpusz","2022-05-11 10:34:52","false","refactor: :boom: ! `derived_deduced_unit` renamed to `derived_scaled_unit`

Naming is hard ;-)",34,43,1
"mpusz/mp-units","94fd74000c5363ae6d95d30199a0d2c67c8f3fac","mpusz","2018-11-11 01:09:11","false","Type traits changed to variable templates",2,1,0
"mpusz/mp-units","cabd8b0f01a0d1be8fe743eb6eec5daf25b5d103","mpusz","2020-12-25 08:58:59","false","ci: Disabling of some actions removed for now",19,27,1
"mpusz/mp-units","037503cbc6dee7cad718ee1c268054acd1d16f3e","mpusz","2020-02-10 19:35:32","false","deduced_unit fixed + unit test for mass unit added",18,16,0
"mpusz/mp-units","561fbf7c939e8a00049346d0d4a6da528fc9e0de","mpusz","2023-05-26 11:53:52","false","merge branch master",48,56,1
"mpusz/mp-units","b78abce0ae34f0ab6f00c0c716bd9fd0c9f3a6e9","mpusz","2022-10-22 18:19:51","false","fix: invalid assertions fixed",30,49,1
"mpusz/mp-units","7512e29137f941911c5aa2f2807a81ec05bf4e3b","mpusz","2021-04-16 12:55:42","false","fix: Windows build fixed",32,31,1
"mpusz/mp-units","2e759b29be46316ce8dc6f0c5c810f6d8f791fd7","mpusz","2023-06-02 08:54:47","false","test: `fractional_exponent_quantity` test added",48,56,1
"mpusz/mp-units","d75377ccaf0ceb5a6e8d12bfecad6eb3320e956e","mpusz","2019-04-11 16:24:17","false","std::decay_t replaced with std::remove_cvref_t",2,6,0
"mpusz/mp-units","2d74b72893fa65ca9cf0aa53e04841e9a8769798","mpusz","2019-09-18 23:07:35","false","pow() and sqrt() for quantities support added",4,12,0
"mpusz/mp-units","0e22baa1e9a4cae8779b4c05d71a88d0ee928edd","mpusz","2019-09-09 21:00:52","false","Check for minimum gcc version fixed in conanfile",4,11,0
"mpusz/mp-units","9aa3fd4d00ee9e6dea3f4a67cc10bf06e5e3e634","mpusz","2022-08-03 09:29:20","false","fix: `prefixed_alias_unit` constraints  fixed",34,46,1
"mpusz/mp-units","3729a9fe934abb8ce618f5cdd7e7a466543edf83","mpusz","2022-03-21 09:37:05","true","Merge pull request #337 from chiphogg/chiphogg/prime-wheel

Use wheel factorization for prime numbers",32,42,1
"mpusz/mp-units","85d174ccbe7fd70eaaadf8dc556ba65c39561473","mpusz","2020-11-05 15:10:21","false","ci: Alternative CodeQL C++ build",18,25,0
"mpusz/mp-units","1e36d473000ab188e0b24c920544caa2df029983","mpusz","2023-05-26 14:00:01","false","ci: `downcast_mode` testing removed",48,56,1
"mpusz/mp-units","c1d0354b243a430ca3247eb71d34991d96163654","mpusz","2020-09-08 19:19:37","false","docs: CHANGELOG updated",14,23,0
"mpusz/mp-units","422c078cb29562f3c8b6fc85f9b195f4c8fd3af3","mpusz","2019-09-17 13:08:32","false","Yet another small update to changelog",4,11,0
"mpusz/mp-units","a9a043d892ddf4178f04018522b486c5c7da97af","mpusz","2023-08-26 18:28:49","false","style: whitespace removed to make pre-commit happy",9,59,1
"mpusz/mp-units","a3cf3f40871ce44ed8ae2d6c31e473192b001e2d","mpusz","2023-08-18 08:58:25","false","feat: `DimensionOf` and `QuantitySpecOf` added and reused in `ReferenceOf` concept",14,59,1
"mpusz/mp-units","20f3aba256c7db933619de7efed846b7cf82f3ac","rbrugo","2020-09-10 16:16:33","false","Updated documentation",15,23,0
"mpusz/mp-units","4250a7a042ae29ed13715554cd6e4745e8fa5f2c","rbrugo","2020-04-03 17:50:37","false","moved ascii_only functionality to unit_format_specs",13,18,0
"mpusz/mp-units","dcbadfe285b9fbe6357604537ae7d44d430f84c8","JohelEGP","2020-05-31 19:46:10","false","fix: commented out requirement",17,20,0
"mpusz/mp-units","ffa0f321f957f79f4bd7d3b237abd1f40e9b4ec0","mpusz","2022-05-06 08:00:39","false","fix: shadowing compilation errors on MSVC fixed",36,43,1
"mpusz/mp-units","4411b8ea6dd2bce87e2bb9e2cbc748b48d89d989","mpusz","2022-09-28 10:49:28","false","test: `dimension` unit tests added",30,48,1
"mpusz/mp-units","6d898957abe90bc60bb26625468b160412a0bd4e","mpusz","2022-10-18 20:55:58","false","docs: invalid comment text fixed",30,49,1
"mpusz/mp-units","690fa592cabb7604d024f35b7157abbe7c0d1a22","mpusz","2023-08-27 19:51:59","false","docs: outdated comment removed",9,59,1
"mpusz/mp-units","ff3d1e87fae077226cd977d70a6a5ad4e7e8247b","mpusz","2023-10-17 07:09:18","false","refactor: :boom: `unit_symbol<fmt>(U)` signature refactored and the resulting text can now also be used at runtime

Resolves (#501)",1,61,1
"mpusz/mp-units","71eec182f9a9650fe32237f9a9f0671a530cdc3a","mpusz","2019-12-06 11:19:11","false","clang-format updated",18,14,0
"mpusz/mp-units","56dcb716e347f91bbf517b35a242508f32c6286b","mpusz","2023-03-30 15:04:25","false","fix: some preprocessor branches fixed",44,54,1
"mpusz/mp-units","3b6a22d2c0d53a127a85f359728f82ff0292ef46","mpusz","2023-09-26 13:48:17","false","docs: `degree_Celsius` comment not needed anymore",2,60,1
"mpusz/mp-units","6c5f27cda7d4f193343b626105b51a468b7a157e","mpusz","2020-12-28 18:23:20","false","fix: Compilation errors fixed",17,27,1
"mpusz/mp-units","d772b4a82ffcb167711e9dfb6f3e5de54e87f943","mpusz","2020-06-23 10:05:12","false","mp-units rebuild forced in build.py",18,21,0
"mpusz/mp-units","f6ab0aaf17889fe4c4c3cb7294d1a365c0495860","kwikius","2020-03-11 19:39:23","false","examples,alternative namespaces : update box_example and put alternative namespace definitions in local headers",14,17,0
"mpusz/mp-units","d4d5ad243ced325326a51c9177279c204f2d9caf","mikeford1","2020-06-17 09:41:06","false","minor fix in fps example",18,21,0
"mpusz/mp-units","28c4fe3c08ad92ecd1f39c0d32c687603774517a","chiphogg","2022-03-19 14:29:11","false","Run clang-format-15 on changed files",32,42,1
"mpusz/mp-units","a86cac87059bd1f77f7e52ad9188dfa345c71e9c","chiphogg","2021-12-30 01:53:55","false","Capitalize more template arguments",30,39,1
"mpusz/mp-units","bfa8db613903fd50ce45c037b0d8ad505e85682f","chiphogg","2022-03-11 03:48:57","false","Use std::accumulate",31,41,1
"mpusz/mp-units","48b6280486e8fec21e2becb69f9aef87cad4f1d2","chiphogg","2022-03-19 16:01:32","false","Merge branch 'master' into chiphogg/prime-wheel",32,42,1
"mpusz/mp-units","d6eb25f07afec4dacf0f7d16e07e6d3981ddd059","chiphogg","2022-01-28 22:42:23","false","Attempt to satisfy MSVC 14

```
test\unit_test\runtime\magnitude_test.cpp(143): error C2672:
'units::check_same_type_and_value': no matching overloaded function
found
```

Maybe it's confused by accessing the static member variable template
using dot-notation on an _instance_?  If so, let's see how it likes the
member-function syntax.",30,40,1
"mpusz/mp-units","cef01ba67cef1e64ad98a5d2cb5c0fbd9868aeb7","chiphogg","2021-12-31 14:54:10","false","Remove redundant `inline` specifiers

`static constexpr` implies `inline`; see:
https://stackoverflow.com/a/57407675",30,39,1
"mpusz/mp-units","1b834e8e497e4e03017b6a3181da281865529dd2","sohamroy19","2021-10-14 06:51:21","false","Replaced macro redefinition with appropriate usage",27,37,1
"mpusz/mp-units","dfd209ed14f8ef6ebc7057878452eedfe591d9db","mpusz","2021-04-02 16:57:17","false","fix: `femtotonne` enabled",33,30,1
"mpusz/mp-units","fac1f582c8169d0cf6995b6dfe77b1d7bdfcb847","JohelEGP","2020-09-07 06:04:02","false","chore: iwyu",17,23,0
"mpusz/mp-units","8300305dd319fca1936916d95cacd21a366d8775","mpusz","2022-11-11 00:39:05","false","refactor: physical constants refactored",33,49,1
"mpusz/mp-units","0adee83866f4dd1d85ff60078e3c025c58703fd3","chiphogg","2022-07-27 14:30:38","false","Use `mag_power` to make callsites more concise",35,46,1
"mpusz/mp-units","9fdb5822f98224c04db51edde3f8eb263c622adb","mpusz","2020-02-20 21:24:22","false","CTest module removed",15,17,0
"mpusz/mp-units","4c49e9c57ff3f80031d70948adbe216c8ac4945f","mpusz","2023-08-03 19:23:34","false","docs: cross-page links fixed",14,58,1
"mpusz/mp-units","a2b1fdd4c8c7c6c915ce98cb42217a0df0880f92","mpusz","2023-05-16 11:44:13","false","feat: unit conversion operator added to `quantity_point`",48,55,1
"mpusz/mp-units","3475f5193ea27dbe49fe20cf84adc8e380a037db","mpusz","2019-10-14 08:53:02","false","Catch2 support added (resolves #8)",14,13,0
"mpusz/mp-units","b18061ab0ee2f54528edb6ac357a831184736c8d","mpusz","2021-02-20 23:40:56","false","build: clang support added",27,29,1
"mpusz/mp-units","ea6325a5eb3d78ca4f8f283e7a509d53b25c4582","mpusz","2023-08-01 10:38:29","false","refactor: some parameterized quantity specs renamed

Relates to #475",13,58,1
"mpusz/mp-units","90c8cbce255e2c2da9b11243dc9d3ab62573361c","mpusz","2023-06-22 16:15:02","false","refactor: `unit_can_be_prefixed` trait refactored",14,57,1
"mpusz/mp-units","d6bb6c8bc9f90c7bda2b2083ded504d884894877","mpusz","2021-11-15 16:12:44","false","test: fmt test compilation on VS2019 fixed",31,38,1
"mpusz/mp-units","0d319675f840937ac387a2f5cf00e775b9aad23b","mpusz","2020-02-08 18:49:36","false","`prefix` definition simplified",18,16,0
"mpusz/mp-units","bd641228808588d5488c501c402817ac06c729ff","mpusz","2022-06-14 09:18:29","false","docs: ""Quantity-like Types"" chapter added

Refers to #365",34,44,1
"mpusz/mp-units","f1716c4bc78f5d30a26311425f0cf4f2ec38e413","mpusz","2023-08-31 16:59:10","false","docs: Compiler Explorer link updated for `si_constants` example",9,59,1
"mpusz/mp-units","627b2fb6d091fadaf85c371f0d79800de5419db9","mpusz","2022-03-14 18:25:59","false","build: MSVC version handling fixed",31,41,1
"mpusz/mp-units","56cee31a675fe731103421da0570198ed1015a1f","mpusz","2022-04-24 17:52:07","false","fix: `si::hep::dim_momentum` duplicated definition fixed",36,43,1
"mpusz/mp-units","be58a6e03ad44784f930e87d98731947cc784d53","mpusz","2022-12-22 15:48:28","false","refactor: `quantity_spec::operator[]` return type constrained with `Reference` concept",33,51,1
"mpusz/mp-units","2bb305eef6c11b06a0371c7100c4803fcadab9ba","mpusz","2021-05-08 17:53:01","false","ci: `downcast_mode` added to the cache key for ccache",33,31,1
"mpusz/mp-units","a2f829aa641aaf966ef3d32c762e3d336772dea1","mpusz","2019-04-09 21:15:10","false","Test package fixed",2,6,0
"mpusz/mp-units","84c073fd36b4820d23811b6868e83f856f71d1a9","mpusz","2022-05-12 15:09:38","false","build: doxygen updated to 1.9.4",33,43,1
"mpusz/mp-units","c4af958cf1e55ed81e5699a699ae4f929203094c","mpusz","2020-09-04 21:16:28","false","MSVC support announced",15,23,0
"mpusz/mp-units","e7ac6bd56306cee44cf9d0e19007137d4eb274ff","mpusz","2020-05-13 13:36:33","false","Reference section of documentation improved",16,19,0
"mpusz/mp-units","c3c087925754a648c06bc87f50600da18ad680be","mpusz","2022-10-19 18:44:12","false","refactor: `DimensionSpec` concept renamed to `DerivedDimensionSpec`",31,49,1
"mpusz/mp-units","70fbf300b495c58965cff12c9dacfcd719bdeec5","mpusz","2019-12-26 09:11:12","false","astronomical unit added",16,15,0
"mpusz/mp-units","ab1cc4b8e730b3cd3bf955f33cbfb14d9d5f4738","mpusz","2020-03-25 14:04:33","false","Overconstrained quantity operations relaxed",13,18,0
"mpusz/mp-units","b1e98a97d07b0b8c9ee7bdf50fcfe765aa5a0db3","mpusz","2021-01-05 16:47:07","false","refactor: ms-gsl replaced with gsl-lite",21,27,1
"mpusz/mp-units","12ca5dd3c9a8a93d540c78f8ee1a0e9c3bc498a9","mpusz","2020-05-10 20:24:05","false","CONAN_DOCKER_32_IMAGES removed from Travis CI",16,19,0
"mpusz/mp-units","d51a9eac281bf80407ff622bc6c5ae4a4f118ba0","mpusz","2020-02-21 09:57:57","false","Physical constants refactored",15,17,0
"mpusz/mp-units","e5ee2cd38190fd20eedd23d30483291ca9bf035b","mpusz","2019-05-08 18:11:43","false","Conan is able to set C++ version when cppstd is used",2,7,0
"mpusz/mp-units","a69b408661b9d28dd00ddcc04d8721270cb98e6a","mpusz","2021-04-16 12:39:20","false","docs: examples chapter reorganized",32,31,1
"mpusz/mp-units","5def0c6b60b197aa0bb4e3f5104605fb27f6c3a7","mpusz","2019-10-17 09:14:29","false","Usage Overview section added to README",13,13,0
"mpusz/mp-units","7a26125e1614670249273975a0787c01700ce130","mpusz","2022-12-19 13:55:54","false","refactor: public headers cleanup

Public headers should be only the ones that a user may have a need to actually include in his/her code.",30,51,1
"mpusz/mp-units","bc8c31caa5aa4d0aa792c1e941750d5821547e25","mpusz","2019-12-17 21:18:52","false","is_derived_from_instantiation fixed",17,15,0
"mpusz/mp-units","803622a1be43d1fe47d4a61dc2d70244df540d85","mpusz","2020-10-09 21:24:00","false","refactor: `[[nodiscard]]` added to `quantity_like_traits` for `std::chrono`",17,24,0
"mpusz/mp-units","4a09edfcbff36dca639f77084175033a3c581043","mpusz","2022-05-13 12:32:57","false","feat: `luminous_efficacy` SI defining constant support added",33,43,1
"mpusz/mp-units","dd8a0a969749b7bacbce1109cbfe122d5d2284c9","mpusz","2022-12-20 09:42:13","false","feat: electromagnetic SI constants added",30,51,1
"mpusz/mp-units","feb1a0b86052281ee226790ca937eb5f6736dfc0","JohelEGP","2022-03-21 18:29:50","false","test(static): simplify quotient_remainder_theorem test cases",32,42,1
"mpusz/mp-units","533595d669ba4b6b144e96ad13ddef364ded2784","JohelEGP","2021-02-23 17:23:02","false","fix: address comments from @mpusz",28,29,1
"mpusz/mp-units","29d40f42ef94a0f736b5a4ea34562b243b7e8d2c","mpusz","2021-02-15 19:11:16","false","build: `ci-conan` fixed",26,29,1
"mpusz/mp-units","ed9f51c75b8a3915bf395f79e7126709de5ab79d","mpusz","2020-05-28 17:22:45","false","CHANGELOG updated",17,20,0
"mpusz/mp-units","6d82ddebbcfdc665208de3505f132711449a4dac","mpusz","2022-03-18 07:21:15","true","Update test/unit_test/static/quantity_kind_test.cpp

Co-authored-by: Johel Ernesto Guerrero Peña <johelegp@gmail.com>",31,42,1
"mpusz/mp-units","a13e627c9f646a65d9c4dc604c791f87f5adc541","mpusz","2023-02-13 17:13:41","false","feat: proper support of kinds added to `get_associated_quantity()`",43,52,1
"mpusz/mp-units","77dc0f3e018cfdcf131fee9f7ba81f95582d32b1","mpusz","2020-05-17 15:30:14","false","Sphinx generation fixed",15,20,0
"mpusz/mp-units","e0009bdb0d3715145a64e495d7924f7029c6be89","mpusz","2021-05-11 18:46:57","false","docs: mp-units 0.7.0 is here :-)",25,31,1
"mpusz/mp-units","97245a8c96491c6eb39f200ccdcb8172ab386995","mpusz","2021-04-13 16:16:11","false","feat: Kalman Filter tutorials 1-8 added",32,30,1
"mpusz/mp-units","2f8aa6ae994e5ba10dd09112482c82e3058e9259","mpusz","2022-11-08 02:20:32","false","fix: obsolete `UNITS_DOWNCAST_MODE` removed fron conanfile",32,49,1
"mpusz/mp-units","5f73123f8756ebcd5badaa8dae3252f595a1c82f","mpusz","2020-03-09 17:56:55","false","Contrained on a named unit added to a `prefixed_unit`",15,17,0
"mpusz/mp-units","a9cd433f3b62a9c777e2a13f83302f5f6b8f1762","mpusz","2020-05-14 09:10:06","false","Note message added to documentation index",16,19,0
"mpusz/mp-units","fa7c61d54851b49d82097391b695a2eb2f611373","mpusz","2023-06-21 09:16:11","false","ci: `user.name` and `user.email` set in documentation GitHub Action",14,57,1
"mpusz/mp-units","b74c0bf6e8deeaefadea11383600dab89ed0b184","mpusz","2023-09-26 17:17:04","false","ci: gcc-13 added to ci-test-package-cmake GHAction",2,60,1
"mpusz/mp-units","a26eef0d93756a7a0f86fb2bb8e24c68de763425","mpusz","2021-10-01 09:27:01","false","docs: docs updated for gitpod",26,36,1
"mpusz/mp-units","2a56438f1c954e4c29e7f4e0dcc3dd79c4a46161","mpusz","2020-09-11 16:11:25","false","refactor: file tree with systems defninitions refactored to limit ODR issues

Relates to #32 as with this commit we created something like modules for derived quantities",14,23,0
"mpusz/mp-units","27ec678314ebc15591c9348294988e9036c500e0","mpusz","2023-08-25 20:47:32","false","refactor: workarounds to make gcc-11 compile",9,59,1
"mpusz/mp-units","fde503202591a1cc03704b5ad73e926514269772","mpusz","2022-05-05 17:18:19","false","Revert ""build(conan): `exports_sources` replaced with the `scm.Git`""

This reverts commit 4adc71db56ed557996fe473f981ee6a7845451aa.",36,43,1
"mpusz/mp-units","941401de31d053cd5c31583508c66ae3d66cf8e5","mpusz","2019-04-09 11:34:55","false","US customary length units added",2,6,0
"mpusz/mp-units","b221dace3ffe2ca7e8b93c94ee78aaedfe7df851","mpusz","2022-04-02 19:36:42","false","style: clang-format applied to the remaining files",35,42,1
"mpusz/mp-units","3569ec76eaef6709db97337072e42f4c7624aaca","mpusz","2023-07-11 17:27:26","false","docs: ""Representation types for vector and tensor quantities"" extended",12,57,1
"mpusz/mp-units","dde5bcab7e8d00c14c8d8de64f861edfab874e1b","mpusz","2023-06-19 12:02:39","false","Merge branch 'master' of github.com:mpusz/units",14,57,1
"mpusz/mp-units","722402f2406ccfe38e50a452c6c105bbf4932c6e","mpusz","2018-12-01 20:53:56","false","noexcept added to zero(), min(), and max() according to P0972",2,2,0
"mpusz/mp-units","adcd1e2f1b24bc82b80966912372dd98c936044a","mpusz","2019-04-11 19:54:27","false","one() added to quantity_values and quantity",2,6,0
"mpusz/mp-units","cdd90fb93be3855aad8725fc22468dfc51f7ef8c","mpusz","2023-10-01 03:52:25","false","docs: `CameCase` concept identifiers FAQ added",2,60,1
"mpusz/mp-units","8493bf389e7e783a3604b83f0f900eb6e9121306","mpusz","2022-01-18 11:16:18","false","refactor: Forward declaration of `as_magnitude()` is not needed",30,40,1
"mpusz/mp-units","60a564a86700804e306f0d73a1521ea6e4abe377","mpusz","2023-07-11 17:48:22","false","refactor(example): simpler header files used",12,57,1
"mpusz/mp-units","d4d23847d8f105a583d16456d7af85910b9c1642","mpusz","2020-09-13 16:45:46","false","refactor: `DOWNCAST_MODE` renamed to `UNITS_DOWNCAST_MODE`",14,23,0
"mpusz/mp-units","62c3e5f2b620bdb6cef6da957fc912a12964237d","mpusz","2022-12-23 12:44:40","false","fix: `hypot` implementation fixed",34,51,1
"mpusz/mp-units","ec04d9c03ddf12e46dca5348d4ca57b526e425f1","mpusz","2023-06-14 12:58:21","false","test: math static tests updated for V2",48,56,1
"mpusz/mp-units","03290d74a2198d983982e757463c87c20c004f92","mpusz","2022-03-18 07:20:27","true","Update src/core/include/units/quantity.h

Co-authored-by: Johel Ernesto Guerrero Peña <johelegp@gmail.com>",31,42,1
"mpusz/mp-units","ffbb54f78905a3321bbd3004654eac180d499a8b","mpusz","2023-05-15 11:28:41","false","docs: ""Defining Systems"" chapter added",48,55,1
"mpusz/mp-units","52bbd00ab4b7faef4903dedeaec7cf3e7e3cb4a5","mpusz","2023-05-26 12:20:00","false","style: `clang-format` new rules applied to the code base",48,56,1
"mpusz/mp-units","5c98924efbf40f231f46cc9f8218e7421e4815fa","mpusz","2020-05-08 08:50:34","false","Downcasting reworked to allow OFF and AUTO modes",16,19,0
"mpusz/mp-units","859bc20fdcb061de8586d762576946a9091d8c78","mpusz","2023-02-09 05:47:48","false","refactor: all examples refactored to use a simplified quantity creation",43,52,1
"mpusz/mp-units","7fd92f034b4d770527bef8b84994a1fd9970f333","mpusz","2019-11-06 22:43:32","false","Not needed stuff removed from fmt format (resolves #6)",14,13,0
"mpusz/mp-units","8847cff8197f1a62c9b4b9cd5e18b465f665aa82","mpusz","2021-08-29 20:23:45","false","build: doxygen updated to 1.9.2",24,35,1
"mpusz/mp-units","3be8ee921e4297f75f4405eda058a8a0e5238a08","mpusz","2020-02-12 08:48:04","false","Starship improvements after the latest gcc fixes",16,16,0
"mpusz/mp-units","fe158440bbe71ec7c714d181b27e7ca565b7b546","mpusz","2019-04-09 14:53:34","false","Upcasting facility refactored by adding additional alias templates",2,6,0
"mpusz/mp-units","4e044c4e43df5d3988a8459a5c5fd9d62951d7db","mpusz","2022-08-03 11:51:18","false","refactor: `hypot` was overconstrained",34,46,1
"mpusz/mp-units","7427993fc1756bc2c94627246f50694676248294","mpusz","2023-02-23 11:15:28","false","build: building of linear algebra based examples temporarily disabled in CMake",44,53,1
"mpusz/mp-units","4b3e31f40d0e3dcfac695a67677098d8ac2b2bdc","mpusz","2023-06-21 08:55:18","false","docs: initial V2 documenatation added",14,57,1
"mpusz/mp-units","6044e3b3ad4b07608382ce7524d7f283459fd289","mpusz","2022-04-11 15:07:54","true","Merge pull request #354 from chiphogg/chiphogg/num-den-conv

Support seamless interop between `ratio` and rational `Magnitude`",35,42,1
"mpusz/mp-units","3194d45b08a2242f9dbc460da6e581a25f102ca6","mpusz","2022-10-18 15:44:40","false","refactor: exposition only members added to expression templates",30,49,1
"mpusz/mp-units","62164e426aea33fa04832e5e8328fbd93e1e76db","mpusz","2019-12-11 07:34:16","false","conan test_package fixed",18,14,0
"mpusz/mp-units","3ee41d086c22b6fe574d82cf4b344a71d52d8ad7","mpusz","2021-04-06 17:09:26","false","build: workaround to prefer `FindDoxygen.cmake` over Conan's generated `doxygen-config.cmake`",32,30,1
"mpusz/mp-units","01745726454b375824caa891094eecf27663462c","mpusz","2021-05-11 17:40:58","false","refactor: merged `op%` of `quantity_kind` into one

Relates to #221",27,31,1
"mpusz/mp-units","1bbbd02f1cff2e0def2eb0a1e8e81c9a18873073","mpusz","2019-05-09 02:43:52","false","Concepts workaround added to operator/()",2,7,0
"mpusz/mp-units","6171b8ab69aabd96f157cf58c9b598d54824e8b6","mpusz","2022-03-10 18:05:36","false","docs: Outdated TODO comments removed",31,41,1
"mpusz/mp-units","9d085cbe7e6975a98b61e86141d52f2b35f80ac1","mpusz","2023-05-16 13:00:18","false","refactor(example): `[[nodiscard]]` added for currency",48,55,1
"mpusz/mp-units","c028f606c8525323a648645c7413002629c9875e","mpusz","2021-05-09 17:30:27","false","docs: ""Install"" chapter added to Usage",33,31,1
"mpusz/mp-units","f618529451b84d613c138a8b7bd48ed04bd8b391","mpusz","2020-02-17 16:23:12","false","FAQ section added to README",16,17,0
"mpusz/mp-units","929dc72f13b8bc28d05ccaf77713b25750e042d3","mpusz","2023-05-14 19:56:02","false","fix: compilation-error fixed",48,55,1
"mpusz/mp-units","8b661b9b0dbfe11037cfd7efca33de2f92c6f4e8","mpusz","2023-08-24 17:16:36","false","test: clang does not allow skipping template template parameters",9,59,1
"mpusz/mp-units","1b312b11021edcaf16fdfa19cad9adc6db4c1c30","mpusz","2019-11-06 16:50:34","false","fmt support added",14,13,0
"mpusz/mp-units","384f4b2624a243ccc286d3caf4eb468d4072de34","mpusz","2021-02-15 17:34:41","false","Merge branch 'master' of github.com:mpusz/units",27,29,1
"mpusz/mp-units","7b8d97646cffe03b1f9e5f4f7e0e6159b71d27da","hofbi","2022-03-18 13:34:30","false","check: initial setup for pre-commit",32,42,1
"mpusz/mp-units","f90cdd1b311b9501d85ff78c90096b41c14fb3ef","mpusz","2021-10-14 14:13:53","false","chore: gitpod updated",28,37,1
"mpusz/mp-units","192bf39654b9ac75f814b00276a47de83bcc2000","mpusz","2023-06-05 17:37:17","false","refactor: `natural::speed_of_light_in_vacuum` renamed to `natural::speed_of_light`",48,56,1
"mpusz/mp-units","0fb821a39291652c59c98fd94aafcd147a58adcb","mpusz","2020-12-27 11:26:40","false","fix: Commutativity no longer required for `operator*`

Resolves #185",20,27,1
"mpusz/mp-units","f01aa8530a6d493ecb3f476e4ece1371d5ef680d","mpusz","2022-11-10 08:49:36","false","fix: magnitudes fixed",32,49,1
"mpusz/mp-units","914d24a90319b4b08b34c93c24f5050aa6aff531","mpusz","2022-10-21 21:13:10","false","refactor: not empty constraints added for defining a symbol",30,49,1
"mpusz/mp-units","ce53df71fcf53402bcab80395ff995f42f01c28d","mpusz","2019-07-24 14:55:21","false","Added a few more derived dimensions",4,10,0
"mpusz/mp-units","e88cdadd5f11f081d0983cb40aa4d5ce77e10939","mpusz","2021-04-16 12:46:58","false","docs: ""Dimension-Specific Aliases"" fixed",32,31,1
"mpusz/mp-units","f5e9b42fe1915c3c5c756f99ca6757e3a6e83fae","mpusz","2023-06-08 17:07:52","false","fix(unit test): missing header file added",48,56,1
"mpusz/mp-units","7b0ba64cba8810e8b5cb7659597adde27a4fd537","rbrugo","2020-04-04 00:38:30","false","Static tests for magnetic induction",13,18,0
"mpusz/mp-units","a95cb53f736fe15a203000dbee69024faecde3b2","mpusz","2022-09-01 14:25:33","false","test: unit tests for trigonometric functions added",30,47,1
"mpusz/mp-units","e36fe151ea998c96abf356a1fe062f42f8aec273","mpusz","2023-09-13 07:01:03","false","refactor(example): storage_tank refactored",4,59,1
"mpusz/mp-units","27ab2db216a5a6ac76057f06aa30d7791d826de2","mpusz","2019-05-08 15:53:07","false","Minor changes to .gitignore",2,7,0
"mpusz/mp-units","0e2919d4f121812179f8b7c8a42afa44f1ce4417","mpusz","2020-11-04 21:26:50","false","build: copy-paste error fixed in CONAN_UPLOAD",19,25,0
"mpusz/mp-units","310541c9f1d5cff0c7a74c6af3102d3f4a5317ec","mpusz","2019-03-07 04:12:59","false","upcastable class template added to provide the base class for upcastable classes",2,5,0
"mpusz/mp-units","f0a91aa77e4998d7f026e767589d2cb997d6e346","mpusz","2022-12-27 09:29:48","false","refactor: math functions constraints weakened to allow interoperability with more argument types",34,51,1
"mpusz/mp-units","68617f68b0d8f44015e44509672a80fd6fa38b70","mpusz","2023-02-09 04:59:08","false","feat: `quantity.h` now exports `quantity_cast` and `value_cast` to simplify library usage",43,52,1
"mpusz/mp-units","e273acc9f36fdf7d5adcd086b5d59fecccb4b376","mpusz","2020-09-11 06:46:09","false","docs: Compiler Explorer links updated + removed fmt as it times out CE again",14,23,0
"mpusz/mp-units","b822a149b9915315d5ce851697ef82cc2507b22b","mpusz","2022-03-21 10:50:01","true","Merge pull request #343 from JohelEGP/cmake_systems

build(cmake): fix export name of mp-units-system",32,42,1
"mpusz/mp-units","cd5ff553cd3891e960a149a0b60f71b4854c87a8","mpusz","2020-12-17 22:44:53","false","ci: Consequtive jobs in GitHub Actions does not work like a pipeline -> make one huge job",19,27,1
"mpusz/mp-units","df6a0da9d32e73e87a403e275eee69f0530af6b9","mpusz","2020-05-13 10:50:14","false","Documentation updated",16,19,0
"mpusz/mp-units","6a5f25750d3288d7838da9020e5df25fa10f2896","mpusz","2020-03-10 19:53:53","false","UDL naming refactored",15,17,0
"mpusz/mp-units","30b0a0c5dfff39bff7474fea037ad25e785c8f61","mpusz","2023-06-12 08:38:36","false","fix: `RepSafeConstructibleFrom` now works correctly with Arg being rvalue reference",48,56,1
"mpusz/mp-units","2d7c3612cdcd1578b1bd768083356b21c28e7e0e","mpusz","2021-04-13 17:29:35","false","refactor: IWYU",32,30,1
"mpusz/mp-units","6bccc57800be9cd405092abe40ef9bcfa0417b80","mpusz","2022-09-08 04:51:43","false","docs: angular units chapter updated with a code example",31,47,1
"mpusz/mp-units","6646051e65453f7425ac87a1284aa079e7d2494f","mpusz","2019-04-04 09:00:40","false","Hand written concepts replaced with Casey Carter's repository",2,6,0
"mpusz/mp-units","74e6cf8def7d3880486b8b29ecc62496183bb710","mpusz","2022-03-10 18:01:50","true","Merge pull request #336 from JohelEGP/unused_header_quantity_cast

refactor: remove unused header",31,41,1
"mpusz/mp-units","43b7eb466c85ad5cadcd28bf938d523170dee58f","mpusz","2021-03-30 11:22:03","false","build: `AUTHOR_WARNING` changed to `WARNING` in compiler warnings CMake",33,30,1
"mpusz/mp-units","1cf00744837cadc0851ff1fef0dbf076e15bea85","rbrugo","2020-04-09 16:40:16","false","Added charge density",13,18,0
"mpusz/mp-units","b605ca309b2d652e1d9537db179f24fed0610d7b","rbrugo","2020-03-20 13:36:35","false","Added check for unit modifiers",14,18,0
"mpusz/mp-units","d554fb28cc577ebf6373fc62b9afc9caf218f0e4","chiphogg","2022-01-12 01:33:48","false","Try fixing MSVC internal compiler error

I'm breaking apart the requirements into simpler pieces, but I don't
really know if that will help.",30,39,1
"mpusz/mp-units","da470a697655c75cdbb6ddadc6790d775f6e273a","rbrugo","2020-04-03 18:27:04","false","added a small guide for editing the format specifications",13,18,0
"mpusz/mp-units","bf938c4fa4124b473a6f83c7b9576b1b7b4d30c5","sohamroy19","2021-10-14 17:43:19","false","Implemented correctly, included type_list",28,37,1
"mpusz/mp-units","63910131fff784fb652d3ad39f204afcfaf3c787","chiphogg","2022-01-04 19:14:22","false","Try fixing MSVC 14 bug

I don't know how to test this locally.",30,39,1
"mpusz/mp-units","dfe3db0b70ead6548b5ef13f5f6eb30829620cc4","chiphogg","2022-01-29 02:49:19","false","Merge branch 'master' into mag-value-t",30,40,1
"mpusz/mp-units","f1f23aa8f9d2fa8157620334721c5e38f38d0805","JohelEGP","2020-09-06 07:00:33","false","test: codify comments",16,23,0
"mpusz/mp-units","94fe48dd64ce4c93ae63d0104a52448b9d0e7ab5","chiphogg","2022-04-12 00:44:53","false","Add <compare> to satisfy clang",35,42,1
"mpusz/mp-units","1e8460d401ada0004eb8599986ebca83e01d05e4","chiphogg","2022-03-19 13:21:47","false","Revert ""Try upping the basis size further""

This reverts commit 87073856a7f18b365c0670d87b2380942705dd9d.
It didn't fix the problem, and it caused some new ones.  We need a
different approach.",32,42,1
"mpusz/mp-units","408ad16528ba87e9b1bfc91b146a4502297409e5","chiphogg","2022-01-29 03:19:30","false","Spell out fold expression, again",30,40,1
"mpusz/mp-units","cf7a7ed17a73ed08154aae93696a5a94ed5e43c6","hofbi","2022-04-02 16:58:23","false","check: run pre-commit on all files",35,42,1
"mpusz/mp-units","ee7518d0a18c2c15c64858c19ca068087e50ba9b","mpusz","2018-11-17 11:39:45","false","dimension_traits and unit_traits merged as upcasting_traits",2,2,0
"mpusz/mp-units","3976e5ea2df525f32d996f0ca164f1facbd3dbd2","rbrugo","2020-03-20 13:05:47","false","Indentation refactored to 2 spaces for consistency",14,18,0
"mpusz/mp-units","a99e5f9032e2d1b98224fffccfad3b6deef6ae2e","chiphogg","2022-03-19 15:54:29","false","Switch tests to use top-level, anonymous namespace",32,42,1
"mpusz/mp-units","88a69cecd88090ebba5e27eeb3ade8e086778438","chiphogg","2022-05-12 18:02:47","false","Try fixing build

Unfortunately, my local build hangs, so I can't tell whether this works.",33,43,1
"mpusz/mp-units","75fa12501c140585749b460925be54ecb6ecabc5","mpusz","2023-10-20 18:02:59","false","docs: CHANGELOG updated",1,61,1
"mpusz/mp-units","32b36fb67084176ccb4fe7293398fa0db0f0f943","mpusz","2022-05-11 09:59:33","false","refactor: :boom: ! `PrefixFamily` support removed

It doesn't have much sense to restrict prefixes usage for most units and in many places we were wrong to do so already.",34,43,1
"mpusz/mp-units","87ab85625b8fe01a922e144a6870d0e0ffc47710","mpusz","2022-02-28 17:27:03","false","The latest Conan generates `Catch2` CMake target",31,41,1
"mpusz/mp-units","abc429a71a84d1f1a5819ca5e35735149e332f25","mpusz","2022-09-05 10:12:12","false","refactor: `rotation` angle unit renamed to `revolution`",30,47,1
"mpusz/mp-units","081e61eb98d68deeb891a2a3175128b1350ae482","mpusz","2021-03-19 07:21:36","false","build: overwriting ""core"" requires in `package_info()` fixed",32,30,1
"mpusz/mp-units","433cd8222f8b644797eb4dd4a495c1f801959491","mpusz","2020-03-09 18:07:41","false","Missing Conan remotes added to build.py",15,17,0
"mpusz/mp-units","1a5341141a3fc7510b75a9f54fd747507d03757b","mpusz","2022-02-08 09:39:31","true","Merge pull request #329 from chiphogg/mag-value-t

Add value and categorization helpers for Magnitude",30,40,1
"mpusz/mp-units","42a73739ebede177174a8fa32880a1e8f8ef1b0d","mpusz","2023-04-03 17:23:39","false","refactor: `angle_test` refactored to V2",45,54,1
"mpusz/mp-units","4788aa64be6f650c43254340716e9852f8888c6c","mpusz","2023-05-26 13:28:54","false","build: linear_algebra test disables as the latest version of the LA lib is broken",48,56,1
"mpusz/mp-units","2ed47da81169adfedb91951bbda675a3ca2e821b","mpusz","2020-03-09 19:50:17","false","Sphinx docs deploy step added to travis-ci",15,17,0
"mpusz/mp-units","ba0e1c52b5d0d011461ec495259dd6cca847e5d2","mpusz","2022-05-06 16:30:20","false","style: `ci-test-package-cmake.yml` reformatted",36,43,1
"mpusz/mp-units","b7e467ff42eb95dbefcf4c835b64d3a8760be3be","mpusz","2023-05-26 06:18:58","true","Merge pull request #459 from HazardyKnusperkeks/macro

Work around Windows macro",48,56,1
"mpusz/mp-units","fd26f8cdffd5d9f1ab357344bdcd675125b35f5a","mpusz","2022-12-23 18:24:56","false","refactor(example): glide computer refactored for V2",34,51,1
"mpusz/mp-units","b3fb025053bb06ee1d044690dc5f268042231f9d","mpusz","2023-09-04 09:15:33","false","feat(example): text output added to `validated_type` and `ranged_representation`",8,59,1
"mpusz/mp-units","cb36e39c2a843ec6797faf2d86b94015d84dde77","mpusz","2023-10-06 19:39:51","false","style: formatting fixed to make pre-commit happy",1,60,1
"mpusz/mp-units","1a23d5b69ed395e58fb7c18ab311078c6db346c6","mpusz","2019-09-27 07:41:39","false","Invalid todo comment and depdency on std::ratio removed",10,12,0
"mpusz/mp-units","4b43ade1c4358dd28d78395c03e7c1465d6c51ed","mpusz","2019-12-23 12:25:49","false","Compiler Explorer link updated in README",16,15,0
"mpusz/mp-units","b36bc2b58296ee87aa5f468df82304a4b0be1eff","chiphogg","2022-01-29 02:40:51","false","Turn get_value into free function",30,40,1
"mpusz/mp-units","838b132a61f02ccf35d3bfe16a1ba6d1c894013f","chiphogg","2022-01-08 20:08:05","false","Finish migrating base_power to NTTP",30,39,1
"mpusz/mp-units","157da0d068d3f27e7f57c0b2b68055749a7db97c","RalphSteinhagen","2021-08-14 17:57:32","false","added fixes to address review comments

* removed commented code in hep/area.h
* added dependency to si-hep in conanfile.py
* removed redundant electronvolt definition in hep/energy.h (+ last-minute bug/typo fix)",24,34,1
"mpusz/mp-units","234337d31028ca2d736bb4acc39daf9740645b06","JohelEGP","2021-03-18 21:06:17","false","refactor: use perfect forwarding for make functions

Addresses https://github.com/mpusz/units/pull/261#discussion_r597131272.",35,30,1
"mpusz/mp-units","376c402fa004bb0b059f0337b190c06828f11632","JohelEGP","2021-03-18 21:23:45","false","fix: remove implied support for unallowed syntaxes on quantity kinds and references",35,30,1
"mpusz/mp-units","ca082dd8bb21fd41b1e3fbb948512f02124b50fd","mpusz","2023-06-21 09:07:17","false","chore: CHANGELOG.md link removed",14,57,1
"mpusz/mp-units","2b37bc7b3e8c239a1d26cd614119b74d709ada2f","chiphogg","2022-04-19 15:42:43","false","Address review feedback",36,43,1
"mpusz/mp-units","ced4b3bbed33a0fa81ae255e2b66f34b4f734bc4","JohelEGP","2021-03-18 21:11:54","false","refactor: make reference's interface hidden friends

Addresses:
- https://github.com/mpusz/units/pull/261#discussion_r597135187
- https://github.com/mpusz/units/pull/261#discussion_r597152408",35,30,1
"mpusz/mp-units","8507ed1ae94ffd457c5973ad7d7baeb03cdad54e","mpusz","2022-05-09 10:24:50","false","chore: `CMakeUserPresets.json` file should not be added to the repo",36,43,1
"mpusz/mp-units","104923d1aa0e9e7d041dff474a537b5a3d8d568f","mpusz","2022-05-11 20:52:40","false","refactor: `as_ratio()` constrain simplified",34,43,1
"mpusz/mp-units","0a023cdad4f56b3c9437e3500b217a08e2d492ec","mpusz","2020-03-19 10:51:30","false","""Using namespace units"" note changed a bit",14,18,0
"mpusz/mp-units","75081bf5660e8a702545a364ed45fef4c71ad38b","mpusz","2019-12-17 09:48:54","false","hello_units example added",18,15,0
"mpusz/mp-units","d8ec48722ae93e1ff48485e94eaf83339b7e7968","mpusz","2020-05-06 16:20:55","false","Template parameters constraints added for math.h",15,19,0
"mpusz/mp-units","5ab79f0c63f58c057ed9c9bf33e800f903618458","mpusz","2022-11-10 08:50:54","false","feat: `quantity_equivalent_to` concept added",32,49,1
"mpusz/mp-units","c8d7138ad7628feaf5aa9ef5eb5ade810a1f1a31","mpusz","2021-05-08 17:10:59","false","ci: `os` and `lib` added as cache keys for ccache action",33,31,1
"mpusz/mp-units","64d6193e744a5c7442043f7badc4cf2730cfc121","mpusz","2022-11-08 02:36:56","false","refactor: cgs header cleanup",32,49,1
"mpusz/mp-units","b27a42207633beda9a9d02036c0ff8d941ebf882","mpusz","2019-12-17 20:10:35","false","Preeliminary clang support added",17,15,0
"mpusz/mp-units","876c2ac4261a0422fe09492df503bf6261e40bd5","mpusz","2020-01-14 11:59:37","false","thou used as a primary unit in a fmt unit test",16,15,0
"mpusz/mp-units","99aa02a83a0b776c5e092797e5dcc0a7ef3c103e","mpusz","2023-06-08 15:37:09","false","feat: `IAU` system extended with new definitions",48,56,1
"mpusz/mp-units","ae7cd4d068f631ff2cca18ea96c5bb758cee7668","mpusz","2020-03-27 15:00:52","false","CHANGELOG updated",11,18,0
"mpusz/mp-units","5555422f6a2edf461f1626a08f6b9cda95252c02","mpusz","2020-05-11 08:55:21","false","Documentation deployment fixed in Travis CI",16,19,0
"mpusz/mp-units","56c8297c03a996d2fdf664cd7ade5e35d8674f12","mpusz","2023-05-16 12:04:01","false","refactor: `quantity_point` binary operators are not hidden friends anymore to prevent surprising conversions",48,55,1
"mpusz/mp-units","9953acb2abd7b70f9d6a172690223c986a3183e4","mpusz","2019-09-15 23:33:46","false","Missing concept added to type_list",4,11,0
"mpusz/mp-units","58daacfd58e705c1f1f1b4a494d4ec6977dbfd3b","mpusz","2020-09-10 09:33:58","false","fix: unit tests fixed for DOWNCAST_MODE = OFF",15,23,0
"mpusz/mp-units","cc9098595834ca2276e983cb217d574f70d48803","mpusz","2022-03-15 12:14:15","false","fix: Clang-12 compilation fixed",31,41,1
"mpusz/mp-units","9ad2cd5986c7502988f50c4dd43c632ec080c5f8","mpusz","2022-12-23 17:04:40","false","fix: `QUANTITY_SPEC` macros now use `units::` namespace",34,51,1
"mpusz/mp-units","1e00acd49f4001ab68acbb75f70eabe4dd84b54d","mpusz","2023-08-16 04:41:54","false","docs: ACCU 2023 talk referenced in the documentation",14,58,1
"mpusz/mp-units","26164edeac7b732f48d1b939d7b8246bc5a70cdc","mpusz","2023-05-22 15:53:50","false","refactor: constraints for `common_unit` improved",47,56,1
"mpusz/mp-units","9b1c9f16f1a4ebcddea78838185c42ed4d9ba541","mpusz","2022-08-01 16:31:03","false","ci: Check CMake version",34,46,1
"mpusz/mp-units","a7f58cc95f95416edbdf2f17df3cbf0b96dabca2","mpusz","2021-09-17 06:34:14","false","ci: do we have gcc-11 onboard?",24,35,1
"mpusz/mp-units","ef316a3dba0f99218ee4d16c9b6918bbe37c88f2","JohelEGP","2020-05-31 19:05:17","false","revert: default-initializing with zero()

Refs: 636358f",17,20,0
"mpusz/mp-units","8230a42cb080fa60829f00baa3c69b2565258591","mikeford1","2020-05-28 23:57:35","false","added some units for the foot-pound-second system and the static tests",16,20,0
"mpusz/mp-units","8b4f4daa550549a60881ad7570a9f7c4eb4f9581","rbrugo","2020-03-17 23:09:16","false","Removed c, s and p types; added optional # specifier",15,18,0
"mpusz/mp-units","901b09fd525de8bb4a63e4dea03e335c549d5eb2","mpusz","2021-03-19 05:47:37","false","refactor: `quantity::count()` renamed to `quantity::number()`

Resolves #259",34,30,1
"mpusz/mp-units","a60e951cd023ffecfc5036d84e0ca03217e1dabd","mpusz","2021-05-04 12:36:49","false","docs: Broken links to examples source code fixed",32,31,1
"mpusz/mp-units","f4dfdc072ed55ec9bb47c5911223a5ab7825d3fd","mpusz","2023-10-17 06:15:10","false","fix: printing of `half_high_dot` now properly updates the iterator",1,61,1
"mpusz/mp-units","c6627ed20f33cf0429cb8191a4b56f54ef8b4fb0","mpusz","2020-05-10 20:40:54","false","Compilation errors in LA example fixed",16,19,0
"mpusz/mp-units","776c91cf64f1357505f19316faa947e536350ee7","mpusz","2019-01-14 18:54:19","false","Compilation issues fixed",2,3,0
"mpusz/mp-units","0d660898531f8c217c9c8f84426376a20accdd1a","mpusz","2023-10-06 18:53:18","false","feat: :boom: `inverse()` support added for dimensions, quantity_spec, units, and references (`1 / s` will now create `quantity` and not a `Unit`)",1,60,1
"mpusz/mp-units","e846d40a331d4b0edf6a02b14bcf5431441f8348","mpusz","2019-11-02 12:59:11","false","CGS test added",14,13,0
"mpusz/mp-units","8587d5350d9a0abe0866019c58ba36b8dc583758","mpusz","2019-09-10 18:23:10","false","Expects changed to not do anything in a Release build",4,11,0
"mpusz/mp-units","dac7f81a67812c744fd264ae658c9ff958689370","mpusz","2022-08-31 19:12:00","false","fix: `harmonic_` concept fixed to properly account for pi-based magnitudes",30,47,1
"mpusz/mp-units","a0990839a5db61d5398ca4a31ae68a55c9e5d19e","mpusz","2020-12-16 17:40:42","false","build: validate() method support added",20,27,0
"mpusz/mp-units","00a2bce0e820560cb178f6c7ccab7399fdbadc2c","mpusz","2023-10-03 17:00:33","false","fix(example): `latitude` and `longitude` fixed to include `0` for `N` and `E` respectively",1,60,1
"mpusz/mp-units","2328a26992a2f67775afbabbf2f33af277d1cfda","mpusz","2019-11-09 14:42:06","false","Downcasting support added to `quantity_cast` (resolves #26)",13,13,0
"mpusz/mp-units","57e464cc99a236dbf2bea444310ff9c75de4ddcc","mpusz","2019-11-15 19:20:25","false","`quantity` constraints refactored",16,14,0
"mpusz/mp-units","e8fada662c97e178633984d5ffcc3e8f28760a02","mpusz","2023-08-24 18:00:02","false","fix: clang compilation changes for `quantity_cast`",9,59,1
"mpusz/mp-units","0e6142a5d21f4ba814f51a05ff3b49fb06efface","mpusz","2020-09-07 13:06:01","false","docs: missing build dependencies added",17,23,0
"mpusz/mp-units","7737167d1dcf2f9bc1880d880c512729689aeef2","mpusz","2022-05-11 16:10:51","false","fix: unit symbol text output unit tests fixed",34,43,1
"mpusz/mp-units","bb453e4a8ad0475fcb56321c0c2407063774cb1d","mpusz","2022-09-03 10:28:38","false","feat: `cotes_angle` constant added",30,47,1
"mpusz/mp-units","c75eb02ea7da8900167438061c8afb5cbb12ef66","chiphogg","2021-12-30 02:10:29","false","Finish fleshing out make_ratio",30,39,1
"mpusz/mp-units","811b6ba53d8ff726fe40f08d01250fd6c6b553c4","chiphogg","2022-01-28 22:24:30","false","Try inlining the fold expression to satisfy (?) MSVC",30,40,1
"mpusz/mp-units","78a419524f4fc491b368526f720d3bdc854c78ab","mpusz","2023-06-13 14:41:22","false","test: `isq::power` test uncommented",48,56,1
"mpusz/mp-units","80abffc0582f55643a1d9a6d9c58eefe74d5c9e0","mpusz","2021-09-16 07:41:51","false","docs: contributing guide updated",24,35,1
"mpusz/mp-units","772fdab6c161829c4cc7c202ba4fd7e81f079e3c","mpusz","2022-11-07 05:46:58","false","refactor: math_concepts usage",32,49,1
"mpusz/mp-units","f5cc0a2f57885d4c653a82fbba36f841014d8002","mpusz","2019-09-18 17:04:51","false","gcc compiler flags fixed",4,12,0
"mpusz/mp-units","c289bbcfdbc1ed800015c5090f0bd67816033e8a","mpusz","2023-08-02 06:55:29","false","refactor: `parent_origin` renamed to `quantity_point` in `relative_point_origin`",14,58,1
"mpusz/mp-units","a92a315bda6be247ed6df1ec2c0dfe772b897d1c","mpusz","2022-09-01 10:05:20","false","feat: angular acceleration support added",31,47,1
"mpusz/mp-units","a2891296c2181ff1490f417a6ea992841318bca1","mpusz","2020-10-09 21:29:18","false","test: duplication in `chrono` test fixed",17,24,0
"mpusz/mp-units","3628e99aaaaa04c08c30ccb0732debba24b050d3","mpusz","2023-08-03 09:31:58","false","feat: CTAD for `quantity_point` can now deduce `point_origin`",14,58,1
"mpusz/mp-units","81eafbf13e90c6a691fd1008a18b6d06b44107c4","mpusz","2023-05-16 14:02:10","false","refactor: `convertible_result` renamed to `specs_convertible_result`",48,55,1
"mpusz/mp-units","c3c5a740d932a5f12080ac9f7e41b4bf51e034d5","mpusz","2019-10-15 13:20:37","false","derived_units now stores a type provided as a template parameter rather than its value",13,13,0
"mpusz/mp-units","e39555e90dd8f079d68a2ad615709072b0e34435","mpusz","2023-03-30 15:47:47","false","feat: arithmetics on dimensionless quantities extended to units different than `one`",44,54,1
"mpusz/mp-units","6cbf4c46e7c4629b7680912bbf8481a32d783000","mpusz","2023-06-22 18:26:02","false","style: whitespaces fixed to make pre-commit happy",14,57,1
"mpusz/mp-units","ff22bae04e8226504c621df3278495996404b4f3","mpusz","2020-12-09 17:54:36","false","build: CMake cleanup",20,26,0
"mpusz/mp-units","9cdc3e1ad2978635c34baed2283f622d59bfb89c","mpusz","2020-01-31 16:02:52","false","DESIGN doc updated",18,16,0
"mpusz/mp-units","fbc34c8b981e42c3f0f31876841f815394251fbd","mpusz","2023-02-09 05:05:31","false","refactor: `get_associated_quantity.h` moved to a dedicated header file",43,52,1
"mpusz/mp-units","bebaa5482ccca54316f77e0331197309d9d4f295","mpusz","2019-09-10 20:33:54","false","QuantityOf concept added",4,11,0
"mpusz/mp-units","6a43e10fe61a6ca7c9476d76c55d73837991ee86","JohelEGP","2021-02-21 21:16:57","false","test: compile quantity_point_kind_test.cpp",27,29,1
"mpusz/mp-units","e988e1d74e4ae886c1fb8c63b1a68fb7aaca7e85","JohelEGP","2022-07-29 21:17:07","false","refactor: update hacks for LLVM 16",35,46,1
"mpusz/mp-units","5c6cd1b26b1ce0cebda2512dd2f9c44ab8022d0c","JohelEGP","2021-01-02 05:08:47","false","fix: parameter constness in constraints",19,27,1
"mpusz/mp-units","0987fffe99dec8693851ff2ed1998f183bc8a1c3","mpusz","2022-12-23 17:06:38","false","fix: `[[nodiscard]]` removed from a `format()` function",34,51,1
"mpusz/mp-units","33f837a2f1588fc94edb9afe9c97fea5c5298d34","mpusz","2022-05-12 15:10:11","false","build: `conanfile.py` formatting fixed",33,43,1
"mpusz/mp-units","44067dfd19e0905f332c6dba25cf5555aca69050","mpusz","2019-10-14 08:50:40","false",".clang-format updated to the latest version",14,13,0
"mpusz/mp-units","f7f63e8c4cf1e59ffdfcfdb4ab70a854cc00308b","mpusz","2023-09-13 08:41:15","false","refactor: `force_numerical_value_in` refactored to use `force_in` in the implemenation and constraints",3,59,1
"mpusz/mp-units","57ad07573d8507ccdafb3d6ad9ce579213fbd543","mpusz","2023-01-07 08:22:04","true","Merge pull request #418 from Twon/workflow_run_on_requires_matrix

Run on does not have access to environment.  Use matrix for common OS setting",35,51,1
"mpusz/mp-units","11270a16b0352d6576200870d4ce29e90011974c","mpusz","2019-11-04 06:28:49","false","Open questions updated",14,13,0
"mpusz/mp-units","6d619d67efaa52013ef5f6a10878b2cb049fe705","mpusz","2023-09-13 17:53:32","false","refactor(example): `get_magnitude` improved for linear algebra",3,59,1
"mpusz/mp-units","40f205b3815212c7a0e4c204802c8566d322fd6c","mpusz","2020-10-01 11:39:36","false","fix: ambiguous case for empty list resolved",19,24,0
"mpusz/mp-units","b84c74b3300bd98744dfa2e0ca276d39b4bb27c3","mpusz","2023-09-04 09:11:55","false","fix: `fmt.h` did not have header guards for ODR",8,59,1
"mpusz/mp-units","ae4f9a1b2ae2067af0983450b22351f353698af2","mpusz","2020-03-10 10:56:45","false","Another try to make docs deployment",15,17,0
"mpusz/mp-units","4320e674c8053d8b997b87d08d844c414ea90f96","mpusz","2021-11-15 18:17:18","false","build: `msvc` compiler validation fixed",30,38,1
"mpusz/mp-units","a80001c745cf04129b4a158fb109b84bf88529be","mpusz","2019-05-08 03:54:23","false","units::common_quantity_t documentation added",2,7,0
"mpusz/mp-units","97e1425bc570638c5fd57d764c2c2b19fd058552","mpusz","2023-03-05 10:14:45","false","ci: `conan user` was replaced with `conan remote login` in Conan 2.0",44,53,1
"mpusz/mp-units","6608c6dfd4b9ea5562a954cc90ada1a389b2682a","mpusz","2022-07-30 08:44:37","true","Merge pull request #379 from chiphogg/chiphogg/mag_

Explicitly qualify `mag<>` that initializes `mag` member",35,46,1
"mpusz/mp-units","959895d2b9a416a7da865b16ab335d0169340be7","mpusz","2021-02-15 17:34:26","false","build: CMake installation namespace fixed",27,29,1
"mpusz/mp-units","527927e905aa9090dbdfb103abdde64d048c1146","mpusz","2019-10-15 09:27:39","false","pow<3>() check added to the math uni test",13,13,0
"mpusz/mp-units","a7f452cd12709792bef396f5c10b9602f730de43","mpusz","2021-02-17 18:37:20","false","refactor: Got rid of `-Wsign-conversion` warnings on UDLs

Refers to #226",27,29,1
"mpusz/mp-units","2f5be094b223f96d817bbda6fbc2d9e255342376","JohelEGP","2020-09-01 03:19:38","false","refactor: pow10 functions to pow.h",15,23,0
"mpusz/mp-units","a330f9a8f93e42d31d5463e22ea78636f100b69c","mpusz","2020-05-08 19:17:35","false","Constraints for prefixed_alias_unit added",15,19,0
"mpusz/mp-units","3c890fb6d942cbd684e4e3651d06562de4fb8fc6","mpusz","2022-10-21 08:14:48","true","Merge pull request #399 from TheCoconutChef/missing-fixes-for-division-op-in-gcc11

fix: constraint recursion for gcc11 on operator/",31,49,1
"mpusz/mp-units","806ec9ba8c6ed91818b9e1ea2757f09b836a4a8c","mpusz","2022-07-19 17:10:06","true","Merge pull request #368 from chiphogg/chiphogg/print-mag

Migrate remaining ratio template parameters to Magnitude",36,46,1
"mpusz/mp-units","182d806ad292f403d72e6c61bc548405a0721693","rbrugo","2020-03-19 20:39:12","false","New grammar",14,18,0
"mpusz/mp-units","942477455c84ae039f1344ce4e1e6e54d8eca7e9","mpusz","2020-12-23 21:48:29","false","ci: Conan data caching disabled",19,27,1
"mpusz/mp-units","7cbeb35e178cbfc8f444cea0b483f3412d9e9196","mpusz","2019-07-18 08:01:42","false","Double sorting of exponents removed",3,10,0
"mpusz/mp-units","d8e8a94c5b2cd7394befb7f94e3108d669fa71bc","mpusz","2020-09-08 11:13:04","false","style: comment changed for has_symbol",17,23,0
"mpusz/mp-units","e085beef409e19c8d417196b4c244907c13cda51","mpusz","2023-09-13 09:57:22","false","feat: `qp.quantity_from(PO)` added",3,59,1
"mpusz/mp-units","6b2606a8aaae8f2c39c4be6ae5abe13d98c8c7c7","mpusz","2023-02-13 17:33:19","false","feat: explicit `quantity_spec` conversion support added to `quantity` constructor",43,52,1
"mpusz/mp-units","3f5765d2292eaa3cae5c2a58128b71ff490fa545","mpusz","2023-05-26 16:42:43","false","chore: whitespace in gitpod.yml removed to make pre-commit happy",48,56,1
"mpusz/mp-units","1096d8d8bafd6410bdb42ea7704f40b5d505e9ab","mpusz","2022-09-01 10:18:18","false","fix: luminous flux support fixed",31,47,1
"mpusz/mp-units","33d9f43b0f7ff2aec1612338bc33ae97108a187d","mpusz","2023-03-29 15:05:02","false","style: clang-format-16 applied to all the code base",44,54,1
"mpusz/mp-units","1f1258d4e3047a8458eb3efc42e7420d8370a2bc","mpusz","2023-07-11 15:22:32","false","docs: C++23 examples placed first so they open by default in the docs",12,57,1
"mpusz/mp-units","ee10be75354b2bec85b401e52334ed374fb02b26","mpusz","2022-01-28 08:53:41","true","Merge pull request #327 from fdischner/apple_clang

Add support for AppleClang",30,40,1
"mpusz/mp-units","aa15d4dfb4fe3b4c889824b221b2e7f97e1ac173","mpusz","2023-04-21 14:01:28","false","build: `ratio_maths.h` removed from CMake build",46,55,1
"mpusz/mp-units","c3659dbb47869d1de567020122238e4fb47f6487","mpusz","2021-04-06 11:33:27","false","refactor: `UNITS_UDLS` renamed to `UNITS_LITERALS`

Also now the existence of the preprocessor flag is enough to trigger the feature (`#ifdef` instead of `#if`)",32,30,1
"mpusz/mp-units","212c9e05f252ffddbf77a8dba125f05d64d0d14a","mpusz","2021-11-06 09:35:44","false","build: `check_libcxx_in_use()` fixed",30,37,1
"mpusz/mp-units","4a46f44618684f1f4afaf57b29c3f7a4cf9493db","mpusz","2020-06-16 15:12:57","false","Merge branch 'master' of github.com:mpusz/units",18,20,0
"mpusz/mp-units","1e81069d538b0fb22216d35b42b5470aa4d4ee87","mpusz","2023-08-01 09:53:50","false","feat: `absolute_point_origin` convertibility removed",13,58,1
"mpusz/mp-units","628ccde5f0273a6d722f37befe45e583b903cc03","JohelEGP","2020-05-31 01:33:51","false","fix: use trailing requires clause",17,20,0
"mpusz/mp-units","06e360ea6d04f8212f503e2d1bba1e0b58584560","mpusz","2023-06-05 13:14:42","false","refactor(unit test): `angle_test` renamed to `angular_test`",48,56,1
"mpusz/mp-units","d4779ce16d40ff7f94a751469b96d271761ef341","mpusz","2020-03-09 18:56:12","false","configureDoxyfile definition moved before use",15,17,0
"mpusz/mp-units","77a94b6d73f174881bb05a0e7c16b2a25f22c34f","mpusz","2020-05-28 11:37:20","false","Ccompilation error fixed on gcc-9",17,20,0
"mpusz/mp-units","6b1d7d180865985443e0a201b491fd1ab3bacc3d","mpusz","2020-05-07 06:57:38","false","CHANGELOG updated",15,19,0
"mpusz/mp-units","f156bc4c71e92670c02b9e161025ab41b552b617","mpusz","2022-10-19 10:23:04","false","test: `type_list` unit tests added",31,49,1
"mpusz/mp-units","7cc34a3c872de43a1fc345ddee4cff7e1f54cafa","mpusz","2021-09-30 23:17:13","false","chore: Conan initialization fixed",26,36,1
"mpusz/mp-units","6458cd343c2e85d332b46a20d456706f61f5f97a","mpusz","2023-05-26 15:05:33","false","ci: pre-commit related changes",48,56,1
"mpusz/mp-units","d500f3009b0cff333cf56c25bf71f4cb21af5c15","mpusz","2022-08-02 14:47:17","false","ci: `build.py` removed as it is no longer needed",34,46,1
"mpusz/mp-units","0ed43d30871574b6de41ea622bf5346994150364","mpusz","2022-05-11 21:58:30","false","fix: restoring original `as_magnitude` implementation as it was correct",34,43,1
"mpusz/mp-units","6c1062e166238b560c78e789122e1badd3c5971e","mpusz","2022-05-14 09:22:09","false","fix: `UNITS_MSVC_WORKAROUND()` added",34,43,1
"mpusz/mp-units","1a940399c99b27e74421bb80df3c2d17c69c9111","mpusz","2023-04-04 12:28:38","false","refactor: `chrono` types now convert to quantity kinds",45,54,1
"mpusz/mp-units","753c8e06d4acb630c8c3d8408b53c96b025a3bd6","mpusz","2023-06-08 15:37:43","false","test: IAU system tests added",48,56,1
"mpusz/mp-units","bd862d351789a2859a083ac9f77364be25dbadc5","mpusz","2021-04-07 09:26:45","false","refactor: Fine-grained references support added",32,30,1
"mpusz/mp-units","03a417196a4b2b26756b414a6fe85406ca9b72c9","JohelEGP","2021-02-21 17:33:17","false","test: compile quantity(_kind)_test.cpp with downcasting on",27,29,1
"mpusz/mp-units","8b0b477e52b73cd41081c62f75e0cd39f59531c1","Twon","2023-01-06 13:11:42","true","Merge branch 'master' into buildinfo_in_cachekey",35,51,1
"mpusz/mp-units","1326496a354e1bc5a413500ecceac97aa92a56f8","mpusz","2020-06-21 08:56:05","false","A small refactoring of conan and Travid build scripts",17,21,0
"mpusz/mp-units","6364fcdf7ee53a0e28d4a4dba54ac779c366cc5f","mpusz","2023-06-05 17:26:53","false","fix: `IntermediateDerivedQuantitySpec` now also accounts for `kind_of`",48,56,1
"mpusz/mp-units","5224375e0d932d214c8c32c38ff29bf619ac2f63","JohelEGP","2020-12-21 17:25:19","false","Revert ""refactor: <gsl/gsl_assert> to <gsl/assert>""

This reverts commit d7a82713d568ed796dcc409472cd84c44e694c68.",19,27,1
"mpusz/mp-units","f51f972c5564caa9ac793a2f44200e5d3626370f","mpusz","2020-03-11 11:33:05","false","nomnoml graph text added for concepts",15,17,0
"mpusz/mp-units","cce0d2c12b098a9b17c7f9238b6c2897406df52d","HazardyKnusperkeks","2022-08-01 14:13:19","false","Supress ""zero as null pointer constant"" warning",34,46,1
"mpusz/mp-units","1238cc17c29031d26b4fc1cb605f3239c76653ef","mpusz","2022-09-05 10:20:57","false","refactor: `treat_as_floating_point` constraint added for `Rep` in the trigonometric functions",30,47,1
"mpusz/mp-units","8246b06b4a660a5f68cb658afabb5fd2fb71b6c1","mpusz","2022-10-19 17:39:18","false","feat: `type_list_element`, `type_list_back` added; `type_list_split` refactored",31,49,1
"mpusz/mp-units","954dc5d53e3735d550c949ae0471122e894b6d74","mpusz","2022-04-22 11:27:11","false","fix: missing `typename` added for clang-12",35,43,1
"mpusz/mp-units","1d7a566c19fee8f9815a2fd9420595836765b2f2","mpusz","2023-06-22 18:53:40","false","docs: `repo_name` explicitly set fo MkDocs",14,57,1
"mpusz/mp-units","e23f038173729e7b70119957caf07abd5f2396f2","mpusz","2023-10-06 21:38:04","true","Merge branch 'master' into unit_compose_ext",1,60,1
"mpusz/mp-units","f373adb42f013cc646a6c38e2f73f21dbf4d4c16","mpusz","2019-09-30 07:07:15","false","Not needed static_assert removed from quantity class template",11,12,0
"mpusz/mp-units","24803a96cc6a0441b10eecc12f514df613ee6f30","mpusz","2023-08-29 14:05:48","false","feat: math trigonometric functions can now be called with integral quantities

Relates to #485",10,59,1
"mpusz/mp-units","40c809091dabecda6fb1860eeda4cf078214fbbd","mpusz","2023-09-11 17:36:06","false","fix: `numerical_value_ref_in` name fixed for this deduction in `quantity`",4,59,1
"mpusz/mp-units","c95e20c7ea90a5c53d5ba423c2a9420f66548348","mpusz","2021-05-11 17:39:50","false","refactor: `quantity_kind` constructors merged into one

Relates to #221",27,31,1
"mpusz/mp-units","396d39c35b98b79b306d44a12691df3fd9a2bb78","mpusz","2022-09-01 15:18:02","false","test: `AlmostEqualsMatcher` compilation fixed",30,47,1
"mpusz/mp-units","9c0005792c9e24af31990e68e04803ffb9569b33","mpusz","2019-12-11 06:10:28","true","Added info about git submodules and fixed compiler.cppstd=20 conan flag",18,14,0
"mpusz/mp-units","e6227c36fb120f8d613b3245a9be5518e09481bf","aostrowski","2023-02-01 21:31:31","false","Update isort to work around build from source bug

A Poetry update broke isort: https://github.com/PyCQA/isort/issues/2077
The bug occurs when building from source, which is what pre-commit does.
The latest version of isort fixes this issue.",39,52,1
"mpusz/mp-units","6d78ad8646104cd3abd0d464790af721204bbc03","mpusz","2022-10-03 17:34:05","false","build: gitpod support updated",30,48,1
"mpusz/mp-units","dd7c63b242f4b9a7f76dcbc4e6d67ea989eda995","mpusz","2023-02-13 17:34:00","false","fix: quantity construction fixed in some operators",43,52,1
"mpusz/mp-units","8b28a0c6b915d1e1dae8bde1b51a1b9be04e523f","mpusz","2021-10-20 21:16:23","false","chore: documentation requirements now installed properly on gitpod",27,37,1
"mpusz/mp-units","dc2d0dfca71821693d10a073602e9f5801e44397","mpusz","2023-09-13 16:40:51","false","feat: `force_in(U)` added for `quantity_point`",3,59,1
"mpusz/mp-units","ed5749a52b561da703fcc767fb08b649da4b8309","mpusz","2021-07-27 12:40:05","false","refactor: `quantity` `op+()` and `op-()` reimplemented in terms of `reference` rather then `quantity` types

`common_quantity`, `common_quantity_for`, `common_quantity_point`, `common_quantity_kind`, and `common_quantity_point_kind` removed

Resolves #290",26,34,1
"mpusz/mp-units","645570ff578b5476512d2d87dc1540540ef022f4","mpusz","2020-01-31 16:02:27","false","Library updated to the latest cmake common tools",18,16,0
"mpusz/mp-units","8edda2944cc50de6b0a9837203ee6f50fabbaa3f","mpusz","2023-07-07 16:22:16","false","docs: ""Defining quantities"" subchapter added",11,57,1
"mpusz/mp-units","002e3feec340799c5ad6c91c6d345a3a5e583007","mpusz","2023-03-21 22:12:59","false","ci: clang-16 support added to CI",44,54,1
"mpusz/mp-units","309da80c32c9c48c43f3daa6ec8db31d9075a4e5","mpusz","2021-03-31 10:25:26","false","refactor: `unit_text.h` header include moved to text-related targets",33,30,1
"mpusz/mp-units","0768f2739ad09cabd26241b5eb45167f7b6f83f4","JohelEGP","2021-06-29 21:23:01","false","fix: use complete type for MSVC",25,33,1
"mpusz/mp-units","5914ae226058b43d2e6969fbbe14c071bd85f4a1","JohelEGP","2021-03-18 21:22:46","false","docs(src): expand on non-allowed syntaxes",35,30,1
"mpusz/mp-units","3916b29e53f852aa1499aa6170cfc2bb44708281","chiphogg","2022-06-15 21:34:45","false","Move known_first_factor specialization outside namespace",34,44,1
"mpusz/mp-units","826e680b6f3ad52cac07858be634ad1afd9dd70d","mpusz","2020-03-09 18:52:13","false","Minor CMake code formating",15,17,0
"mpusz/mp-units","8632ac1461ef3188ac748d51540b48f4fb7199b0","mpusz","2021-02-23 19:42:34","false","chore: clang-format file updated for clang-format-12

clang-format-12 has still some issues with C++20 constraints declaration but is more usable now.",28,29,1
"mpusz/mp-units","684ef13d95bf85b4717f0bdbb37f793efe765d56","fdischner","2022-01-19 03:54:21","false","fix: derived_ratio calculation

Fixes the ratio calculation for derived units when the base unit ratio is
not one.",30,40,1
"mpusz/mp-units","dd9fd761a35db190a863b45eded00160ad06d498","mpusz","2023-08-02 09:21:09","false","refactor: now we have only one `quantity_point` converting constructor",14,58,1
"mpusz/mp-units","c5919d2cd856076a8a79e4ca8171b6ca2360dbe3","mpusz","2020-12-09 17:47:12","false","build: Conan generator changed to provide more transparent dependency handling",20,26,0
"mpusz/mp-units","539db296ce8a06daa28d88533ddab4e4e4070cdc","mpusz","2020-08-17 21:34:16","false","Conan initialization improved in install.sh",18,22,0
"mpusz/mp-units","c4aa67477cd51ae741633454c9aaadf148173381","mpusz","2020-09-09 22:35:25","false","test: new dimensionless tests refactored to work with downcasting=OFF",14,23,0
"mpusz/mp-units","6218a709ae1eb78b03c4f6bfb247781a8bd699d8","mpusz","2022-03-21 17:13:47","false","refactor: `first_factor_maybe()` replaced with `get_first_of()`",32,42,1
"mpusz/mp-units","d572b50beee34494a5b8d06265dd91cc09638f84","mpusz","2019-04-11 12:54:51","false","README updated",2,6,0
"mpusz/mp-units","cc1d411b2ea9d47bcb9cb51f9f30347d115996d9","mpusz","2023-04-07 20:59:15","false","refactor: small refactoring of values used to initialize an array in kalman examples",47,54,1
"mpusz/mp-units","210f40141604ff45eab6cb19de031120c6e47c05","mpusz","2022-12-27 09:08:59","false","refactor: units ordering do need `type_name` (it also caused worse ordering on text output)",34,51,1
"mpusz/mp-units","565465d284708cd70ccbdb9366ca40f1e1453f13","mpusz","2023-04-10 17:55:25","false","fix: `angular` trigonometric functions now can be constrained with `QuantityOf<angle>`",46,54,1
"mpusz/mp-units","219af8e173661b608166d338c292ce5c7e76a6c9","mpusz","2019-11-02 11:55:22","false","config.h.in deleted",14,13,0
"mpusz/mp-units","a96c34c17ae3ef5f3f3faf73145c28d4f614b3f6","mpusz","2022-12-19 11:49:15","false","fix: `exp()` implementation fixed",30,51,1
"mpusz/mp-units","58903e46e66e5f1f60ed77200c8659f4db3f8dad","mpusz","2021-02-16 18:20:10","false","build: Missing doc dependencies added",27,29,1
"mpusz/mp-units","2ddbb365f38bebe6edb83f4d771f98a4469e41b5","mpusz","2023-08-01 09:59:08","false","feat: `QuantityPointOf` concept now has a special case for `absolute_point_origin`",13,58,1
"mpusz/mp-units","a0b09969eb8833eaf6627a6bb38bc88670de4db9","mpusz","2019-04-16 15:51:49","false","Small refactoring of build.py",2,7,0
"mpusz/mp-units","64248c0752eb92da84f8733f4fcf6dcd980344a1","mpusz","2020-02-23 16:40:18","false","Total energy example added",14,17,0
"mpusz/mp-units","8de74eb6f784b914bb4411162c3bb1d3fd709c5f","mpusz","2023-02-07 06:39:23","false","feat: call operator of reference does not produce a quantity anymore",43,52,1
"mpusz/mp-units","81361afeb3ee28f380ee9b21c6b76fce3649fa22","Twon","2020-09-05 11:17:36","false","Move to stable Linear Algebra Conan package",16,23,0
"mpusz/mp-units","814b731696c290060c14e09e0f684b7ec06e10de","HazardyKnusperkeks","2023-05-23 20:53:00","false","Work around Windows macro",47,56,1
"mpusz/mp-units","7f64e55d044c8a8d9a5c6d4e4f55167409910749","JohelEGP","2021-06-29 21:27:04","false","docs: update changelog for #288",25,33,1
"mpusz/mp-units","f6f7f9bafb63544a1e43328be62e736073800b49","chiphogg","2022-07-29 14:16:49","false","Explicitly qualify `mag<>` that initializes `mag` member

This should fix clang's complaint.",34,46,1
"mpusz/mp-units","632f2785a9ea6127be7ddcef9053eb805d4cdfe6","chiphogg","2022-02-24 01:48:02","false","Clarify section header",31,41,1
"mpusz/mp-units","4603d24f2ce27db9a04da18cc60567487106b125","burnpanck","2022-12-13 16:45:00","false","recfactor: use FMT_THROW inside fmt.h to make code embedded-friendly",30,50,1
"mpusz/mp-units","68b32533a8c914823b05d90bab9b70a4ccaea7fa","mpusz","2023-05-22 18:16:37","false","test: many new `reference` tests added",47,56,1
"mpusz/mp-units","a50492b7abfe5c2005d5521e03a477bad1b2610d","mpusz","2021-02-16 18:19:12","false","docs: Interoperability chapter added",27,29,1
"mpusz/mp-units","eb94f1cc0e26c35b01a66f3f1679285cec2318e8","mpusz","2021-12-13 08:28:33","false","ci: Conan MSVC 14.2 support fixed",32,38,1
"mpusz/mp-units","8b7b6848cd3f2ab4d709b8c8ba814c8bd4bdb406","mpusz","2020-05-09 11:14:19","false","CMake common tools updated",18,19,0
"mpusz/mp-units","be6b5720ab9d38ecd166cb1e0a75046bc1c03dac","mpusz","2020-03-24 22:25:47","false","Custom representation types extended",13,18,0
"mpusz/mp-units","9a51ed55c9130ccd1eeffdbabd9b23d516a3f908","mpusz","2023-05-15 14:19:44","false","refactor(example): NTTP template deduction failure workaround for HAE altitude",48,55,1
"mpusz/mp-units","f34282811d7e6eae1b1e587d35700b20463bb9b5","mpusz","2022-09-03 10:28:21","false","docs: angular quantities documentation improved",30,47,1
"mpusz/mp-units","069712b2223d4c2888a2bdd323dea18426d09e96","mpusz","2021-03-12 22:06:11","false","fix: :sparkles: Visual Studio caught up with terse form of constraints",32,29,1
"mpusz/mp-units","cb861dd81a168f135e073997a4c990d43e7344aa","mpusz","2022-10-25 05:27:08","false","feat: system's definition highly simplified by removing the need for a `system_reference` for most cases",31,49,1
"mpusz/mp-units","f80fcad9206655cab883da238e9a481ee542d272","mpusz","2019-07-18 07:54:35","false","Overview added to DESIGN.md",3,10,0
"mpusz/mp-units","c1e4e57d84a5cd4786764bfdd9b7bf66d2ab6902","mpusz","2019-12-11 08:28:40","false","clang-format + TODOs added to ratio",18,14,0
"mpusz/mp-units","ea53c30bf0defb3632c3a54a82e8929483f653f1","mpusz","2019-09-27 08:00:52","false","A commented code changed in test_custom_unit",11,12,0
"mpusz/mp-units","e5580bcd62e8059921de16b003e56ac7c28441d7","mpusz","2019-09-27 07:59:28","false","Conan badges updated in README",11,12,0
"mpusz/mp-units","c079856d72f0e11ef83daaae3ee06731d8937926","mpusz","2020-02-25 14:42:27","false","Conan stable package link updated in README",14,17,0
"mpusz/mp-units","85ab642fc4e7bd10cff4f72a4690953ce154bd37","mpusz","2019-05-09 01:56:24","false","Scalar concept added",2,7,0
"mpusz/mp-units","4d0afc2df9f2f711c1d58f6224aa07485f49a5da","mpusz","2020-02-19 10:01:36","false","Release notes updated",17,17,0
"mpusz/mp-units","fedfe15f6d1562aa9dc8a6d0b5e01db9638d8a53","rbrugo","2020-04-03 21:02:16","false","Added magnetic induction",13,18,0
"mpusz/mp-units","136af48e70fada3e845d98c7078826ebaee21dfe","TheCoconutChef","2022-10-20 16:00:18","false","fix: constraint recursion for gcc11 on operator/

A similar fix was applied in 417f84258523d2e5f868cf080b7b837328edd501
for the operator*.

Following discussion in https://github.com/mpusz/units/issues/398, it
seems appropriate to apply it for operator/.

Other operators (+, -, %) do not seem to suffer from the same problem.",31,49,1
"mpusz/mp-units","a4183739ad347552e19dfb566fbfe4e486a3c00d","JohelEGP","2022-10-01 14:12:35","false","refactor: make typename optional for Clang 16",30,48,1
"mpusz/mp-units","a168f49b667050bdee65202d73dd05c81036107d","JohelEGP","2021-02-07 01:42:25","false","fix: lack of compound assignment from dimensionless<one>",28,28,1
"mpusz/mp-units","6c73947fe00cfddd86392f444e8d8c7df46bfc47","chiphogg","2022-03-10 23:50:33","false","Satisfy complaint

This line shouldn't _actually_ ever be reachable, but I can't fault the
compiler for not figuring that out.",31,41,1
"mpusz/mp-units","4246f2db2aa67e9a1dc32ebc2ca003af3b3c7f80","chiphogg","2022-01-04 19:01:42","false","Remove unused variable names

Should fix clang builds",30,39,1
"mpusz/mp-units","ed351a4ba3cb6a9f830d8f7691ba1ef7c037ed10","chiphogg","2022-01-28 19:34:50","false","Avoid needing class to be completed",30,40,1
"mpusz/mp-units","9e001b4b4884d7945b857a4819815092983efcbd","JohelEGP","2020-05-31 17:42:55","false","refactor: non-member operators to use terse syntax",17,20,0
"mpusz/mp-units","ef9e6522cac8c9a1942b6f792bfbfe5fa2291d63","chiphogg","2022-06-15 20:50:30","false","Merge branch 'master' into chiphogg/switch-to-mag",34,44,1
"mpusz/mp-units","2c31bf83ec65bfac05fc7184f1a95a259398ba32","chiphogg","2022-04-06 02:01:23","false","Clean up",35,42,1
"mpusz/mp-units","5c0eb0667c97cfa4e48eea011c5259e9e88211e0","chiphogg","2022-04-09 17:48:04","false","Remove `inverse_if_negative()`

Fixes #332.",35,42,1
"mpusz/mp-units","7ead50acfcdb3ad889493c759079e38f3b32dffc","mpusz","2021-05-10 14:45:38","false","refactor: `derived_kind` template parameters reordered to be compatible with a `derived_unit`

Resolves #229",30,31,1
"mpusz/mp-units","c2b851c92b726f0a1baf36f168755a64ae84e57e","mpusz","2020-03-25 16:27:45","false","Linear algebra example updated",13,18,0
"mpusz/mp-units","c5b5756b4d65202d1252619d3e181ea6867c2add","mpusz","2023-03-29 14:47:39","false","refactor(example): constraints added to `ranged_representation`",44,54,1
"mpusz/mp-units","f783d7f274bf6fcbe3978a8414423cf1cb82ee04","chiphogg","2022-01-09 00:34:42","false","Handle `exp` explicitly in as_magnitude()

The new test actually passed without modifying the code.  However, that
might be implementation-dependent (presumably based on canonicalization
of the `ratio` template parameter), so I wanted a more obviously correct
implementation.",30,39,1
"mpusz/mp-units","7820b3ef92d46abfd7f9ba2fc1e4e9cdda95eaa7","chiphogg","2022-02-06 22:11:42","false","Clean up a few requires clauses",30,40,1
"mpusz/mp-units","c8ec771d69c1e6533d5d75a7248702ccd51b70c7","chiphogg","2022-06-15 21:19:39","false","Help factoring for eV/c",34,44,1
"mpusz/mp-units","438feb30014b9c2955f5a59ef985724311e767f7","chiphogg","2022-03-19 17:05:55","false","Remove offending unit test

Apparently, the constexpr depth which clang and MSVC can handle is too
shallow for me to write a unit test that works on all supported
compilers.",32,42,1
"mpusz/mp-units","4409fa01ca330a367028b6de6a568514192b5d84","mpusz","2018-09-30 01:08:02","false","Library refactoring based on Walter Brown's feedback",0,0,0
"mpusz/mp-units","530fb41ada97ca36475e9e9bef7bd5b0c561752d","JohelEGP","2020-08-17 23:28:47","false","docs: add section on quantity points",18,22,0
"mpusz/mp-units","6d488071fc9753cee456d6011911030b72a9baf6","mpusz","2023-06-15 14:27:28","false","refactor: clang still does not support C++17 feature related to template tempaltes with default compilation flags",15,56,1
"mpusz/mp-units","d824be6822449b361d875fe2a7e7f006b16d31fa","mpusz","2023-10-25 12:13:00","false","docs: ISO papers reference added to docs and README",2,61,1
"mpusz/mp-units","9f95799288e6e9c130f65c1bb930de5dcbffc51b","mpusz","2021-11-08 17:37:37","false","refactor: got rid of `FMT_RUNTIME()` as it is not the part of C++20",30,37,1
"mpusz/mp-units","c12b3b1cccbc215937fb1f70cd2224a28711f545","mpusz","2023-08-01 13:51:49","false","feat: lvalue reference overload of `number()` added

Resolves #476",13,58,1
"mpusz/mp-units","2af2a28699a37d8fe961536c16fbc1fa78897566","mpusz","2019-04-11 17:56:09","false","Design documentation updated with unit prefixes",2,6,0
"mpusz/mp-units","fb3ab794019f348c08c11fad3b2df789e5bf6718","mpusz","2020-06-16 17:15:40","false","Missing constraints added for `prefixed_alias_unit`",18,20,0
"mpusz/mp-units","f0e1e202db2d489bc98ce178df948a23c2c3b4b0","mpusz","2023-09-04 09:20:00","false","fix: `latitude` and `longitude` are now quantity points and have proper formatting",8,59,1
"mpusz/mp-units","620835db97d52c5015bc620441276b9a6623d537","mpusz","2021-09-10 06:08:02","false","test: Numeric rounding error commented out",24,35,1
"mpusz/mp-units","506408a3164871a05ec49f17517e1b3fa8c16b9a","mpusz","2021-11-08 18:05:08","false","fix: fmt_test compilation fixed",30,37,1
"mpusz/mp-units","3299f53a0f9f31e3edc394a6598895847b70b918","mpusz","2023-06-22 07:08:45","false","docs: documentation pages stubs added",14,57,1
"mpusz/mp-units","673de3af4ca67e16ec79dbb3a5ae81ab1f549212","JohelEGP","2020-09-10 00:14:04","false","test: dimension concept with quantities differing in exponents",14,23,0
"mpusz/mp-units","675d77f3baaa17526c2dd01c08d36c11fc2c481a","JohelEGP","2020-09-08 03:05:18","false","fix: unconditional typename",17,23,0
"mpusz/mp-units","b52da14e3617644119066c7f493072f2ad82d61b","JohelEGP","2022-03-09 00:38:07","false","refactor(bits): remove unused header",31,41,1
"mpusz/mp-units","59fa420272ce2772b804dee56dfd5c5bc363097e","chiphogg","2022-05-12 16:52:05","false","Fix remaining builds/tests",33,43,1
"mpusz/mp-units","7baaefe813e3fecb306f21ea8e4d77d106f57374","RalphSteinhagen","2021-06-27 11:42:55","false","added inheritance unit-test and made is_quantity<T> more specific",26,33,1
"mpusz/mp-units","eaca8d073a7aa7ce4f3faa8d0bb42293d6862d26","mpusz","2023-05-14 10:58:32","false","refactor: `convertible_to_result` renamed to `convertible_result`",48,55,1
"mpusz/mp-units","c3fa014aacaafc6e142c2edd6dc38230283cc6c6","mpusz","2019-04-08 18:38:49","false","gcc-7 removed from Travis CI as it does not support C++20",2,6,0
"mpusz/mp-units","b4828d243d9332a17e406e4c0c9767811b5870b6","mpusz","2022-11-11 20:33:24","false","refactor: first examples refactored for V2",33,49,1
"mpusz/mp-units","3042135eb905c6cbf6046d5ceacb1432bd9e44b7","chiphogg","2022-01-11 17:56:14","false","Try fixing clang build failures",30,39,1
"mpusz/mp-units","712a38eda6350d80b989c9d52d52b00505811d1e","chiphogg","2023-01-14 14:11:21","false","Fix badge image links

For background, see: https://github.com/badges/shields/issues/8671",36,51,1
"mpusz/mp-units","2bdc778ab6785b84cd42bb3f3be062d715f51009","chiphogg","2022-05-12 18:19:20","false","Constrain template",33,43,1
"mpusz/mp-units","7dda8319a239c1d67c2962b47da89449d8fee7c6","rbrugo","2020-04-09 17:21:27","false","Added molar energy",13,18,0
"mpusz/mp-units","8491e94c94a0dc14aea7f75e6bd82edbae24a0d7","JohelEGP","2022-03-23 22:03:44","false","refactor(bits): remove unused headers in external/type_list.h",32,42,1
"mpusz/mp-units","942009f4f0e106374430f13afb0eb73e4c0db69e","mpusz","2021-07-28 11:09:54","false","ci: ""Ubuntu GCC 10.1.0"" removed and ""10.2.0"" renamed to ""10.3.0""

""Ubuntu GCC 10.1.0"" is no longer provided on `ubuntu-18.04` image",25,34,1
"mpusz/mp-units","0c0d097586b555f7bce66338dba91fa33ab609fa","mpusz","2020-06-19 17:37:18","false","C++20 comparison operators refactored",17,21,0
"mpusz/mp-units","5f31ccfc50fd6b950064958c1afa4639cdac64c3","mpusz","2020-09-05 20:01:47","false","CMake common scripts updated",16,23,0
"mpusz/mp-units","37cfc53d1d277168cb9dfc5a0f0e827d6c531c11","mpusz","2021-03-30 11:21:05","false","refactor: IWYU applied to the source files

`alternative_namespaces` examples left out as I consider them a subject for removal in the nearest future.",33,30,1
"mpusz/mp-units","0322c4f9b47c4b48f4403abf81f0032e98f90751","mpusz","2023-08-27 19:37:45","false","docs: broken link fixed",9,59,1
"mpusz/mp-units","aab2a20505b2d8e9081bc7b1f1b539b74725df0c","mpusz","2022-08-02 15:09:05","false","build(conan): Environment variables replaced with Conan configuration properties",34,46,1
"mpusz/mp-units","22eda11beac0f86e9b25e25a3d161f4b41e921e5","mpusz","2019-12-07 15:30:40","false","More refactoring

- unknown_unit and unknown_dimension added
- the support for remaining SI units added",18,14,0
"mpusz/mp-units","c3d7359ca372675b485cdacfd705028f956390dd","mpusz","2019-09-19 03:55:16","false","`units` removed from a `std::experimental` namespace",4,12,0
"mpusz/mp-units","efb89c9f7bc1869ab34e2d793f6c5772546bf412","mpusz","2023-07-08 11:13:40","false","docs: ""Character of a Quantity"" chapter added",12,57,1
"mpusz/mp-units","5eb9b047bf12d5c2dfef00ba6f7c5adecf7399db","mpusz","2021-01-27 16:48:53","false","build: cmake_paths is now supported by Conan recipe",27,28,1
"mpusz/mp-units","c641f1873f42725d1c2e1c9a81501e8ccbbb08bc","mpusz","2021-02-16 15:19:57","false","docs: Documentation updated",27,29,1
"mpusz/mp-units","da3fcf091e98554513bebf17dd5ef9452bf2677c","mpusz","2023-07-30 16:29:35","false","docs: initial version of ""Affine Space"" chapter",12,58,1
"mpusz/mp-units","04588d9c8b98f8702abf9988195262d118a0374d","mpusz","2023-10-01 03:36:23","false","feat: `Magnitude / Unit` operator added",2,60,1
"mpusz/mp-units","c12bf207033cb5d3ff2bf4d406c79d1f95d5b0e1","mpusz","2023-08-01 13:53:45","false","feat: lvalue reference overload of `relative()` added

Relates to #476",12,58,1
"mpusz/mp-units","12b67923bc45fe89ff84a43aabf2dc287412e88a","mpusz","2019-12-11 15:20:08","false","CGS tests added",19,14,0
"mpusz/mp-units","e6eb9085039119be4994dd8ef262be80515d1de3","mpusz","2023-04-03 15:44:34","false","feat: convertible quantity kinds can now be compared",45,54,1
"mpusz/mp-units","ad895b4651b2d44a41cacc0f3f183d2fc89b0b92","mpusz","2019-11-08 14:35:18","false","Small refactoring of QuantityOf",13,13,0
"mpusz/mp-units","30232186f15384ab37aa40d1298807610f9fa96c","mpusz","2020-03-10 20:12:00","false","Bitrate UDLs refactored",15,17,0
"mpusz/mp-units","31f45cee793066c2a3a307a3bea7d32bbb398551","mpusz","2023-09-26 10:45:51","false","ci: workaround for Conan not supporting clang-17",2,60,1
"mpusz/mp-units","0ca3ff75fff27f52bfe44810384464a0073811c9","mpusz","2023-09-26 10:32:51","false","ci: Clang-17 added to CI",2,60,1
"mpusz/mp-units","c5a0539cef215b9fb95dbbd48c41915f4b1c6cd2","mpusz","2023-06-02 08:53:34","false","refactor: all non-trigonometric math functions made constexpr",48,56,1
"mpusz/mp-units","6c4dc95897dd39642a6c2f78343620a4d3ebe060","mpusz","2021-03-19 06:24:53","false","Merge branch 'add_si_prefix_bit' of https://github.com/go2sh/units into go2sh-add_si_prefix_bit",33,30,1
"mpusz/mp-units","750af32f0649b5930e3c5b7b3e6ae4f2fcc1adb4","mpusz","2023-08-29 12:21:51","false","style: whitespaces cleanup",10,59,1
"mpusz/mp-units","0c86d1da2b29334ab7ca3f9bd01c455448d516cb","mpusz","2020-02-15 08:06:14","true","Syntax highlighting added for code block in INSTALL",17,16,0
"mpusz/mp-units","17e6b0d75dd00bf7ca127157f9c28979c4182fbf","mpusz","2019-12-28 17:59:53","false","Small refactoring of new ratio (resolves #14)",17,15,0
"mpusz/mp-units","edf59ac47ca914a08bec318f9b715163e24aab9d","mpusz","2022-08-02 15:25:40","false","docs: Usage page updated for new Conan configuration properties",34,46,1
"mpusz/mp-units","57dc18616255b1a59b9ee911b87314cc8719861e","mpusz","2022-03-21 18:00:58","false","chore: clang-12 and clang-format-15 added to gitpod",32,42,1
"mpusz/mp-units","1b4e8a21277f465f1e7339c919421481ca2dd09c","mpusz","2019-12-01 18:47:58","false","Units and dimensions redesigned",18,14,0
"mpusz/mp-units","91f26759d6bd24cab85176d56d7422c7ef7b5a78","mpusz","2022-12-01 19:59:16","false","refactor: more unit tests refactored",33,50,1
"mpusz/mp-units","7c41561c0dcf79a4080c7600c956e254469dcdbf","mpusz","2023-08-29 12:17:14","false","docs: ""Basic Concepts"" chapter revised",10,59,1
"mpusz/mp-units","2bde0e62b2308fc2aa456cc712c362a30195cd4c","mpusz","2019-11-02 12:54:43","false","Downcasting facility refactoring",14,13,0
"mpusz/mp-units","978ce4093a65a953fc3706d8e6ef000143a6c10a","mpusz","2023-05-16 12:08:36","false","feat: `quantity_point` converting constructor now takes into account convertibility of the `quantity` type",48,55,1
"mpusz/mp-units","02bf5143557676a7f3cf6082454570f9fec0f4fe","mpusz","2022-11-30 17:00:04","false","feat: equality comparison support added for references",34,50,1
"mpusz/mp-units","00d182e133ea9e47939907a5381e76cb7ca09c69","JohelEGP","2021-02-06 06:20:00","false","fix: operators to behave like the underlying type's",27,28,1
"mpusz/mp-units","5f21106a0284a036998d32acc2e5cde654d9a364","JohelEGP","2020-05-31 18:03:18","false","refactor: deduction guide to be unconstrained",17,20,0
"mpusz/mp-units","0b87e7c99c190e085852a65e74e4f49c2784d949","JohelEGP","2021-03-18 20:09:00","false","refactor!: require explicit number for references

Addresses:
- https://github.com/mpusz/units/pull/261#discussion_r596651065
- https://github.com/mpusz/units/pull/261#discussion_r596664550
- https://github.com/mpusz/units/pull/261#discussion_r597132294",35,30,1
"mpusz/mp-units","88a3b9b50a7f7b772479933a1e8a8c38c79577ad","mpusz","2019-05-08 15:06:45","false","Portability issue fixed in a unit test",2,7,0
"mpusz/mp-units","a5fff2f21060aee559b145acd033e32e47e82719","mpusz","2022-03-10 18:05:41","false","Merge branch 'master' of github.com:mpusz/units",31,41,1
"mpusz/mp-units","3e66ea93b948565b727e67ffac878ca8ed3136eb","mpusz","2021-01-04 18:37:38","false","fix: Added constraints for `quantity_values`",22,27,1
"mpusz/mp-units","40c08c0eaee43d7922ae2d5d59eecf2a774e88d8","mpusz","2023-05-26 13:56:43","false","build: `catch2` updated to 3.3.2",48,56,1
"mpusz/mp-units","81949e5ff17669704b2e7a1c58f817510fc4b9c1","mpusz","2023-02-14 16:21:54","false","refactor: explicit conversion constructors of quantity removed",43,52,1
"mpusz/mp-units","e58c8054bc112c659eaab2f855884038d379be5c","mpusz","2020-05-13 13:33:29","false","Doxygen documentation added",16,19,0
"mpusz/mp-units","bb9b5e495a0457d4e71acceb5db6765455b3ee98","mpusz","2022-03-23 12:23:26","false","chore: Sphinx live preview fixed in Gitpod",32,42,1
"mpusz/mp-units","096e16c835dfa5c13f33df95d285194b234d93f0","mpusz","2020-05-14 11:47:20","false","CHANGELOG updated again",16,19,0
"mpusz/mp-units","31e76f03c1479300175c017e2424fbd7418ea3f8","mpusz","2020-05-08 19:16:50","false","prefix_family in prefixed_alias_unit fixed",15,19,0
"mpusz/mp-units","af827ca50f4df51fe36ce60d36665801e985af5e","mpusz","2023-08-26 17:27:48","false","refactor: small math functions refactoring to make clang happy",9,59,1
"mpusz/mp-units","407e339b079a8424b6bf076c393ff6249ca91887","mpusz","2020-03-10 11:01:54","false","deploy.sh replaced with inline commands",15,17,0
"mpusz/mp-units","3ec57f0c58886530884b8bbba3e3568d6f3f14e6","mpusz","2023-10-15 15:06:45","false","docs: admonition in ""Value-preserving conversions"" chapter removed",1,61,1
"mpusz/mp-units","340d2f5d2fb35e0b8120a2c6ea1c1cd337491240","mpusz","2023-06-08 17:11:03","false","test: angular tests updated to conform to the latest quantity creation policy (irrational magnitudes require floating-point representation type)",48,56,1
"mpusz/mp-units","60eaa4728dadc622bfaad887ec49d36db303d742","mpusz","2023-03-29 15:03:34","false","ci: pre-commit updated to use clang-format-16",44,54,1
"mpusz/mp-units","9e5a95edefb59c09e1b83d0d74c442f6e2dd9079","mpusz","2022-12-25 16:33:47","false","feat: `deg` unit symbol added to SI",34,51,1
"mpusz/mp-units","56c2d5090bc18b1349cd0851842463ca691f78b0","mpusz","2020-12-23 19:22:13","false","test: test_package made compatible with the VS2019",19,27,1
"mpusz/mp-units","6f88a03285c4f997102a6f1f9cf2d6b1402ff33c","mpusz","2020-09-10 11:02:33","false","fix: ambiguity of operators in case of unknown_dimension resolved",15,23,0
"mpusz/mp-units","8e1539bf2257b66693baef79b8d67da132a7539c","RalphSteinhagen","2021-06-27 11:42:55","false","added inheritance unit-test and made is_quantity<T> more specific",26,33,1
"mpusz/mp-units","2e29ddfb6961652b211259b3a25c07a2df2b90ab","mpusz","2021-09-02 19:44:12","false","docs: Changelog updated",24,35,1
"mpusz/mp-units","340e62f833c8134961eeccd0ce2478b4dc20e707","mpusz","2021-04-16 11:59:41","false","refactor: IWYU",32,31,1
"mpusz/mp-units","772d0e08894eead310452d5e961901124aed879a","mpusz","2018-10-01 09:44:35","false","CMake tools updated",0,0,0
"mpusz/mp-units","f4fbac86b43fc8b87bdfcc7f0e140d1ca59129e2","mpusz","2022-03-18 07:20:36","true","Update src/core/include/units/quantity.h

Co-authored-by: Johel Ernesto Guerrero Peña <johelegp@gmail.com>",31,42,1
"mpusz/mp-units","3c2e6d06bb1298b93dce2548bf90986c2a9900ae","mpusz","2023-02-13 17:55:54","false","refactor: ISQ system refactored to benefit from the latest changes",43,52,1
"mpusz/mp-units","fb12fd7672d07ff3594e7d8a45d934efa963b941","mpusz","2019-09-26 20:55:18","false","Open Questions updated",6,12,0
"mpusz/mp-units","4051a745543f3243e7ae5af8a6d789a12f81b7cd","mpusz","2021-02-15 18:44:19","false","docs: Linear algebra docs fixed",26,29,1
"mpusz/mp-units","3dc34d2d2eeec8e1e5feb1612f0e7778d4c62bdd","mpusz","2020-02-02 14:25:00","false","Linear Algebra dependency removed",18,16,0
"mpusz/mp-units","4b6a7ebb391fd9e190a36d98a44126e9efb50a7d","mpusz","2019-04-11 16:40:54","false","Down with typename",2,6,0
"mpusz/mp-units","571df5ed3370abe347bf3af13e1cd58bc0581a85","mpusz","2021-11-23 13:37:08","false","feat: conversion from `quantity_point` to `std::chrono::time_point` added

Refers #316",30,38,1
"mpusz/mp-units","ce301748dd6dc9aede09d1b98055a3e8ec49b9d0","mpusz","2020-05-10 15:31:47","false","Velocity renamed to Speed (resolves #103)",17,19,0
"mpusz/mp-units","9891eab82b4ac112f9f2b4a1bd943fb7e3a75ed1","mpusz","2022-09-01 08:45:53","false","refactor: `radian` restored to be the reference unit for angle",30,47,1
"mpusz/mp-units","89a9551da07d091602541d247868b1de677b90a5","mpusz","2022-09-02 18:08:14","false","feat(example): `asin()` usage added to the glide computer example",30,47,1
"mpusz/mp-units","e98215c34788e7ee4a16859644fad4a166abf131","mpusz","2023-02-14 11:58:54","false","refactor: examples refactored to benefit from the latest features",43,52,1
"mpusz/mp-units","fb71971ef0b2d0d0ee462cd2492f6fc503396168","mpusz","2023-10-14 09:44:50","false","fix: iterator is now properly updated for all cases in `unit_symbol`",2,61,1
"mpusz/mp-units","f8b1c8d8a20721dc8688136ea1464cff8f9c8a93","mpusz","2020-02-11 22:55:02","false","Initial constants support added",16,16,0
"mpusz/mp-units","8476517185bd49c2651b05b77a35c194242fd562","mpusz","2021-02-16 15:21:05","false","refactor: box_example modernized",27,29,1
"mpusz/mp-units","662df7c4066cf967296d139468367215b664efe5","mpusz","2022-12-31 17:18:27","false","docs: `CONTRIBUTING.md` instructions updated",34,51,1
"mpusz/mp-units","daf6d2fb7a95f3fc610c54e6623f43738a942fe3","mpusz","2022-12-25 16:30:08","false","refactor: downcasting-specific build options removed",34,51,1
"mpusz/mp-units","d5549ff92d4823d56d1d3b71216b943edaf303a0","mpusz","2023-10-18 15:17:09","false","feat: `zero_Fahrenheit` point origin added",1,61,1
"mpusz/mp-units","826942947e32474e88eb26a8bb56ae20a9480c38","mpusz","2019-12-17 08:21:11","false","Merge branch 'new_design'",20,15,0
"mpusz/mp-units","f3d9828abd07280eb06b77c9236c3d9dc257a109","mpusz","2020-09-06 21:54:14","false","constinit added to C++ keywords in docs",16,23,0
"mpusz/mp-units","7fce53e2855332e0405d2759da1f2ca7d5f93f41","mpusz","2023-06-29 14:09:38","false","docs: ""System of Units"" chapter added",11,57,1
"mpusz/mp-units","0033319451f0dc812364ef96b288f2c99f45c770","mpusz","2022-05-05 14:12:54","false","fix: shadowing compilation errors on MSVC fixed",36,43,1
"mpusz/mp-units","92c70f1a4e1779f3bb12208f0181354e65df3148","mpusz","2022-12-16 17:15:48","false","feat: `quantity_spec` support added",30,51,1
"mpusz/mp-units","d64d26a4c4d2273f868550029c179b75a3022fbf","mpusz","2020-10-07 12:29:12","false","refactor: interoperability with quantity-like types simplified

Type trait specialization for each `quantity` type is not needed anymore.

Relates to #33.",17,24,0
"mpusz/mp-units","0b2ce0c351e679b7736bc20e0d944a8649212a3c","mpusz","2019-04-07 06:56:20","false","Definition of conan remotes moved to build.py",2,6,0
"mpusz/mp-units","2cf736a1e685457adf0e6e4b746f406c16a53c00","mpusz","2022-12-29 19:18:48","false","feat: preventing possible future `units` crash when `using namespace std;`

Resolves #317",34,51,1
"mpusz/mp-units","f2c14dfa3441359915c0e5798fe181a8cb80220d","mpusz","2020-03-25 14:59:45","false","Lack of CTAD for aliases fixed for gcc-9",13,18,0
"mpusz/mp-units","98203afa297548a590fd7319c44215d0b29980d5","mpusz","2019-07-24 09:58:15","false","units moved to std::experimental namespace",4,10,0
"mpusz/mp-units","75274e13cae38ff325d807578ed40765a20d51ac","mpusz","2020-06-17 12:59:42","false","CHANGELOG updated",18,21,0
"mpusz/mp-units","a7cd8d5131f52c58c20dfd85b524a25eb7df73ca","mpusz","2021-03-30 12:01:58","false","build: Local directory added to include dirs for `glide_computer`",33,30,1
"mpusz/mp-units","61fadb8ebc7a4f5f6288627df51efb07ad23d7c4","mpusz","2020-05-14 14:00:38","false","dim_velocity renamed to dim_speed",16,19,0
"mpusz/mp-units","325cbc8fa9dc0e1a6c66f595795927de2a5561ea","chiphogg","2022-01-08 23:14:22","false","Finish adding tests",30,39,1
"mpusz/mp-units","d4b49b5edbf0aef159bd3bb41143db5e0010c844","mpusz","2021-04-29 12:16:20","false","ci: calling `conanvcvars.bat` fixed",32,31,1
"mpusz/mp-units","eb5ff0bf993c248a3d64c46ff2b69a928883d219","mpusz","2019-08-08 11:49:51","false","cmcstl2 library updated to 2019.08.07",4,10,0
"mpusz/mp-units","764176dcad5f8bf751045f490fcc8e5ec71dc2d2","JohelEGP","2020-05-31 01:53:24","false","fix(gcc9): comparisons",17,20,0
"mpusz/mp-units","b58b696e92e3d9f6e5cbeec13e54a24bf3bec97b","mpusz","2022-03-18 08:10:27","false","style: clang-format formatting improved with additional parenthesis",31,42,1
"mpusz/mp-units","d9697afd6799e4edc80877fbaefe77b5985059bf","mpusz","2023-06-19 12:02:31","false","feat: non-SI units got their own namespace `non_si`",14,57,1
"mpusz/mp-units","3a1c16e070f3483b2d6b3ef88baed9408283a325","mpusz","2020-06-16 18:20:08","false","Conan build policy changed to a list field",18,20,0
"mpusz/mp-units","18669735322e6861f02f0e547994860d4132e726","mpusz","2023-04-11 07:12:48","false","refactor(example): `get_length()` renamed to `get_distance()`",46,54,1
"mpusz/mp-units","4938e9d5c0051024688bebe9e12050fbc191b7d4","mpusz","2022-11-04 18:29:05","false","feat: Added support for natural units-like systems + `dimension_one` cleanup",32,49,1
"mpusz/mp-units","18746db840052ec749cdd1d8432b53d29eb6b2bf","mpusz","2021-03-15 20:36:15","false","ci: clang support added to CI",32,29,1
"mpusz/mp-units","46e1e5e9322c7480b84e24011b86c4fa8b398a63","mpusz","2021-04-16 10:40:52","false","refactor: US system renamed to USCS",32,31,1
"mpusz/mp-units","2986846cd1774a59ba0b4189c7c33e21d30ff118","mpusz","2021-08-10 12:16:41","false","ci: clang-13 CI added",25,34,1
"mpusz/mp-units","f8add0848423e42461e991a334b4eb31f189771a","mpusz","2022-11-11 02:48:22","false","refactor: `quantity_equivalent_to` renamed to `weak_quantity_of`",33,49,1
"mpusz/mp-units","7445a2bcf1f615ede6481a6e20cf9363e50d4910","mpusz","2020-06-22 14:23:18","false","glide_computer code cleanup",19,21,0
"mpusz/mp-units","c3077238c07303b0cddc72e5c76fc2851d96f1f2","mpusz","2023-08-26 18:43:58","false","docs: CRTP full name fixed",9,59,1
"mpusz/mp-units","57d655062ce88c107209789d9bc6f7a788c75604","mpusz","2022-12-22 20:26:51","false","refactor: `quantity_spec::operator[]` return type constraints improved",34,51,1
"mpusz/mp-units","1f16a643401ce6cb826532bf8816ae5d3b7aaf22","mpusz","2020-12-16 20:00:00","false","build: Project documentation is not being installed anymore",20,27,0
"mpusz/mp-units","725d193122727dd5ab5ef94f0d7ddfc46f6c0789","mpusz","2022-05-11 09:49:14","false","refactor: :boom: ! `U::is_named` removed from the unit types and replaced with `NamedUnit` concept",34,43,1
"mpusz/mp-units","8da791f8babd3c4945a633b358f7cbfb9cbbec65","mpusz","2023-04-03 15:47:13","false","refactor(unit test): math tests refactored to not use removed constructor",45,54,1
"mpusz/mp-units","37473eb8ad9f6ca425b2e22378d1d12aaede3249","mpusz","2021-03-17 12:46:28","false","refactor: `core-io` and `core-fmt` separate modules added",32,30,1
"mpusz/mp-units","cdf9f929c39c85e770104b946137e4296f14ed7b","mpusz","2019-05-07 23:39:21","false","Refactoring part of quantity interface (similar changes applied to the rest of functions make gcc crash)",2,7,0
"mpusz/mp-units","c3c80fde11305b0da919018fb78bcd5893cbd272","mpusz","2019-12-11 10:27:51","false","Spaceship support added (resolves #19)",18,14,0
"mpusz/mp-units","56d0b6d4a232276048bed8c5dfb83c5fafdd4369","mpusz","2020-05-08 20:57:21","false","Typo fixed",15,19,0
"mpusz/mp-units","e22f9b989bb11e8dd45bd48fcd78e4b6be301e22","mpusz","2020-09-05 09:54:09","false","Common cmake tools fixed",16,23,0
"mpusz/mp-units","daadccebe0a276660293c1aecc124cd81398b052","mpusz","2023-10-17 06:25:13","false","refactor: additional constraints added to the `fixed_string(CharT)` constructor",1,61,1
"mpusz/mp-units","a2f28feb045f58ee3c4e8838617c4a13ff71d773","mpusz","2022-03-17 17:12:53","true","Merge pull request #338 from hofbi/contributing-md-typos

docs: fix typos in contributing.md",31,42,1
"mpusz/mp-units","f86297547df321503fa83b0ce9fc0e8e6f304174","mpusz","2023-07-07 18:39:58","false","docs: ""Faster-than-lightspeed Constants"" chapter renamed",11,57,1
"mpusz/mp-units","4aeb9d305ac76cbe719f8a4294b397385bc85b67","JohelEGP","2020-09-06 02:53:19","false","test: what we mean

a concept can fail for whatever requirement,
and maybe the ""main"" one actually works
(== in this case)",16,23,0
"mpusz/mp-units","9b19dcf193352603c6b631fe2d04eae9f01e7191","JohelEGP","2022-03-24 20:57:12","false","refactor(bits): remove unused header in prime.h",32,42,1
"mpusz/mp-units","e1a173a02d8d5ec790ad76013dfa3944f65e833f","chiphogg","2022-07-07 17:09:42","false","Migrate prefixes to Magnitude",34,45,1
"mpusz/mp-units","c8421156046024b5ce630bfbb7e5ed0b13797864","JohelEGP","2020-09-09 05:52:15","false","test: dimensionless common type",13,23,0
"mpusz/mp-units","98c15a235653f6bd21fcd9816fe4fc7a9c9f5015","JohelEGP","2021-01-18 19:55:55","false","fix: quantity_cast between different, equivalent dimensions",24,28,1
"mpusz/mp-units","471504bb12a2244c812647a41b2c6e68b75caeb7","RalphSteinhagen","2021-07-27 13:24:03","true","Merge branch 'mpusz:master' into master",25,34,1
"mpusz/mp-units","8ceb224908db2694ccffe68c7d5cce437e63ce62","kwikius","2020-03-11 18:48:22","false","example, kalman filter : remove #include <iomanip> sinc mpusz/units uses format syntax for io now",14,17,0
"mpusz/mp-units","1cf58f37964559a24378152e704bdf28460e9e05","mikeford1","2020-06-17 10:10:21","false","added to fps length, mass, force and pressure",18,21,0
"mpusz/mp-units","b1b63e1b3af5e5508b28bb58309e0c2d44e6bcc6","mpusz","2019-12-14 10:44:56","false","2 parital specializations of a derived_dimension split to different types",21,14,0
"mpusz/mp-units","f964dbd116255e1cf2275a6be2726e036d2ac8b3","mpusz","2022-04-19 09:35:49","true","Merge pull request #356 from alex-700/fix-typo

docs: fix typo in units.rst",36,43,1
"mpusz/mp-units","1c5061338fc023dc3e7e4d29c536756740f22fcf","mpusz","2022-08-02 06:30:14","false","ci: GitHub actions updated with CMake presets usage",34,46,1
"mpusz/mp-units","6f7c106cf66149e5132dad42332cd2d9a302aca7","mpusz","2021-04-29 06:33:05","false","ci: clang-12 is now officially supported by Conan 1.36",32,31,1
"mpusz/mp-units","dd4679459d82303a3545f76bf648a64726021d87","mpusz","2022-08-03 10:29:49","false","feat: `hypot` support added",34,46,1
"mpusz/mp-units","8e8f17cb960186248063d61889a05e55a40135b7","mpusz","2023-04-03 15:45:43","false","fix: `get_equation` now calls proper `pow()` overload",45,54,1
"mpusz/mp-units","e5af317a0ad5bd0ee8ca71986346fa4b8f478651","mpusz","2021-04-07 17:07:55","false","refactor: avg_speed example refactored to better use literals",32,30,1
"mpusz/mp-units","9f94a73bba80e7984fd96a06fd5cecbc4b710cdf","mpusz","2020-06-29 18:30:59","false","Custom is_same implementation added",19,21,0
"mpusz/mp-units","8ffc46ba750c5b6ba2228b650317f516825182f2","mpusz","2019-12-09 16:19:58","false","CGS support added",18,14,0
"mpusz/mp-units","1c4624303e7274aaa2c6a68ec1a10742d4473ced","mpusz","2020-01-14 11:23:32","false","Whitespace cleanup",16,15,0
"mpusz/mp-units","8ddd7e123399d7b7b373aa5ab61abc4ed4d2695c","rbrugo","2020-04-07 21:20:54","false","Added concentration",13,18,0
"mpusz/mp-units","fbc6744bdbabb8e32e4d115474f9c7a6a499f579","mpusz","2022-04-27 17:33:44","false","fix: `ω`, `au`, and `Da` allowed to have SI prefixes

Relates to #359",35,43,1
"mpusz/mp-units","2dd8c90250bf49da616396210a57803010992991","mpusz","2020-10-07 10:02:08","false","feat: :sparkles: interoperability with `std::chrono::duration` and other units libraries

Resolves #33",17,24,0
"mpusz/mp-units","a0c625256719ec04b1be948bccb57c776774c7ef","mpusz","2022-04-19 16:45:13","false","refactor: `mi(naut)` renamed to `nmi`

Relates to #357",36,43,1
"mpusz/mp-units","cd0eb11c145a80d3c33d93f28b22892052d50e57","mpusz","2020-03-01 12:11:15","false","standard_gravity constant added",14,17,0
"mpusz/mp-units","245783e89a8dc3769c312bd4f3b416e54965a9cc","mpusz","2023-03-30 15:05:04","false","fix: a workaround for msvc 1929 added to `validated_type`",44,54,1
"mpusz/mp-units","2405c83da17eb2d9c4f5b5bc9be1543383de5408","mpusz","2022-07-26 07:53:26","false","build(conan): Switched to `conan.tools.build.check_min_cppstd`",35,46,1
"mpusz/mp-units","bb158a69e958030144b3d9f47a48bc91717f2c42","mpusz","2023-06-12 08:37:39","false","refactor: type_traits usage cleanup",48,56,1
"mpusz/mp-units","65e383a506d6d6adbb0e2676f336ba52f99c41b5","mpusz","2021-03-05 10:31:46","false","docs: Basic concepts embraced with examples",32,29,1
"mpusz/mp-units","00d863508d524cc8365610c826f0e909e292ead8","mpusz","2019-12-16 14:58:41","false","base_dimension refactored

- now stores dimension's symbol rather than its name
- temperature and current renamed to exactly match their names in SI",20,15,0
"mpusz/mp-units","e277ceaf7d5337962652b8199bc38146673b16da","mpusz","2020-06-25 15:45:11","false","Quick start example refactored",18,21,0
"mpusz/mp-units","a22600c8e3d8db57972fbb3748d60a980e62117a","mpusz","2021-03-05 08:19:19","false","ci: Scheduled task removed from CodeQL action",32,29,1
"mpusz/mp-units","9ae3403b18bd0b16a05e1af277a8b79d73516666","mpusz","2022-09-01 14:25:11","false","feat: trigonometric functions on quantities support added",30,47,1
"mpusz/mp-units","448414873584cb0ed4c0f7b4e44aa5d71699bfc3","mpusz","2023-02-09 05:06:14","false","fix: ambiguity on `common_reference` resolved",43,52,1
"mpusz/mp-units","af26c48795d67b9b7679cd9a512eeeec2aeccfc1","mpusz","2023-08-15 09:22:23","false","feat: now ""7 days"" will be created for `std::chrono::weeks` instead of a quantity in seconds",14,58,1
"mpusz/mp-units","6f38e77426077e0f9d4805f03bc38d6f88499e9c","mpusz","2021-11-15 15:36:09","false","test: `[fmt]` unit test fixed for `std::format` in VS2022",31,38,1
"mpusz/mp-units","040c7034610b3433e668177aa7676d857e8745e4","mpusz","2019-10-08 19:26:18","false","Scalar constraint added for quantity operators",14,12,0
"mpusz/mp-units","3cc686e73023a37c42d0cb8a34829de61c05f51a","mpusz","2020-02-10 17:43:27","false","Conan test_package fixed",18,16,0
"mpusz/mp-units","db2edfb539c4820e3960dff4000ba9db5f3644c4","mpusz","2023-04-04 12:27:04","false","feat: `as_ratio(Magnitude)` enabled",45,54,1
"mpusz/mp-units","91eebd0b752b3b80f7462cf9938815180bc1f871","mpusz","2022-11-24 16:15:51","true","Merge pull request #404 from hofbi/pre-commit-autoupdate

Pre-commit autoupdate and enable clang-format",33,50,1
"mpusz/mp-units","8e88f06380a129442fc0fe01335975ad5e898763","mpusz","2021-05-10 13:56:48","false","refactor: `*deduced_unit` renamed to `*derived_unit`",30,31,1
"mpusz/mp-units","3653053e4887f6596e8ffd857ea54fb8e18e4160","mpusz","2022-12-27 09:36:01","false","refactor: `experimental_angle` example refactored for V2",34,51,1
"mpusz/mp-units","d9dc374561c36e88b3270f237ffe6ddfb2fad6d8","mpusz","2023-09-26 10:52:51","false","build: Conan settings update step moved up",2,60,1
"mpusz/mp-units","d8b687d6a9da27db2a0e1cb6d2339733cd5f4ab4","mpusz","2023-08-18 16:51:58","false","feat: `absolute_zero` and `ice_point` point origins added to SI",14,59,1
"mpusz/mp-units","206712f046eae74f71620034ce8bc2260624ad65","mpusz","2020-12-17 22:06:37","false","build: Library renamed to mp::units",19,27,1
"mpusz/mp-units","9c979fc03a87d4542629455983a0b07a4dc5cd72","mpusz","2019-08-05 16:22:53","false","Missing op*() added",4,10,0
"mpusz/mp-units","1f54edda3397ee9a6ed81a6ac1cc4cf04c3bbc1e","mpusz","2020-09-08 18:04:29","false","docs: references section added",15,23,0
"mpusz/mp-units","65a59750f5b0608c178f137f6a089cd1bf716ce0","mpusz","2023-05-12 10:06:59","false","ci: conan data caching improved in documentation CI",48,55,1
"mpusz/mp-units","41d90cc917e3410fdb5f4438ced930079081f13a","Twon","2023-01-06 13:05:36","false","Update all workflows to use new Conan cache key",35,51,1
"mpusz/mp-units","7caadfcd0dc331e860cc6af4d461d192c2648133","mpusz","2019-05-19 15:40:05","false","Ratio metabench tests split to individual operations",2,8,0
"mpusz/mp-units","6e7a2fd0bbdbe9d0af7a854346b87868ae18050e","mpusz","2023-10-17 10:11:32","false","refactor: order of overload for `Unit` changed",1,61,1
"mpusz/mp-units","5cc7fb1f0bd9a4a77e3f4e36f86cdf6e840e5e70","mpusz","2023-10-23 07:21:41","false","Merge branch 'master' of github.com:mpusz/mp-units",1,61,1
"mpusz/mp-units","615c35f5b6595cc69b92ef6846cc9bf3225adf8e","mpusz","2023-07-24 15:36:49","false","docs: ""Text Output"" chapter added",12,58,1
"mpusz/mp-units","709e1190af693d40e960266f663f22ca9b84689b","mpusz","2019-04-11 12:36:06","false","derived_unit helper added",2,6,0
"mpusz/mp-units","6d6bf81003ef707e1c7b56bff27aebc921f395a8","mpusz","2022-05-05 07:46:35","false","build(conan): Upgrading the recipe to Conan 2.0",36,43,1
"mpusz/mp-units","9d50ea6ab556692205e677cba9075079f707c1bd","mpusz","2019-12-11 20:38:44","false","CGS case added to avg_speed example",19,14,0
"mpusz/mp-units","c5fa2399afec72f24f7d9420789c7e213d64cb06","mpusz","2022-12-19 11:51:46","false","fix: in case of no factor a `radius` should not be a kind of `diameter` to prevent accidental implicit conversions",30,51,1
"mpusz/mp-units","4bfdc605211d7c4db502a2976ab156942b43a0d0","mpusz","2020-09-09 17:21:32","false","chore: invalid unit fixed in a commented out code",14,23,0
"mpusz/mp-units","1ce7949cf5f6aacb5fa35b04b8e9417797af2460","yasamoka","2020-05-22 03:49:25","false","added STL random number distributions wrappers",17,20,0
"mpusz/mp-units","ca283b94f67b90d520bf5c51653dc808523db1f3","mpusz","2022-03-21 10:16:50","false","refactor: find_first_factor() refactored",32,42,1
"mpusz/mp-units","e3f641c2bb9dadc8c39da36c6cea7eeb2f12421a","mpusz","2023-05-12 09:25:54","false","fix: LA support fixed",48,55,1
"mpusz/mp-units","0125bd7762e48049cfd0a1eb201480ef2b7ba03a","mpusz","2019-11-08 16:51:45","false","Derived unit factory helpers refactored",13,13,0
"mpusz/mp-units","be46ac77d6a4827bc39f08d14739bfca0d31dba3","mpusz","2020-09-12 19:19:40","false","fix: downcasting_2.0 workaround for MSVC",14,23,0
"mpusz/mp-units","ef217b61fdfdfc6c4c024e5960b75003a7f31a7a","mpusz","2023-06-22 16:16:15","false","docs: more terms added to ""Glossary""",14,57,1
"mpusz/mp-units","6e6c5c281a1bf33f950a3bd5f828829d918c5ef7","mpusz","2021-11-09 18:26:26","false","feat: math functions can now be safely used with user-defined types

Resolves #310",32,37,1
"mpusz/mp-units","2f4e308ea87e7b7f7a843edc71031ae6cbb5925e","mpusz","2020-12-24 08:56:56","false","ci: gcc-10.2 CI added",19,27,1
"mpusz/mp-units","868842bd463b30abb5781100fe116b056b62a8cb","kwikius","2020-01-06 21:29:05","false","Third party examples : add box example
Add si::density quantity header .
Add si::resistance quantity header.
Update si::capacitance header with mF, uF, nF, pF.
Update si::voltage header with mV, uV, nV,pV
Third party example : add capacitor time curve example
Add incoherent length units, TODO  move them out from si header.
Third party examples : add clcpp_response showing effectivenes of typed units for physical quantity library
Third party examples : add conversion factor example
Add third party examples to cmake

Third party examples : box example : Add air_density constant for clarity remove explicit this-> and tidy up.
Third party examples : in clcpp response example, change base unit from km to m for single type or all units example.
Third party examples : conversion_factor , add inline constexpr to units_str function.
Third party examples : box_example, change quantity::unit syntax to quantity::unit<> to allow generic(default double) value_type.
examples : remove examples from third party to main examples directory. Update cmake.
physical/si/resistance.hpp : remove underscores from kiloohm etc, UDL collision with 'R' so prefix with underscore",16,15,0
"mpusz/mp-units","df4fe0bc57f344df697b509d5ca1debf2f322d61","mpusz","2021-01-28 17:51:48","false","build: CMakeDeps support added",27,28,1
"mpusz/mp-units","0b961dc71c60808a401c5f9c6a1c12a05a1d6900","JohelEGP","2021-02-21 21:10:35","false","fix: check selective QuantityValue requirements",27,29,1
"mpusz/mp-units","b842c3f94a6782db1c006278c90d30d6d51a6ecc","mpusz","2021-04-06 12:44:24","false","docs: `q_` prefixes added for ""Dimension-Specific Aliases""",32,30,1
"mpusz/mp-units","d75f22ecc47fb8e0605fe1e82204c8b871b79215","mpusz","2022-11-10 19:55:43","false","feat: `constant_unit` support added",32,49,1
"mpusz/mp-units","d19b2803ceba94ecbab15b604e21d21e5557158f","chiphogg","2022-04-09 17:55:44","false","Migrate units from ratio to Magnitude

This commit is huge, but hopefully the cognitive load is not too bad.
The bulk of this commit is just some fairly mechanical updates from
`ratio` to `Magnitude`.  Other things to call out:

- `UnitRatio` goes away.  We don't need this concept, because Magnitude
  can't even _represent_ anything that doesn't satisfy it.

- I commented out some formatting test cases where the precise
  expression changes, but the number is completely equivalent.  We will
  need to decide how we want to handle Magnitude formatting as a
  separate, follow-on task.  But at least Magnitude gives us all the
  tools we'll need to do so!",35,42,1
"mpusz/mp-units","e0511669cf4163a12f828879a6fc19473262942d","mpusz","2018-10-16 13:41:00","false","Concepts usage added to example",0,1,0
"mpusz/mp-units","88a45452dc40362bd80b0b7969148d52b0bf7779","rbrugo","2020-04-05 14:48:27","false","Added literal for gauss units",13,18,0
"mpusz/mp-units","39262fde5f810b24ce679b3ca12f6c8b6d1219d4","dbraeckelmann","2023-05-09 08:31:16","true","Fixed typo in storage_capacity.rst headline",48,55,1
"mpusz/mp-units","626c7bfe390eed7ffbf1d63f85ae0e17b351517b","chiphogg","2021-12-30 15:47:01","false","Fix up for review

- 120 line limit
- uppercase template params
- doxygen comments for public APIs
- `int_base` -> `prime_base`",30,39,1
"mpusz/mp-units","10b553bdbefe3d7f4bc5c997a0f7c51108ee3f39","chiphogg","2022-08-04 19:13:53","false","Adapt Aurora's Magnitude docs for mp-units

The major missing work here is to see how the latex math, inside dollar
signs, translates to the docs.

I also added a new constant, `pi`, to make the docs correct: this should
be much more user friendly.

This is not intended to be ""complete"".  Rather, the goal is to deliver
the raw content so that experts can massage it.",36,46,1
"mpusz/mp-units","1061d2ac56ac78dcb8a93a1cded78d04a60673c9","rbrugo","2020-09-09 23:37:31","false","Fixed indentation",14,23,0
"mpusz/mp-units","72ed03fbf9ed2fdbebb3b798ed9a815d38c8fc26","mpusz","2020-09-02 19:30:04","false","Ratio maths fixed",15,23,0
"mpusz/mp-units","043046c0683db70fc6c8e968d4f1674d02d57213","mpusz","2020-10-06 17:50:36","false","refactor: [[nodiscard]] added to `min_expl`",17,24,0
"mpusz/mp-units","b0c4a6c2a89a82875610dd3ec0100daa91c61e60","mpusz","2019-08-02 15:04:55","false","meter renamed to metre",4,10,0
"mpusz/mp-units","e5462c1b654233937cc8ebeb0db69c20380b2769","burnpanck","2021-02-23 07:09:10","false","fixed sign-conversion warning in doubtful conversion between std::clock_t and std::time_t",28,29,1
"mpusz/mp-units","f281e417e299466e7ed9e6c81b5131442de1af2d","kwikius","2020-05-14 16:41:04","false","Experimental branch using angle as a dimension.
Added dim_angle, Angle concept etc.
Not really for merging, but fun to play with.(The main problem is that it doesnt conform to SI)
See https://github.com/mpusz/units/issues/99
Could try adding degrees etc in same way as non-si units",16,19,0
"mpusz/mp-units","05e80a75f655e2474dd340dc804fa0cdc2c6188f","Twon","2023-01-07 10:24:33","false","Merge branch 'master' into update_codeql_cachekey",35,51,1
"mpusz/mp-units","65286b7a817ca10290d1b82b6a4f10e994c454bc","mpusz","2020-09-06 16:10:52","false","Small refactoring of LA example",16,23,0
"mpusz/mp-units","6794485b02253d5a4e111386e25210dfbdfcac75","mpusz","2023-02-09 18:02:58","false","refactor: small cleanup of IEC 80000 definitions",43,52,1
"mpusz/mp-units","05c466873f5f79793d48b67ba125e974cc692e0a","mpusz","2020-06-25 15:44:51","false","glide_computer example docs minor updates",18,21,0
"mpusz/mp-units","cd52588f56ae31e6072f5783163e0ebc9d709f68","mpusz","2022-10-03 16:45:58","false","build: GitPod script updated",30,48,1
"mpusz/mp-units","0dafb136cbecc0d963d9acc7fcae77c1e4f1a25e","mpusz","2020-05-29 09:49:08","false","libfmt updated to 6.2.1",16,20,0
"mpusz/mp-units","b12b9f87ae275a51876bb14702a22cb2e573e24d","mpusz","2023-10-01 04:14:20","false","feat: `quantity` and `quantity_point` conversion operators now can also convert to const references",2,60,1
"mpusz/mp-units","162514c19ec9429379cef5acbd55260eddb2f168","mpusz","2023-11-04 20:36:03","false","docs: ""canonical unit"" added to glossary and its documentation in code was updated",1,61,1
"mpusz/mp-units","8a01541c884f3741850885adb8898cf1bb1aaa4f","mpusz","2020-04-06 12:22:29","false","Sphinx fixed at 2.4.4 as 3.0.0  breaks Travis CI",13,18,0
"mpusz/mp-units","e9d1ae2719dd469be2d19fc7276acbac77514866","mpusz","2019-05-08 15:05:31","false","Concepts-related hacks added to import them to std namespace",2,7,0
"mpusz/mp-units","600d2cb12c3ff824f73669d8db05740e2f87c03e","mpusz","2020-02-15 06:04:13","false","Release notes moved from README to CHANGELOG",16,16,0
"mpusz/mp-units","9a02f902b9b02ac2dc11f8a7e0c124d1234df1f7","mpusz","2023-09-24 17:59:26","false","docs: CHANGELOG updated",2,60,1
"mpusz/mp-units","c4e9ff7f66c0ee34d8d91c0d6598f1befde2dd53","mpusz","2021-04-02 11:11:20","false","docs: Documentation now prefers refrences over UDLs",33,30,1
"mpusz/mp-units","4efbf81814e3672a65596a0a1f687b5d35f78b07","mpusz","2022-12-23 18:16:23","false","docs: another small cleanup of quantity",34,51,1
"mpusz/mp-units","955b6a7332d709c5823e94d58caf2d95faae9e0b","mpusz","2022-06-06 17:57:17","false","ci: documentation generation fixed after latest Conan breaking changes",34,44,1
"mpusz/mp-units","920c396742d93ecc5e97d22b98c058b6f1da7020","mpusz","2020-09-24 14:10:07","false","feat: value initialization for quantity value removed (left with a default initialization)",18,24,0
"mpusz/mp-units","c53b692ac9def233ec1bccc1eb15872fc10065df","mpusz","2023-08-25 19:17:48","false","refactor: clang-17 has a proper support for `consteval`",9,59,1
"mpusz/mp-units","f75a69da9a86460567b080a9ef627b6017bcfa6d","mpusz","2020-03-27 14:21:42","false","Direct namespace usage removed from fixed_string",11,18,0
"mpusz/mp-units","4bde31ee22c76653e6edce0ea77b8fab59bc570c","mpusz","2023-09-24 18:38:10","false","build: mp-units version bumped to 2.1.0",2,60,1
"mpusz/mp-units","1d3f3b26e488feae7455e5851b5bccac4431d5cb","mpusz","2022-07-29 06:37:04","true","Merge pull request #378 from chiphogg/chiphogg/mag

Rename `as_magnitude<...>()` to `mag<...>()`",34,46,1
"mpusz/mp-units","d763c75df28d0f98fce6c4bd683029eb4f643704","mpusz","2019-11-12 17:05:56","false","Text formatting updated in DESIGN",12,13,0
"mpusz/mp-units","c30673fb7ebbf26133cb44ba36f2bb929be78b02","mpusz","2019-05-18 10:59:08","false","Compiler version specific configuration support added",2,8,0
"mpusz/mp-units","104d572858ae2671620383d489f91e01a039f7e8","mpusz","2020-08-17 21:39:40","false","Missing libtinfo5 installation added to build.py",18,22,0
"mpusz/mp-units","4d6e1d933032a30b19d4ca3d237aee77b40bcb28","mpusz","2020-06-22 14:55:15","false","Another approach to make """"mp-units:CONAN_RUN_TESTS"" work correctly",19,21,0
"mpusz/mp-units","721c8fe76ffbcae5da3703e53b1d82f9f4f4a6f4","mpusz","2023-06-22 18:25:25","false","docs: point origins added to ""Glossary""",14,57,1
"mpusz/mp-units","07ce64d6e7f8d984432927eb39c3dc597b7de25a","mpusz","2023-08-18 16:44:52","false","refactor: `relative()` renamed to `quantity_from_origin()`

Resolves #479",14,59,1
"mpusz/mp-units","c5cf329ed06b8100b69fcc64f4901e75036fd66f","mpusz","2020-09-11 19:46:05","false","fix: Conan test_package fixed",14,23,0
"mpusz/mp-units","3585e2a33ca361d6a7b1bfd07a7059468fc574df","mpusz","2023-06-14 12:57:59","false","refactor: all math functions refectored",48,56,1
"mpusz/mp-units","b3afd61b2d70a656c263cbc6378b3d06f7921c06","mpusz","2022-05-11 20:55:55","false","refactor: duplicated concepts checks removed to improve compile times

`magnitude` template parameters are already checked during `magnitude` type instantiation.",34,43,1
"mpusz/mp-units","20395b14dbabd7e6e460b8fb223237d0ba76c821","mpusz","2021-04-01 10:38:24","false","ci: Conan upload repo forced to be the first on the list of remotes",33,30,1
"mpusz/mp-units","999ff52d701dda9c8d118e688612e5026209e552","mpusz","2022-04-19 16:48:46","false","refactor: `knot` unit helper renamed to `kn` in FPS

Relates to #357",36,43,1
"mpusz/mp-units","278dbace981044b955606c6ab27bc52609a2cab5","mpusz","2022-12-23 18:23:00","false","refactor(example): remaining kalman filter examples refactored for V2",34,51,1
"mpusz/mp-units","a8d6c890a55f61d65f568d2e4ffeb2f34115985e","chiphogg","2022-01-12 00:12:27","false","Move `pi_to_the` to the test file",30,39,1
"mpusz/mp-units","eea25c13c7577acf5668fae1766c146031ce25f6","mpusz","2022-12-27 09:23:59","false","feat: `isq_angle` system added",34,51,1
"mpusz/mp-units","228bd709b1c996ede9f0b16b7c2c1f08dadc3f67","mpusz","2021-04-29 12:15:27","false","Revert ""ci: `VISUAL` renamed to `MSVC`""

This reverts commit f4ccb9c7fc04a156c78b66c5976630afc9f2e844.",32,31,1
"mpusz/mp-units","5c94a40906dcda2c4ea9bc51a99eacf876363ed3","mpusz","2021-03-15 20:13:21","false","build: `COMP_XXX` renamed to `UNITS_COMP_XXX`",32,29,1
"mpusz/mp-units","2bfc2824832b32eccf26f328e146ec7a177ae3ed","mpusz","2023-08-31 17:01:13","false","test: missing units tests for `quantity::one()` aded",9,59,1
"mpusz/mp-units","ee701cf4e739e7aff23e741996e14201413a96ee","mpusz","2019-11-02 12:56:53","false","dimension refactoring",14,13,0
"mpusz/mp-units","1ea918e54312f0028b27dc8bb6758a6c6f9f8d82","mpusz","2019-10-18 21:50:12","false","fmt dependency added",14,13,0
"mpusz/mp-units","528898fb2c5c9a3e9dd4d1ef45e7140758435df7","mpusz","2021-03-19 06:58:30","false","build: `package_info()` fixed",32,30,1
"mpusz/mp-units","db09a065ab7a88f28d934ec1f7ac8f477aee176f","mpusz","2022-05-24 10:48:07","false","refactor: :boom: ! "" ⋅ "" replaced with ""⋅"" in derived unit symbols",34,44,1
"mpusz/mp-units","32fcbd78291a870380c720c5901bf3a62d89f07e","mpusz","2023-05-25 09:59:09","false","fix: `quantity_spec` ingredients sorting fixed",47,56,1
"mpusz/mp-units","1b9cd8446cb604200cc4880bf77994e01ffb6b6f","mpusz","2022-08-31 08:44:12","false","refactor: `ipow10()` and `fpow10()` removed as they are no longer used

Resolves #311",33,47,1
"mpusz/mp-units","7acc209eb4a5767551839e4dca46028ecc250454","mpusz","2021-09-25 10:53:44","false","fix: output stream operator implementation fixed",26,36,1
"mpusz/mp-units","a37df7504bf947161ab9d19fabfd01e4f9f0036e","mpusz","2023-02-13 17:17:41","false","fix: `quantity_cast` fixed",43,52,1
"mpusz/mp-units","f2e63fdeb1fe0b143876f5e16e342283834c7abd","mpusz","2022-11-10 04:39:51","false","refactor: `std::common_type` usage replaced with dedicated functions for units, dimensions, and references",32,49,1
"mpusz/mp-units","65ea59edbbea4829d1002a5bd8b75584febe6f35","mpusz","2019-11-28 22:01:06","false","digital_information_test renamed to workaround the issue with vscode test explorer",18,14,0
"mpusz/mp-units","d568cfa1b38badfa958ad6e6a8ca5e6f0ee70b77","go2sh","2021-01-01 16:20:22","false","Add SI prefix to bit unit.",18,27,1
"mpusz/mp-units","61e9edbcdff44e51261f663163afba9d58dc76d8","mpusz","2019-05-08 23:55:49","false","Compiler version checking added to conanfile.py",2,7,0
"mpusz/mp-units","ee5b727d2a848b481070b003e72d60dd9d0d97df","mpusz","2023-09-26 12:04:58","false","ci: `user.build:skip_docs` removed from Conan command line",2,60,1
"mpusz/mp-units","27f6f806dbbc4e4d4cf77a90c730bd5d589842aa","mpusz","2019-12-17 08:16:04","false",".clang-format updated",20,15,0
"mpusz/mp-units","f49d48152c48245f910a70393acf847dc1d0c8ae","mpusz","2019-10-05 05:47:14","false","Appveyor tag removed from the README.md",13,12,0
"mpusz/mp-units","70185b49c28ceb856229955f068a8a119f1423f8","mpusz","2022-09-15 20:52:54","false","refactor: `constexpr` replaced with `consteval`",30,47,1
"mpusz/mp-units","5b2978b89a7ad342db13e1205b963eeefd381441","mpusz","2023-05-22 15:55:32","false","feat: `UnitOf` concept now supports `dimensionless[radian]`",47,56,1
"mpusz/mp-units","70bff31d061f6d0c834f0a258200a2ca13465bde","mpusz","2021-04-15 17:13:25","false","feat: quantity aliases support addded",32,30,1
"mpusz/mp-units","ac8e32fcdae5685277f0e3d0e574b7c0188f6cf7","mpusz","2022-04-15 15:07:55","false","feat: Conan 2.0 requires the explicit declaration of the requirement being tested",35,42,1
"mpusz/mp-units","0d164271166ed6dedd9c0f9e23073863ef610733","mpusz","2021-11-15 16:50:54","false","ci: trying to add MSVC 19.30 support",31,38,1
"mpusz/mp-units","4637985b7a2b37315e4d65e938f1bbf378357743","mpusz","2020-03-26 15:36:48","false","Quantity of matrix tests added

But commented out due to complier segfault.",13,18,0
"mpusz/mp-units","c22490290f6e0ccc0c65428872fd750b6da68536","mpusz","2023-06-08 20:02:34","false","fix: forgot to commit `_quantity_spec_` member added to `kind_of`",48,56,1
"mpusz/mp-units","c86359f37e85499a05268259b63bfa3ee32e968a","mpusz","2023-02-02 09:23:49","false","docs: simple documentation typo fixed to trigger a documentation build in CI",42,52,1
"mpusz/mp-units","65fed78c98ec66686670674b385d63ff7f638a7e","mpusz","2021-11-10 18:44:22","false","refactor: got rid of CRTP for `latitude` and `longitude`",31,37,1
"mpusz/mp-units","7aa381d525845504670e148b710c56ad8f5597a8","yasamoka","2020-03-25 06:25:35","false","added spaceship operator",13,18,0
"mpusz/mp-units","bd92f9cf2891b2ebe7ddd1f5a7db1d0e3c486955","fdischner","2022-01-27 00:22:54","false","build: AppleClang requires fmt 8.1.1 with C++20",30,40,1
"mpusz/mp-units","7e18694790359f7a8ce2e811637322dab9d0cb86","mpusz","2022-10-22 17:31:20","false","refactor: `gsl_Assert` replaced with `gsl_Expects`",30,49,1
"mpusz/mp-units","41043c25f206dde9b110ca20c5dab4397d46f06d","mpusz","2023-02-13 17:30:41","false","refactor: base unit definition refactored",43,52,1
"mpusz/mp-units","49ba4891183e65263ad6cd0f2a8ea334d1f9faa0","mpusz","2023-01-01 21:45:20","true","Merge pull request #407 from burnpanck/feature/make-fmt-more-embedded-friendly

recfactor: use FMT_THROW inside fmt.h to make code embedded-friendly",34,51,1
"mpusz/mp-units","1197fa1ec42c14df1b841598c93f4b2554570662","mpusz","2021-03-19 22:31:36","false","fix: MSVC shadowing warning disabled for `fmt_unit_test.cpp`",32,30,1
"mpusz/mp-units","1d476a3f691c4b26be0c80594d761fb768d23cf9","mpusz","2019-09-30 09:12:50","false","Added compile_flags setting to test_package to ensure that the dependency imported with Conan will compile with restrictive warning flags",11,12,0
"mpusz/mp-units","867e5cd2b8422e7d4d7e18fb0d82da9049339f54","mpusz","2023-01-06 19:19:13","true","Merge pull request #417 from Twon/conan_cache_fix

Environment variable access does not require env prefix",35,51,1
"mpusz/mp-units","e5f74b85cec42c178c65d278ae78600ce9f2b46d","mpusz","2022-02-01 08:50:20","true","Merge pull request #330 from fdischner/apple_ci

Add Apple clang support to CI",30,40,1
"mpusz/mp-units","a8ada63031a39e1fff6a0120330b4ff7dde31a6b","mpusz","2020-02-12 08:49:49","false","units::exp disambiguated in unit tests",16,16,0
"mpusz/mp-units","15e148381ddd7f0f7650c4f0aa37d2163dd41f95","mpusz","2019-12-26 09:07:02","false","decimetre and litre added",16,15,0
"mpusz/mp-units","726c67b19403bd21e9f00c205fc3eff3a082d709","mpusz","2022-09-16 23:40:13","false","refactor: `ratio` usage added to `power`",30,47,1
"mpusz/mp-units","b65328d575ea7935f420e7bb227c4b7a42cde55c","mpusz","2020-03-09 17:55:41","false","Sphinx-based documentation added",15,17,0
"mpusz/mp-units","71e1982bbeca13dd13ef58c36b96e5b8408b97a4","mpusz","2023-03-29 15:02:59","false","chore: .clang-format updated to clang-format-16",44,54,1
"mpusz/mp-units","754f4ef74cbb461c61fd36d61751bb1aa2ef8e7e","mpusz","2019-04-07 06:33:53","false","Conan remotes for Travis CI build fixed",2,6,0
"mpusz/mp-units","5a7f58be41f5620b382c3a108f4b983417a38ae8","mpusz","2022-10-20 12:05:20","false","fix: Added a special case for multiplication of opposite magnitude exponents",31,49,1
"mpusz/mp-units","9962306fef5a1e516eaf8e5aca31b6f254a31c06","mpusz","2023-10-25 12:15:01","false","docs: ""Terms and Definitions"" slightly updated",2,61,1
"mpusz/mp-units","32aa05700b9b194116eb55b98d9ad11dcc72d992","mpusz","2023-05-16 11:41:41","false","refactor: `quantity` binary operators are not hidden friends anymore to prevent surprising conversions",48,55,1
"mpusz/mp-units","1d2b9205383f967e4d21df20ac2fd4168b6ff7a8","mpusz","2021-03-19 22:31:54","false","Merge branch 'master' of github.com:mpusz/units",32,30,1
"mpusz/mp-units","2e4b9483fae1833d01ef37138cb41d35f45392a0","mpusz","2021-05-07 18:45:24","false","build: modern_project_structure.cmake added",33,31,1
"mpusz/mp-units","138d85f9bfb0dc8df74cb68d018eb849e09ecaab","mpusz","2021-04-01 07:38:02","false","docs: Usage updated",33,30,1
"mpusz/mp-units","a8fccf0cb5208385fd173e68db625dbbdf13b8a3","mpusz","2021-02-15 19:38:24","false","docs: Quantity Kinds docs fixed

Fixes #204",26,29,1
"mpusz/mp-units","f267ab27a0229afcbe26e3244c4cd4279355ff9a","mpusz","2023-06-13 14:39:09","false","refactor: `pow` now uses `quantity::one` instead of `rep(1)`",48,56,1
"mpusz/mp-units","1865b92e907e6f6f8f622bc48546d4d6592b22d3","mpusz","2020-03-09 18:47:36","false","Workaround for a stupid compiler reporting potential null-pointer dereference",15,17,0
"mpusz/mp-units","169e73e61b59c2d9ef0d8e12026638e338f75410","mpusz","2020-06-16 17:15:09","false","`named_deduced_derived_unit` renamed to `named_deduced_unit`",18,20,0
"mpusz/mp-units","e002c3f0c6b458b4794527e554d840317d6e232f","Twon","2023-01-06 11:30:07","true","Merge branch 'master' into buildinfo_in_cachekey",35,51,1
"mpusz/mp-units","aadd2716d6f4a244087184a8cbcf819874e95120","mpusz","2020-03-11 08:11:41","false","SI namespace members added to Systems",15,17,0
"mpusz/mp-units","3b0ba31e4d2fa0ad796ac844ca99cfe8f288b4df","mpusz","2020-09-14 18:07:26","false","fix: constant evaluation encouraged in `quantity_cast`

Refers to #164",17,23,0
"mpusz/mp-units","6ac08c2e3b54e3be6f4f2ae28ab34c7e09332773","mpusz","2020-12-16 20:00:45","false","ci: Documentation CI now uses a correct build target",20,27,0
"mpusz/mp-units","58949bf22afc0425483b23d0f71342ef84a564a1","mpusz","2022-12-27 09:17:58","false","feat: `rad2` unit symbol added",34,51,1
"mpusz/mp-units","771a9a15514f1da0f07e2376c3f35dd271ba5464","mpusz","2020-05-08 19:19:33","false","Documentation for alias_unit added",15,19,0
"mpusz/mp-units","01935996e6b1cfbc4c807f79bd8aa1957d70063d","mpusz","2021-03-30 11:15:47","false","build: IWYU support added",33,30,1
"mpusz/mp-units","fa9b7db9d5b17b556240fb6b75eefc484002bcb8","mpusz","2019-12-01 18:56:23","false","type_list_test enabled",18,14,0
"mpusz/mp-units","46a4999d3b9cded24364b4eb2275a83dbfbedf6e","mpusz","2023-06-22 16:22:41","false","docs: `hello_units` example documentation added",14,57,1
"mpusz/mp-units","8e612865480394277cac56ef2ad9836e0c4d87bd","mpusz","2023-02-04 07:28:29","false","docs: ""Terms and Definitions"" added to README",41,52,1
"mpusz/mp-units","7e31dfe37eae98a219578af35c30e64a1c575ea8","mpusz","2019-10-15 09:47:36","false","Name renamed to symbol in a derived_unit",13,13,0
"mpusz/mp-units","a388959133e2ac4bfb0151a035b16e9ecdb7b2b5","mpusz","2020-09-10 11:03:24","false","test: additional tests for dimension specific concepts added",15,23,0
"mpusz/mp-units","d48db94f7d4fabd603661630d12c9bc4d8649076","mpusz","2021-03-17 21:19:57","false","ci: another attempt to cache Chocolatey dependencies",34,30,1
"mpusz/mp-units","9fd9e005048900173635657836340cdf82fbd45c","mpusz","2021-09-09 08:12:14","false","build: Conan 1.40 support fixed",24,35,1
"mpusz/mp-units","39bc536332768bf7749667f3f28a3b420f6e6565","mpusz","2018-09-28 21:18:43","false","Concepts definition fixed",0,0,0
"mpusz/mp-units","0c02f94d299d47e12eed5cfadb6f19bde78037c7","mpusz","2020-02-24 19:45:47","false","Printing of uknown non-coherent units fixed",13,17,0
"mpusz/mp-units","760c6d724e48b62b3cc166971baf6d81c9d20968","mpusz","2023-04-08 17:33:00","false","fix: incorrect unit of `pow()`, `sqrt()`, and `cbrt()` fixed

Resolves #449",47,54,1
"mpusz/mp-units","4adc71db56ed557996fe473f981ee6a7845451aa","mpusz","2022-05-05 09:53:37","false","build(conan): `exports_sources` replaced with the `scm.Git`",36,43,1
"mpusz/mp-units","ff02575aaed88f9ca144ff5119c0832ebcc7b576","mpusz","2020-09-08 16:39:05","false","docs: duplicated 'construction' chapters fixed",15,23,0
"mpusz/mp-units","f7bd67bf09195e6640e1c20237884d305368dce8","mpusz","2023-08-25 20:48:27","false","fix: invalid preprocessor conditions fixed",9,59,1
"mpusz/mp-units","a1ed005c120b54106ec24a5c1bb44d71d895ddd3","Twon","2023-01-07 10:15:48","false","Ensure OS present",35,51,1
"mpusz/mp-units","749ec8d37922df48604dc80113cb5bff9e250bd3","mpusz","2023-02-02 09:21:58","false","build: enable CMake configuration files generation for doxygen in a new Conan version",42,52,1
"mpusz/mp-units","14d8d96b3c0251404281881fa3cc7355c2b74d32","chiphogg","2022-01-05 01:06:41","false","Replace `static_assert` with template parameter constraints",30,39,1
"mpusz/mp-units","21cea146a583fd9adbbe487ebfead4a9b3a666a6","mpusz","2021-10-17 10:27:07","false","docs: quick start example updated",27,37,1
"mpusz/mp-units","7eccef78a9a4dadff9dc11ddd66ca272f5ff9803","mpusz","2020-06-29 18:28:10","false","`is_instantiation` renamed to `is_instantiation_of`",19,21,0
"mpusz/mp-units","3b3b9d92fb4d2b45e73fbb66490772c470027318","mpusz","2021-03-12 22:10:39","false","docs: Minimum required VS version bumped to 16.9",32,29,1
"mpusz/mp-units","bfbc1785b8771ffe3a107b7a846023a5efaa3d69","mpusz","2023-09-26 08:37:08","false","feat: `isq::activity` added and `becquerel` definition updated to benefit from it",2,60,1
"mpusz/mp-units","caf0e66cb2fcd779df768a47ff2c40cea557e8db","mpusz","2023-09-28 07:01:52","false","test: more unit tests for unit conversions",2,60,1
"mpusz/mp-units","41484742ae5e8c1c624e194bb558cb5cd047f370","mpusz","2023-05-17 09:50:15","false","fix: missing header file added",47,56,1
"mpusz/mp-units","6a48132c5df6fde62052ba67854eeb8bf3af7b1a","mpusz","2019-04-08 18:18:28","false","Travis CI will now build dependencies from source if missing or outdated",2,6,0
"mpusz/mp-units","bc63ab23e13724f150c458a1303b2525faf59122","mpusz","2023-05-02 19:35:28","false","refactor: `[[nodiscard]]` added to functions in `type_traits.h`",46,55,1
"mpusz/mp-units","85cd8805726bb413260ffcc00adcd782a83eeb30","mpusz","2019-05-08 15:52:46","false","Conan packaging refactored",2,7,0
"mpusz/mp-units","1530d1f6a3fec0f272b14d9b0a57489df9d8d824","mpusz","2021-08-10 12:33:48","false","ci: clang-13 support added for Conan",25,34,1
"mpusz/mp-units","38dff1c74f4cca2b9310c51f7c519648f7a48b2f","mpusz","2023-03-22 09:15:43","false","docs: README badges updated",44,54,1
"mpusz/mp-units","079e6406149701bb1b9987353d72fdba9200c720","mpusz","2023-02-14 11:29:45","false","test: linear algebra test refactored to benefit from the latest features",43,52,1
"mpusz/mp-units","c3d896e661bf9ba66d5fe885f43486b29dbd36c5","mpusz","2019-05-28 12:31:50","false","Input range for ratio creation changed",2,8,0
"mpusz/mp-units","7a6b629218de45ecfa49ca073e46da2fb278b8b1","mpusz","2023-09-26 13:27:43","false","feat: `gray` and `sievert` now have correct associated quantity kinds",3,60,1
"mpusz/mp-units","31d407d19e9734caa4af6d9ede1e7b66fb937605","mpusz","2020-09-06 21:53:42","false","Usage docs updated",16,23,0
"mpusz/mp-units","8076916d5c925e5eb1960ea775ae4edf4262bdbb","mpusz","2023-07-11 13:49:04","false","docs: Compiler Explorer link added to `hello_units` example",12,57,1
"mpusz/mp-units","40de14b9b79925167bf7b452a2c7cd8f3b21b594","mpusz","2021-04-07 10:36:39","false","refactor: common part of glide_computer moved to a directory",32,30,1
"mpusz/mp-units","3705404d143fbe817537e06c5c0608108feda2dc","mpusz","2023-08-26 17:47:10","false","docs: `QUANTITY_SPEC` macro tip added",9,59,1
"mpusz/mp-units","fc30bb38dce37fc592a3ec75fccc0b2c80384ab6","mpusz","2023-05-15 11:34:01","false","style: whitespaces fixed to make pre-commit happy",48,55,1
"mpusz/mp-units","34765a2ab1b698a7bb1360ff9ed72cce71d0a69a","mpusz","2023-06-15 14:31:08","false","refactor: a few `ratio` functions made `constexpr` for clang",15,56,1
"mpusz/mp-units","2f98f19c6900fd5527df5f2d64a71c16c7c0205f","hofbi","2022-11-17 15:25:50","false","enable clang format in pre-commit",33,50,1
"mpusz/mp-units","0f8e4cea3f73be69b689bb01fea57d65a1d6f466","mikeford1","2020-06-24 09:39:53","false","added some more lengths to fps system",18,21,0
"mpusz/mp-units","467d548ae5fc276e148de5eba5d1e3e55fa60407","mpusz","2018-11-17 11:36:27","false","Additional type list sorting added to make_dimension",2,2,0
"mpusz/mp-units","a10660d06568ab2c6e944cee9c85f7b53cbaf8db","mpusz","2019-12-11 12:55:58","false","More SI tests added",18,14,0
"mpusz/mp-units","ef7e7c4cfcf2617982193d126a6d4300dbc7b999","mpusz","2022-05-23 18:47:29","false","refactor: `detail::same_scaled_units` renamed to `detail::compatible_units`",34,44,1
"mpusz/mp-units","497a13da1ad25cd8267edfce4b9a4172757f6d77","mpusz","2019-09-10 18:07:48","false","Dependency on gsl-lite removed as it causes issues with compiler-explorer",4,11,0
"mpusz/mp-units","01271a90b60d93448d40455932dc33848710457d","mpusz","2022-05-11 14:28:14","false","docs: project documentation updated with the latest unit-related changes",34,43,1
"mpusz/mp-units","456b37be9d3134bc3d47e5e591f0a1063b6b3645","mpusz","2018-11-17 14:24:06","false","README updated",2,2,0
"mpusz/mp-units","2f67372e17ba2a6bc7eb706f2960a0c3c9bb2b81","yasamoka","2020-05-24 23:33:45","false","refactored random distribution number wrapper and test",16,20,0
"mpusz/mp-units","dfaf2937743c1c3856c5ea37c93fa82686d0d427","mpusz","2023-06-30 16:35:32","false","fix: `quantity_point` converting constructor fixed to account for different offsets of point origins cntd...",11,57,1
"mpusz/mp-units","7b22155bf3ea3992e9e524f2f57e9c5058089f77","mpusz","2023-06-12 08:47:30","false","feat: linear algebra library usage re-enabled",48,56,1
"mpusz/mp-units","097a7badd7f8f2632e4198abca58ef43758199ed","mpusz","2020-05-08 21:07:34","false","Python updated for Travis CI",15,19,0
"mpusz/mp-units","409aaf463665f8f3945fef456e9dac2db2861732","chiphogg","2022-01-09 00:34:21","false","Generalize inverse() to pow<...>()",30,39,1
"mpusz/mp-units","2f6ecb113a303c09cd584d0f516ec5c6268cf1cb","yasamoka","2020-05-07 18:49:20","false","removed base_prefix_family from unit classes, added PrefixFamily template argument to alias_unit",15,19,0
"mpusz/mp-units","1c7ea897711c50650939c19eb6f4f6e8435092cf","mpusz","2022-09-09 09:50:47","false","refactor: short units inlined subnamespaces introduced to limit possible name clashes",32,47,1
"mpusz/mp-units","6a1e156f8beb92142be1ad8b1bd7c5624772b601","mpusz","2021-09-17 18:42:51","false","docs: RTD theme upgraded",25,35,1
"mpusz/mp-units","ca11f4ff5d9b4662af6fac728d2c2b0cd42592fd","mpusz","2020-09-14 18:09:51","false","fix: ms-gsl `Expects` commented out for runtime code

Refers to #165

Resolves #164",17,23,0
"mpusz/mp-units","be54ae510f602f8e1ad4a2a572cea465b35158e1","mpusz","2019-09-09 21:00:14","false","cmcstl2 updated to 2019.09.09",4,11,0
"mpusz/mp-units","9373446f7de77c2f6879ab9645eefdae1d5c055c","mpusz","2022-11-10 08:51:57","false","refactor: `kilogram` type used explicitly for the symbol",32,49,1
"mpusz/mp-units","ddfd91939e8b1fc0c8f367d3ee439ad9ce29a647","mpusz","2021-02-17 15:45:28","false","ci: Conan toolchain usage added to Documentation CI",26,29,1
"mpusz/mp-units","cab5e8b2fdacc512cbae7cf5462637fb6a29b941","mpusz","2022-01-25 12:30:10","false","Merge branch 'master' of github.com:mpusz/units",30,40,1
"mpusz/mp-units","98d07b9ed1fbe292cce0ab484ba39f750b71ee50","mpusz","2023-10-17 07:45:31","false","feat: :boom: `quantity_spec` and its kind should not compare equal",1,61,1
"mpusz/mp-units","443d89a8510bbec003c013982dbef1d0cb866fc3","mpusz","2020-05-05 18:58:43","false","Common CMake tools updated",15,19,0
"mpusz/mp-units","e82bfa23a5b57fc44117d98f0fd2cbc4b6436024","hofbi","2021-11-13 11:17:43","true","Feat: Floor (#309)

* feat: first draft floor

* apply review feedback and move to desired files

* implement floor considering float types

* reduce code duplication

* apply review feedback and improve docstring

* enable static floor tests for gcc only

* Use recommended feature-test macro

* add floor runtime unittests

* apply review feedback

* make lambda const",31,37,1
"mpusz/mp-units","fb54781543658515b3e0e402614ccda8f9849f1d","mpusz","2023-05-26 16:36:35","false","build: `magnitude_test` disabled for now",48,56,1
"mpusz/mp-units","1b3750c68b44d64174978bcdfb9f20bab923b4df","mpusz","2022-09-02 18:09:14","false","docs: `mag_pi` constant refence fixed in the magnitude documentation",30,47,1
"mpusz/mp-units","9c10b1cdbe87266adaac1e9b34f09f3ba9558a49","mpusz","2022-08-01 16:29:49","false","docs: ""Usage"" documentation updated with CMake presets usage",34,46,1
"mpusz/mp-units","291d3d1eb7d5cc459d042c8f6214a998c19fa3a3","oschonrock","2020-02-15 14:08:27","false","dealing with exponent during sqrt
fixes #58",17,17,0
"mpusz/mp-units","4ba818bb7819825e7bd1bfa21a70a20dec6cd863","mpusz","2019-10-08 19:20:06","false","quantity_cast_impl refactored to use compile time branching rather than concepts",14,12,0
"mpusz/mp-units","f31b26b5e5e2741cd5b09efbae61afbc7bbd35a8","mpusz","2019-12-06 11:18:39","false","Design cleanup

- unknown_unit added
- examples refactored
- base_type renamed to downcast_base_type
- scaled_unit renamed to named_scaled_unit
- detail::reference_unit renamed to scaled_unit
- quantity_test cleanup",18,14,0
"mpusz/mp-units","1cc47cbab49b200a015b5340407abbceed66c6e0","mpusz","2020-12-29 10:45:38","false","docs: quick start example updated with the latest changes",17,27,1
"mpusz/mp-units","27cd47b7afd9c21a042a77355c0976cea54a51d6","mpusz","2023-05-11 09:10:52","false","refactor: implicit conversion on construction allowed for `quantity_point` if `quantity` does the same",48,55,1
"mpusz/mp-units","615c80e231fe665e673babb646243103eaf69f16","mpusz","2019-11-06 21:52:48","false","Tabulator and new line format string unit tests added",14,13,0
"mpusz/mp-units","ae69e2e2b65644916169db4133d15a533e3bb101","mpusz","2023-11-07 02:52:10","false","fix: `are_ingredients_convertible` now mandates explicit conversion for `To` dimensionless quantities",2,61,1
"mpusz/mp-units","7889ab8f058422eda73f866a32a1e67dac8b4391","mpusz","2022-12-16 17:17:06","false","fix: missing `TYPENAME`s added",30,51,1
"mpusz/mp-units","598a61763489ddd54e2782f2202fa2d548a2ccb8","JohelEGP","2020-05-09 05:30:12","false","Fix minimum required CMake version",17,19,0
"mpusz/mp-units","511280d250a77a35628ee31d66299781d7cae403","mpusz","2021-12-12 17:38:49","false","ci: MSVC support updated to conform to new Conan versioning for this compiler",32,38,1
"mpusz/mp-units","56a5500e57150ca93d36ff0f573e4e5dde209f06","mpusz","2021-09-30 18:58:34","false","feat: Initial gitpod support",26,36,1
"mpusz/mp-units","0b9b159695ff24bafddd2eb06ea9fc2207cff6dc","mpusz","2022-10-20 12:03:15","false","fix: units design refactored and fixed",31,49,1
"mpusz/mp-units","0566cc631dad3a9934b897b6f71c03caca12ddf8","oschonrock","2020-02-16 02:35:49","false","implementing units::ratio_add and tests
not yet used in src/include/units/bits/dim_consolidate.h
because it breaks and cascades (due to new exponent we think)",17,17,0
"mpusz/mp-units","c997208fa7538821718ba9ef6cb2b37aae158704","mpusz","2019-01-14 18:37:25","false","[[nodiscard]] added",2,3,0
"mpusz/mp-units","7803da0bdf2b97ca375c3a1ccbc105c62a566e89","rbrugo","2020-04-07 23:01:01","false","Added electric field strength",13,18,0
"mpusz/mp-units","925239cb31e3e17ec22d30f65d1e048a584560b8","mpusz","2019-01-14 18:38:51","false","Small constraints cleanup",2,3,0
"mpusz/mp-units","163295842e6296f02acaa26321a90c1a245e61bc","mpusz","2023-01-04 18:06:25","false","test: initial version of `linear_algebra_test` added",35,51,1
"mpusz/mp-units","3725db424377feaa5bcc78cc9809e45d0293c373","mpusz","2023-06-21 09:28:24","false","style: whitespaces and formatting fixed to make pre-commit happy",14,57,1
"mpusz/mp-units","998266e780edda307f429490b61859b1f2f8eb77","chiphogg","2021-12-31 14:35:30","false","Try fixing MSVC 14.2

I don't know how to run the build directly, but it seems like this
should work.",30,39,1
"mpusz/mp-units","ce3f0484566cf14ebd890864483aaa8d28f3bc2a","chiphogg","2022-08-10 23:36:44","false","Address remaining comments for `magnitudes.rst`",34,46,1
"mpusz/mp-units","a80378cae86d818c15634dba265ddba789b29adc","chiphogg","2021-12-29 12:51:16","false","Support addition and negation in ratio",30,39,1
"mpusz/mp-units","1328ae42459c4c590bcec6081a413ed738270d00","mpusz","2023-08-01 20:06:15","false","feat: `point_from` added to `quantity_point`",14,58,1
"mpusz/mp-units","d46377ee160d57b2006ca56ef0f10b169b69dc70","mpusz","2023-02-23 11:15:50","false","build: recipes updated to Conan 2.0",44,53,1
"mpusz/mp-units","80a86e340c10165f13b64dfac33cb284e2981e67","mpusz","2020-11-05 11:16:05","false","ci: Travis and AppVeyor support removed",19,25,0
"mpusz/mp-units","1a0f5e69ceaa21a01e4fc62877d9f7a1cdfe939f","mpusz","2023-03-05 08:16:23","false","ci: `conan remove -f` is no longer in Conan 2.0",44,53,1
"mpusz/mp-units","63682c99c54a3ca0b1110ec68c0e9efb6bddef81","mpusz","2021-04-01 11:20:24","false","ci: Conan `test_package` fixed to use references rather than UDLs",33,30,1
"mpusz/mp-units","348dc236bd90974203a23f73575dca94b7e15fec","mpusz","2019-05-18 11:01:09","false","0.1.0 released for gcc-8",2,8,0
"mpusz/mp-units","ca0b37efded2bcc36b2e3fb85ff7f27f53aab638","mpusz","2021-01-04 08:45:52","false","Merge branch 'master' of github.com:mpusz/units",22,27,1
"mpusz/mp-units","1108e13cab7de79f9a4a4763f945ee121b6db66b","mpusz","2021-01-28 13:12:13","false","build: test_package swithced to use new Conan toolchains",27,28,1
"mpusz/mp-units","27c9ca5ffdfeeefc439349fdc847764802f4ba3a","mpusz","2021-03-17 21:29:23","false","ci: yet another attempt to cache Ninja",34,30,1
"mpusz/mp-units","1cb20145c86cae720c37939c63ee81cdf4bb0061","mpusz","2023-08-25 19:16:16","false","refactor: workaroud on `ratio` comparison to enable clang-16 compilation",9,59,1
"mpusz/mp-units","b7348809035cb7444360c59af6b669351bad5fff","mpusz","2022-10-21 21:10:12","false","refactor: `standard` renamed to `unicode` in `basic_symbol_text`",30,49,1
"mpusz/mp-units","18b4d3be3365f65e13144b4a90e32060a24a5af5","mpusz","2023-10-17 06:20:28","false","fix: missing header include added to `type_list.h`",1,61,1
"mpusz/mp-units","718e56082a59bf2b011a09478325aed3f3b9d872","mpusz","2019-10-18 19:34:50","false","Prefix definition reworked",14,13,0
"mpusz/mp-units","e52035583598effc0ed8c904364206637ce1261f","mpusz","2019-10-08 19:27:35","false","Approach updated DESIGN.md",14,12,0
"mpusz/mp-units","2360392a3d8b203e456609665749da33b90932bd","mpusz","2020-02-11 07:51:34","false","Tests for #58 added (uncomment when fixed)",18,16,0
"mpusz/mp-units","f7cd43da35d1fa6f5330351b05b004ef824d3b42","mpusz","2023-01-04 19:18:33","false","docs: linear algebra examples added to the ""quantity value"" in glossary",35,51,1
"mpusz/mp-units","1cd3c4bafb07c5c8aa7ff4c6b93fb25802358ebf","mpusz","2021-07-28 11:11:11","false","ci: The same changes applied to ""CMake Test Package CI"" workflow",25,34,1
"mpusz/mp-units","0473339ac46f6cd0b639803743aa401ddb1df251","mpusz","2020-05-05 18:59:03","false","CHANGELOG updated",15,19,0
"mpusz/mp-units","f0cfc14b834799d6dc2fae9aeafc0bdbac6a3ec6","JohelEGP","2021-03-18 22:56:31","false","refactor: remove `operator/(Rep, reference)`

Addresses https://github.com/mpusz/units/pull/261#discussion_r597289047.",34,30,1
"mpusz/mp-units","c51f6a9d29c43e8bb6083097203fff8cf22d083a","mpusz","2022-12-20 16:22:51","false","refactor: `RepresentationOf` concept usage added + `quantity` concepts cleanup",30,51,1
"mpusz/mp-units","a3b9ef8eaa4813ffbc2290001bffa20da4089a7a","rbrugo","2020-03-20 13:10:02","false","Deleted a commented out test case",14,18,0
"mpusz/mp-units","d5f7de8ecbf9449d5908f0475322379e1798a4a0","mpusz","2019-12-17 07:36:31","false","unknown_dimension definition changed to contain at least one exponent",20,15,0
"mpusz/mp-units","cc5318e5cca782e57c0ccfe703bbc60d2818a9ad","RalphSteinhagen","2021-08-04 11:42:50","false","refactored HEP units into separate files and corrected namespace where necessary",25,34,1
"mpusz/mp-units","cbed8b06b8c8669465ba7107d13e022fb4ce0a56","mpusz","2021-11-07 08:19:00","false","docs: fexed broken link to LA library

Resolves #308",30,37,1
"mpusz/mp-units","0986d1e812f75ad898cba5738f13a42c4176490e","mpusz","2019-12-01 19:00:08","false","dimension_test enabled",18,14,0
"mpusz/mp-units","94eb477f02434c8498d6003b3c270902f21955e0","JohelEGP","2021-02-22 18:40:23","false","refactor: apply comments",27,29,1
"mpusz/mp-units","225696135ca4e4865db6023a2dfd4f2c67dbc0e8","mpusz","2019-05-18 16:15:07","false","Small documentation update",2,8,0
"mpusz/mp-units","cd2cd620bb5a727256837ae94f5fd5d13de4d11a","mpusz","2023-05-22 15:54:14","false","refactor: constraints for `common_reference` improved",47,56,1
"mpusz/mp-units","34df0eb3dbebc530f60b7d77d66bdfcd40b1b9b5","mikeford1","2020-06-27 11:44:44","false","trivial reordering",19,21,0
"mpusz/mp-units","f995f5ce600f33c19955a64d65c043bfaff8d68c","mpusz","2019-04-11 17:41:24","false","Prefixes support added",2,6,0
"mpusz/mp-units","9cea2b89cf55e15481d65dacfbac1464a6fd7166","mpusz","2019-04-11 12:36:35","false","Badges fixed in README",2,6,0
"mpusz/mp-units","d3553d2d29da6786a5c6af3bbc576191ac9e5fa4","mpusz","2020-02-01 20:57:36","false","CMake common tools updated",18,16,0
"mpusz/mp-units","0745fd18f38a15a38a083742abc3320343d2fce5","mpusz","2023-06-05 09:11:10","false","fix(unit test): `BaseQuantitySpec` now is proparly qualified with a `detail::` namespace",48,56,1
"mpusz/mp-units","4313df390c853a95eb34d809402bc0a7f444d3b8","mpusz","2022-08-03 11:34:45","false","refactor: `hypot` refactored to use variadic `common_type` version",34,46,1
"mpusz/mp-units","1d83b7a99c96a2b38b5ce51f23b2bde39129468a","mpusz","2023-01-04 14:34:10","false","fix: incorrect function trailing `;` removed",35,51,1
"mpusz/mp-units","0188aa265c184fee7fad59c132ac63de79af978c","mpusz","2021-07-28 09:45:02","false","build: `force_host_context=True` added for `build_requires`",25,34,1
"mpusz/mp-units","c583f771a28aa438425f1bc60ed208ba68b7a9bf","mpusz","2019-09-27 08:00:19","false","Todos removed from metabench files",11,12,0
"mpusz/mp-units","82f018f216f74849ad3c94e42ba50967c71a384f","mpusz","2022-08-02 06:39:59","false","ci: `working-directory` fixed",34,46,1
"mpusz/mp-units","d42c89e459dfcce2b6a0aaccdd5eb7a20afe438a","mpusz","2023-08-26 18:26:56","false","ci: check if gcc-13 is available",9,59,1
"mpusz/mp-units","4361cb874e89776785be0149a2e17de1f0ef60aa","mpusz","2022-04-27 17:32:21","false","fix: `hectare` definition fixed to be a prefixed version of `are` + other units

Relates to #359",35,43,1
"mpusz/mp-units","a09cef4a3fc031182b33d7ccf2aeeefa8b699e39","mpusz","2021-11-15 12:46:24","false","fix: fix VS2022 shadowing issues",31,38,1
"mpusz/mp-units","c54aa9b0eb90455e1e74cc4f7518894141119b5e","mpusz","2023-04-07 21:00:34","false","refactor(example): `common_type` specialization for `ranged_representation` no longer needed",47,54,1
"mpusz/mp-units","567def2e9b45f2266ef3900bc7da6b984c7ec6c3","mpusz","2020-05-05 19:00:41","false","base_units_ratio description added",15,19,0
"mpusz/mp-units","5afe7766e97f47ae9866e69503bfd9fe9e13a146","chiphogg","2022-04-09 17:49:39","false","Use Magnitude implementation for `base_units_ratio`

This resolves a TODO and lets us use arbitrary exponent denominators.

I also attempt to clarify the semantics.  This is based on my best
effort of understanding pre-existing concepts in the library, so I hope
I got it right!",35,42,1
"mpusz/mp-units","d98a8a0c5efa93f8f5ab6c0263ad13c6335b4ac9","mpusz","2020-06-21 09:04:20","false","build.py fixed",17,21,0
"mpusz/mp-units","4a9425d6703bd89276eb296b4ddf9e9b866e2a03","mpusz","2021-06-06 16:56:46","false","build: Replace `file(REAL_PATH ...)` with an alternative working with an older CMake versions

Resolves #282",26,32,1
"mpusz/mp-units","3e9d5ca189ad8ec1c21b8ce75128fd4a639711c1","mpusz","2020-09-09 09:20:55","false","refactor: :recycle: `unitless` renamed to `one`

Resolves #27",14,23,0
"mpusz/mp-units","7d9ae3ec3150a3a47bb865e96cb3c21c31584154","mpusz","2023-05-25 10:47:10","false","refactor: `mp_units` subdirectory renamed to `mp-units`",47,56,1
"mpusz/mp-units","4d0d6b78a8fb217277dc01c8408649149cdf58c1","mpusz","2023-03-06 13:49:38","false","refactor: `box_example` refactored to `storage_tank_example`",44,53,1
"mpusz/mp-units","9871cf0ed79f2e2835f7925c0dc82c34c79b32c6","mpusz","2019-11-06 21:51:40","false","UnitRep extended",14,13,0
"mpusz/mp-units","5d6fee2585e3015d05fa971a4d76ffe60455a01b","mpusz","2023-04-21 14:00:37","false","refactor: `quantity` refactored + `make_quantity()` added",46,55,1
"mpusz/mp-units","17fd0900a4cb545d5d9b35f90bc4393956905041","mpusz","2022-10-22 07:02:40","false","refactor: expression template operations now take function parameters",30,49,1
"mpusz/mp-units","af6358fbdb06a2ad46aa78d6a0887e7b282fe6ab","mpusz","2020-03-05 10:40:05","false","gcc-9 compilation fixed",15,17,0
"mpusz/mp-units","d8d3dcf33912ea5b90bd89646468f7dd1bde3aef","mpusz","2020-03-26 15:58:37","false","Custom Represetnation Types chapter done",13,18,0
"mpusz/mp-units","18cb5f9386c6c274d12a56c2b7fdf74fb70a8cd8","mpusz","2020-03-10 16:16:46","false","Scaled Units chapter renamed to Named Scaled Units",15,17,0
"mpusz/mp-units","3c0c98f3804bb91aea284d43b296c54f634d8380","mpusz","2019-10-18 20:32:50","false","User-defined description updated in DESIGN",14,13,0
"mpusz/mp-units","cb5371dec90493e785780b3339339522f2fbd8b8","mpusz","2021-05-09 11:49:16","false","build: `enable_ccache()` refactored",33,31,1
"mpusz/mp-units","fc62c04a4649d4c021c1e2cd1b3b7cdb39b06815","mpusz","2020-02-15 11:09:35","true","Update INSTALL.md",17,16,0
"mpusz/mp-units","806fb0751bac13ec0b67e136204d45a4714f2bf5","mpusz","2022-09-10 06:44:46","false","refactor: `short_units` renamed to `unit_symbols`",32,47,1
"mpusz/mp-units","77cc08ef778bb964fd216922535dbbc306ca89b6","mpusz","2023-09-26 10:32:26","false","fix: `min` and `max` compilation issues resolved",2,60,1
"mpusz/mp-units","110986ee1f77d5689a1eaef910a7749feb057dcc","mpusz","2023-08-18 09:10:59","false","feat: `quantity_cast<kind_of_qs>(associated_unit)` now returns the bare unit as a reference",14,59,1
"mpusz/mp-units","4c8b3ce290693fc4c53347966019027830ef5ee1","mpusz","2022-08-03 11:12:24","false","test: Commented out `ceil` unit test enabled as it works correctly now",34,46,1
"mpusz/mp-units","fb9f288c56344ccf30849a207d542398e8ec80aa","mpusz","2023-08-23 10:49:14","false","feat: `quantity_point` construction from `quantity` made private + `make_quantity_point` added",13,59,1
"mpusz/mp-units","d0d95c322abec9fcc45301f479072c7330204467","mpusz","2020-09-14 08:22:07","false","docs: even more restrictive sphinx logging",14,23,0
"mpusz/mp-units","73919f86693d33bc9508f52bd648ab425624f177","mpusz","2019-11-12 19:22:09","false","units-format-spec description changed in DESIGN",12,13,0
"mpusz/mp-units","cfb4614fb6fef12e36b1d10f47653ce21b523a09","Twon","2023-01-07 10:27:38","false","Remove whitespace",35,51,1
"mpusz/mp-units","72ef7584a4e6890163d541b4f2e7426635e09ddf","mpusz","2021-10-20 09:21:58","false","docs: basic concets UML refactored",27,37,1
"mpusz/mp-units","40d6be9f7599c961d8a55af487750102c428b372","mpusz","2021-09-20 17:54:07","false","fix: non-std error handling removed from fmt",26,36,1
"mpusz/mp-units","1a39f549edc3c7c483b43d09fe71c2b46d25fc55","mpusz","2023-06-15 08:47:22","false","docs: CHANGELOG updated",15,56,1
"mpusz/mp-units","a3a12229d97f814b9a6f58bb1ae59c5299e5fdd9","mpusz","2020-06-16 15:44:32","false","foot_pound_second example slightly refactored",18,20,0
"mpusz/mp-units","ca9c880c5097b8c82bc2995367e4574462668029","hofbi","2022-11-17 15:25:58","false","apply clang format",33,50,1
"mpusz/mp-units","6b72dd39c1823c7793fcd8c2a7bed6696a4c628f","mpusz","2022-12-29 18:27:54","false","refactor: headers with system definitions moved to _systems_ subdirectory",34,51,1
"mpusz/mp-units","1f14184ac30196c33bdd85df140d31e38663df65","mpusz","2023-10-25 12:38:26","false","style: clang-format updated to clang 17",2,61,1
"mpusz/mp-units","792dba28fbc94e2b6659d2a2fc312d1be0eb6c78","mpusz","2020-12-21 23:16:48","false","build: test_package CI build fixed",19,27,1
"mpusz/mp-units","f3374520a43a3ab3fe4e20d18492316271f22d5e","mpusz","2020-03-19 13:46:23","false","""Framework"" and ""Design"" chapters renamed",14,18,0
"mpusz/mp-units","4607e69e24088552665d2c6fcba9087695d43eb6","mpusz","2020-05-05 20:44:42","false","libfmt updated to 6.2.0",15,19,0
"mpusz/mp-units","436d288154a5f91add88018ec60fbfd40029c167","mpusz","2023-11-04 18:43:44","false","style: whitespaces fixed to make pre-commit happy",1,61,1
"mpusz/mp-units","993ea8e3ac8622f1f6647ae51a27cc256b60057e","mpusz","2023-09-26 13:40:08","false","ci: clang-tools installation added",2,60,1
"mpusz/mp-units","0a5e791550a064ee4ace1563716536f7c2b4d93b","mpusz","2021-12-13 09:20:12","false","docs: `range-v3` dependency note fixed on the usage page

Resolves #319",31,38,1
"mpusz/mp-units","6a3865b45523595274cf2d77112d874226668856","mpusz","2020-09-14 10:50:51","false","build: header-only mode enabled for Conan",15,23,0
"mpusz/mp-units","7bcc5c7b0b0a7cf931d6cd5efdb551e4df866ec3","mpusz","2019-05-28 13:01:50","false","common_ratio refactored",2,8,0
"mpusz/mp-units","ccdf5d319a001245672042c0f32dd2b0073f91b6","mpusz","2023-08-02 09:20:32","false","feat: `point_from` extended with the case of the same origin",14,58,1
"mpusz/mp-units","2e1e7a979e7338fda532c25040f13a8366f4d50f","mpusz","2023-03-31 06:57:08","false","ci: setting version environment variable fixed",45,54,1
"mpusz/mp-units","e6cfd4e69b696d243ae2d96ab880279bf27c9c9c","mpusz","2021-08-10 11:54:39","false","build: clang-13 support added",25,34,1
"mpusz/mp-units","029204825282e0d33f46e1f82b317c639bda2ca3","mpusz","2023-08-01 20:04:46","false","refactor: `quantity_point` converting constructor simplified",14,58,1
"mpusz/mp-units","d4f1e93d6c71b65546f08160b4691f54c8e9dfef","mpusz","2022-08-23 08:28:30","true","Merge pull request #375 from chiphogg/chiphogg/docs

Update prefix documentation",34,47,1
"mpusz/mp-units","ee938409e5bf41f6bbfc51364194c99d317203c4","mpusz","2019-08-05 16:35:18","false","README updated with pre-release notes",4,10,0
"mpusz/mp-units","78bf9a9add012012d653e632ba77decb8d0ddd99","mpusz","2023-09-30 02:34:19","false","Update src/core/include/mp-units/quantity.h

Co-authored-by: Johel Ernesto Guerrero Peña <johelegp@gmail.com>",2,60,1
"mpusz/mp-units","25a470dcb739ec493208d93d4598557f582db08a","mpusz","2019-05-28 14:21:28","false","std::conditional_t replaced with custom implementation",2,8,0
"mpusz/mp-units","7b47b2fe572fcfef638ebdd1b1311eda6bc168b4","mpusz","2023-07-05 09:24:53","false","fix: text output of 8-bit integers fixed (resolves #470)",11,57,1
"mpusz/mp-units","0cfe7c605f908f3502535f3482f56575c9145fec","mpusz","2020-03-11 16:42:12","false","zip files explicitly set as a binary type in git",15,17,0
"mpusz/mp-units","771a4000079a36c99ab8d1bc9bd2de12187b0961","fdischner","2022-01-27 00:18:51","false","build: add support for AppleClang compiler",30,40,1
"mpusz/mp-units","d2c66e79f52fae759d749db05ec9316e0f12c919","mpusz","2020-06-27 17:23:32","false","angular_velocity support fixed",19,21,0
"mpusz/mp-units","d0684c46441889d1ac62d9c231c9573626aed2a9","mpusz","2023-06-08 19:49:24","false","fix: typographic system now explicitly uses international inch to define point",48,56,1
"mpusz/mp-units","0ca8894de478c6350024e2dd522239bbbd91be4d","mpusz","2020-02-15 11:06:03","true","Conan quick intro added",17,16,0
"mpusz/mp-units","2b2f381ad5482d70f93e26141c0db52722b46568","mpusz","2023-06-12 08:51:18","false","test: `custom_rep_test_min_expl` updated for V2",48,56,1
"mpusz/mp-units","f516e3287e75afdedaa540e8630445de954aeaaf","mpusz","2022-09-08 21:08:00","false","refactor: `nodiscard` added",32,47,1
"mpusz/mp-units","d18480879d5e7252ba79e71471dc788f326604bc","mpusz","2020-05-08 09:56:07","false","Linking with Conan targets only when they exists (resolves #98)",16,19,0
"mpusz/mp-units","a04507e96104d2fc6afced9f5cd1a9766d855996","mpusz","2019-09-17 12:46:10","false","Documentation update for 0.3.0",4,11,0
"mpusz/mp-units","822c409e91ba68f838981039226dee15bfc815d0","mpusz","2021-03-19 22:19:53","false","docs: library directory structure chapter updated",32,30,1
"mpusz/mp-units","dd2079055da6c1144707b2bb6b5a84099c823f40","mpusz","2020-12-29 10:46:27","false","feat: hello_units example updated with the latest changes",17,27,1
"mpusz/mp-units","c7616018661839c207a30e20282e8e21ffc17d10","mpusz","2022-08-31 10:58:57","false","refactor(example): `latitude` and `longitude` now use angular degrees quantity",31,47,1
"mpusz/mp-units","eeb4c9c9512dc46bf88ce26961cba858266659c5","mpusz","2019-07-19 11:49:49","false","Dimension template parameter removed from quantity",3,10,0
"mpusz/mp-units","4498adce7ca2db1b841e3e3c23f8e2d9fb59f110","mpusz","2022-05-22 17:49:10","false","test: test for new `quantity` CTAD guide added",34,44,1
"mpusz/mp-units","7c02da50d884a9171ef4c8de1b2663a9b970aaf7","mpusz","2022-10-03 16:32:47","false","fix(example): clang-15 compilation fixed",30,48,1
"mpusz/mp-units","5c15018190766d216896e9c9d32daf2a48120266","mpusz","2021-09-10 06:17:04","false","build: Dependencies updated to gsl-lite/0.38.1 and catch2/2.13.7",24,35,1
"mpusz/mp-units","698b6ce3383472949b3daac62a9fea2f16f018fe","mpusz","2023-06-15 14:39:33","false","refactor: `sudo_cast` `if constexpr` condition refactored",15,56,1
"mpusz/mp-units","c713ae7a43a33740a12e5899f385baf112add404","mpusz","2022-06-06 17:05:57","false","docs: P0847 reference removed

Resolves #364",35,44,1
"mpusz/mp-units","c79a76ab8f16fd40cb45aceca3cdc585cf817aec","mpusz","2023-06-13 06:17:32","false","fix: `pow`, `sqrt`, and `cbrt` fixed for quantities",48,56,1
"mpusz/mp-units","ca61f575f0382d878c6a80790ff59e33c09f5f69","mpusz","2021-09-30 20:30:29","false","chore: conan install `-u` option removed from gitpod",26,36,1
"mpusz/mp-units","364699e5d954c34fe5a67f89530d9c9d725c851b","mpusz","2022-11-07 05:45:31","false","chore: unused files removed",32,49,1
"mpusz/mp-units","2f7ecbc19d46eb68bc1a514806cac2876a7cc2a8","mpusz","2023-07-10 15:56:05","false","docs: ""Dimensionless Quantities"" chapter added",12,57,1
"mpusz/mp-units","ce8fbcaf6c8a82f1d07ae0e12bd28725b33f27b2","mpusz","2022-03-10 17:55:40","false","build: `conanfile.py` updated",31,41,1
"mpusz/mp-units","a88d2450bb1a4fd3e045c98a10026e9bee4935ff","rbrugo","2020-04-07 00:43:04","false","Fixed Ampere symbol",13,18,0
"mpusz/mp-units","5dd9eaac87a50adc62b170987ebac2d1344d63c5","mpusz","2020-05-24 20:49:53","false","Redundant constraints removed (resolves #109)",17,20,0
"mpusz/mp-units","6d7cda949eee5c8d0428cbc16b685c497d92534f","mpusz","2021-01-02 09:56:50","false","fix: `quantity_cast` now correctly casts to an `alias_unit`",19,27,1
"mpusz/mp-units","bb57013adda322b34b7e82e75e39265b6a0a6383","mpusz","2020-09-14 12:11:58","false","Revert ""docs: Conan windows support issue documentation added""

This reverts commit 2e2259e6502f54839ded302720486d92d107ba18.",15,23,0
"mpusz/mp-units","8ef6d409b2df8e9fef1d35b0c07af9661eb85209","mpusz","2023-05-02 20:00:19","false","refactor: character of `dynamic_viscosity` and `magnetic_flux_density` set explicitly",46,55,1
"mpusz/mp-units","0dca41b5aea25d3f752336406f0910abee0b8ab6","mpusz","2022-04-02 18:59:10","true","Merge pull request #348 from hofbi/cmake_format

Enable CMake format in pre-commit",35,42,1
"mpusz/mp-units","57ec615d797f45d10c09949f56618b9517a51f9c","mpusz","2021-11-15 12:57:47","false","fix: VS2022 issues related to the `std::string_view` iterator fixed",31,38,1
"mpusz/mp-units","e7f763ddc34ed283891af9f4e8842a3a1e323731","mpusz","2020-03-26 19:56:26","false","Natural Units use case chapter added",12,18,0
"mpusz/mp-units","9c514439d18905d3cbffcc842bc17283aa447743","HazardyKnusperkeks","2022-08-01 17:29:45","false","Fix: 32 bit overflow

../units/src/core/include/units/magnitude.h: In instantiation of 'static constexpr intmax_t units::detail::prime_factorization<N>::get_or_compute_first_factor() [with long long int N = 149597870700; intmax_t = long long int]':
../units/src/core/include/units/magnitude.h:627:74:   required from 'constexpr const intmax_t units::detail::prime_factorization<149597870700>::first_base'
../units/src/core/include/units/magnitude.h:632:54:   required from 'constexpr const auto units::detail::prime_factorization<149597870700>::value'
../units/src/core/include/units/magnitude.h:631:25:   required from 'struct units::detail::prime_factorization<149597870700>'
../units/src/core/include/units/magnitude.h:642:71:   required from 'constexpr const auto units::detail::prime_factorization_v<149597870700>'
../units/src/core/include/units/magnitude.h:655:18:   required from 'constexpr auto [requires units::Magnitude<<placeholder>, >] units::mag() [with ratio R = ratio{149597870700, 1}]'
../units/src/systems/si/include/units/isq/si/length.h:59:91:   required from here
../units/src/core/include/units/magnitude.h:623:70: error: unsigned conversion from 'long long int' to 'std::size_t' {aka 'unsigned int'} changes value from '149597870700' to '3568982636' [-Werror=overflow]
  623 |       return static_cast<std::intmax_t>(factorizer::find_first_factor(N));
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~",34,46,1
"mpusz/mp-units","017183653d502fcc06a4bb6c7df4e42b6b4c8739","JohelEGP","2021-02-16 22:40:03","false","feat: full-on dimensional analysis between related quantity kinds",26,29,1
"mpusz/mp-units","08818ac6a8292dfa234b48434cd2b7b11f77c1ee","chiphogg","2022-01-12 00:19:25","false","Make pow()'s argument a simple (non-template) parameter",30,39,1
"mpusz/mp-units","746aa34fccb20151327979113fbc7d0926c91f5d","chiphogg","2022-04-06 00:18:52","false","Tweak unwise variable names",35,42,1
"mpusz/mp-units","0593516622a9836cfbeded499523b162a7938afc","rbrugo","2020-03-17 12:04:09","false","Added types in format grammar",15,18,0
"mpusz/mp-units","b881b564807cc611bd91f4caf1124902676266da","hofbi","2021-11-13 11:51:04","false","feat: first draft ceil",31,37,1
"mpusz/mp-units","e1d8d6b81df92b4e6ed991bf3cf64cbb810052d9","mpusz","2021-04-02 17:31:36","false","fix: Fixed shadowing warnings on clang",33,30,1
"mpusz/mp-units","57548fdb2416bfa516d8defb01f4a482742206f3","mpusz","2020-09-12 19:21:45","false","refactor: added preprocessor branch for downcast_mode OFF code",14,23,0
"mpusz/mp-units","758c05ea15064dab6a89118fcdf7bde32399a880","mpusz","2019-12-23 12:22:37","false","quantity_cast fmt tests added",16,15,0
"mpusz/mp-units","120d863c40a172b1aacd2116ea9c517012b190e8","mpusz","2021-09-09 07:26:23","false","test: `derived_quantity`-related compilation error fixed",24,35,1
"mpusz/mp-units","e0d5e25104293c7f418d061a22a2070323198bea","mpusz","2022-08-10 10:42:43","false","build: new compilation warnings enabled

Refers to #385",34,46,1
"mpusz/mp-units","af928dd0c76441938d13f0c13bab154257bc513c","mpusz","2021-11-23 10:17:47","false","feat: conversion helpers from `mp-units` to `std::chrono` types added

Resolves #316",31,38,1
"mpusz/mp-units","342b8c9acf96153a0e8c2b979784ddb4c4931563","mpusz","2021-10-15 16:18:04","false","fix: missing `input_iterator` definition for clang added",28,37,1
"mpusz/mp-units","ae7aca5fa0b02eb2d305978ef779cb9becd93708","mpusz","2021-05-11 18:12:46","false","test: uncommented some already supported cases

Resolves #206",26,31,1
"mpusz/mp-units","669332061f3e16ca301899d632bf5d7545b9f967","mpusz","2021-04-17 09:52:49","false","docs: hello_units example updated with aliases",32,31,1
"mpusz/mp-units","c6e9a9caf23472dc5ae98190286a5459e2c0bb84","mpusz","2023-08-26 19:05:15","false","refactor: `quantity::number_` member renamed to `quantity::value_`",9,59,1
"mpusz/mp-units","9944de10f9f9bf0ef5d954b8d5beb2a672eb6434","mpusz","2022-08-02 13:10:21","false","ci: `fmt` dependency checked only when `UNITS_USE_LIBFMT` is set",34,46,1
"mpusz/mp-units","22fabb5a1bb2e28ed1d201a28f6e511b2c93b39b","mpusz","2019-12-26 08:59:05","false","day unit added",16,15,0
"mpusz/mp-units","24af110fb83ea7f1f9f1676447fd70fa2841064b","mpusz","2020-03-11 12:04:34","false","Most of the old MD documentation files removed",15,17,0
"mpusz/mp-units","d79d5628a325add4c8bf6f88bcafa5110f0af33b","mpusz","2020-12-23 20:14:23","false","ci: GitHub actions jobs renamed",19,27,1
"mpusz/mp-units","ed964292c7e11d86f4163ff201a594dfc0427e73","mpusz","2019-04-16 08:36:07","true","quantity_cast() made constexpr",2,6,0
"mpusz/mp-units","3eb40043dcc187da0eaa6b2cc19274dc34b6b48c","mpusz","2020-05-08 10:04:14","false","CHANGELOG updated",15,19,0
"mpusz/mp-units","b4cf1e57de2d1fd40c7dd02add01a89f15dfd1f0","mpusz","2023-08-29 12:09:41","false","refactor: quantity point concepts cleanup",10,59,1
"mpusz/mp-units","ac0f10184c427ed58e86f3d8d2847afe2a586289","mpusz","2020-05-06 16:17:49","false"," fabs() removed as abs() is enough",15,19,0
"mpusz/mp-units","1dae61e1c8485aa5436a8d478987b977b83acbe6","mpusz","2023-05-16 12:07:29","false","feat: `quantity` converting constructor now takes into account a convertibility of a representation type",48,55,1
"mpusz/mp-units","038616c901dae4f76063b36672bd6ec85e057e42","chiphogg","2022-01-12 15:11:50","false","Try rearranging the order

Maybe this will help me understand where the problem lies.",30,39,1
"mpusz/mp-units","89756c5b74fafa79c267785af68b92268d1af94d","mpusz","2023-02-13 17:35:07","false","feat: `QuantityKindSpec` concept support added + some cleanup",43,52,1
"mpusz/mp-units","e7f37e4e33617bf8eba665561be38a8722b6cb4c","mpusz","2019-12-29 16:06:03","false","CGS fmt tests added",16,15,0
"mpusz/mp-units","c45b68232a1dd114f8f91b045470ff3915b626db","mpusz","2021-04-29 15:07:24","false","ci: working directory set for ""Configure test_package CMake"" step",32,31,1
"mpusz/mp-units","823fe26a1311a334fd8f954d7916580473d671a4","mpusz","2023-08-01 09:55:39","false","feat: `quantity_point` binary operators are now constrained to prevent weakening of the origin",13,58,1
"mpusz/mp-units","240ec3a460c6a4a1005b5f4a9dd9d97eacf555f5","mpusz","2021-10-20 17:58:31","false","build: CTAD for quantity is not supported by clang",27,37,1
"mpusz/mp-units","0eb2f404be20d3caf34c85ec8fcc5c0db505df67","mpusz","2020-02-24 14:17:03","false","clang-format applied to type_list",14,17,0
"mpusz/mp-units","764e211f9a3479512c24b30d25bf6fb395f1f2fe","mpusz","2023-02-03 15:52:17","false","fix: perfect forwarding of a number in the reference multiply operator fixed",41,52,1
"mpusz/mp-units","872caf460a557533e93c6d4842127046fcaea7a4","mpusz","2022-11-30 16:54:13","false","refactor: `quantity_cast` refactored",34,50,1
"mpusz/mp-units","49eb4523cd144a647c9f4adc0ec3d355db78f907","mpusz","2022-05-21 16:56:47","false","refactor: `units::` namespace prefix is no longer needed before `prefix`",34,44,1
"mpusz/mp-units","8c0f9d4f8ef712633d4709bac1cbd00b71b50570","mpusz","2022-05-12 15:12:35","false","build: `test_package/conanfile.py` updated for Conan 2.0",33,43,1
"mpusz/mp-units","36fd4ba97a2eacbd8be29c1f9ab0990e057309c1","mpusz","2019-09-18 20:10:26","false","Custom derived dimension test refactored to use a new support for extracting derived dimensions",4,12,0
"mpusz/mp-units","735eb3354ede86107283265a9ab82e06f4648694","mpusz","2020-05-20 20:12:03","false","experimental_angle example compilation fixed on gcc-10",16,20,0
"mpusz/mp-units","36055208d19e120231d5c9aacfbdb98ea12df5fc","mpusz","2020-03-26 17:26:27","false","Linear Algebra chapter added",13,18,0
"mpusz/mp-units","8675542f982471166edf6cd2edc5a8b234b9e7b5","mpusz","2020-01-13 10:15:26","true","README updated to reflect the latest units changes",16,15,0
"mpusz/mp-units","97af2e8576828b11945075fdae4ade6b2b893ef0","mpusz","2020-11-05 14:19:14","false","ci: CodeQL workflow fixed for C++",18,25,0
"mpusz/mp-units","84c8a0632e71aeb136ddfb74f140f73103be2a6b","mpusz","2020-05-28 12:22:14","false","Reference section of documentation refactored + random added",17,20,0
"mpusz/mp-units","5015d7c3e3fd217f7c27d38deea8df17cd463ea9","mpusz","2023-08-01 15:25:15","false","fix: explicit `this` interfaces fixed for `quantity_spec`",12,58,1
"mpusz/mp-units","5f216af4de13222723fbdfb876f28f7feda81fe3","mpusz","2019-11-04 06:29:34","false","Missing header guard added to fixed_string header",14,13,0
"mpusz/mp-units","4dca00617c802755bcf0bd5dac1d9790e1b67993","mpusz","2023-03-29 14:46:34","false","refactor(example): ref qualifiers added to a conversion operator of `validated_type`",44,54,1
"mpusz/mp-units","327892a9b325c393679914891b7d798d0b841fd9","chiphogg","2022-08-11 13:43:04","false","Fix underscores and excess backticks",34,46,1
"mpusz/mp-units","dd1a46cd358765ce15196056d6ea6898f116b79f","JohelEGP","2021-03-18 17:13:49","false","style: mark comment as TODO

Addresses https://github.com/mpusz/units/pull/261#discussion_r596641518.",35,30,1
"mpusz/mp-units","b9325ce5ebfc305f16b539907283d9141e67cc1a","jansende","2019-10-02 17:35:37","false","Fixed LICENSE.md link",14,12,0
"mpusz/mp-units","91761f05220bbe1c9cf3ddf2decab9e144a0f6d8","rbrugo","2020-09-09 23:24:45","false","Added L modifier for localization",14,23,0
"mpusz/mp-units","fe73c9abe2122d3219dcb31692ab7d743b87a7bd","JohelEGP","2021-02-21 19:54:05","false","fix: disable range-v3 in MSVC",27,29,1
"mpusz/mp-units","07b5364c97214b817b46b70ff7d7b998094a8dac","rbrugo","2020-04-07 21:56:00","false","Added dynamic viscosity",13,18,0
"mpusz/mp-units","863a14ed367b11d75a665b9d7fc2ccbf1194f860","mpusz","2019-05-08 17:19:33","false","Unit tests with useless casts refactored",2,7,0
"mpusz/mp-units","cff718301c4ce2b44ed16d9cc31321baf0ba51ad","mpusz","2020-12-28 14:18:02","false","refactor: quantity_io added",17,27,1
"mpusz/mp-units","4ec015d26e0d565a6a11139a945e17ef65d0f812","mpusz","2020-02-11 19:58:18","false","SI prefix enabled for eV",16,16,0
"mpusz/mp-units","156ab7ae7faa0b773f31c73e92c48cc6310a48eb","mpusz","2019-12-12 14:39:04","false","Unknown dimension assert added to quantity_test",19,14,0
"mpusz/mp-units","441db47928fb65792ac78e9f34f866685932b3d6","mpusz","2021-03-30 18:00:23","false","fix: MSVC Release build fixed + pragmas usage refactored",33,30,1
"mpusz/mp-units","c96e88e1be8316e1bccf7417c7e59564165c1b07","mpusz","2022-09-13 00:00:36","false","Merge branch 'master' of github.com:mpusz/units",30,47,1
"mpusz/mp-units","800dade31c1d005d599112af25619b3b8df3585b","mpusz","2021-03-30 12:26:24","false","fix: `fixed_string` fixed for clang",33,30,1
"mpusz/mp-units","3f0691d3e038cec19bdb56d72b5053478024f21b","mpusz","2021-10-14 13:07:54","false","chore: ""restructuredtext"" extension settings added

Preview window scrolling is broken so it is better to disable it.",27,37,1
"mpusz/mp-units","5fc7e01d1993ac893d1be7e26df3667311bf499b","mpusz","2021-04-02 16:47:54","false","docs: Usage chapter renamed and moved down in the index",33,30,1
"mpusz/mp-units","845d34777314bea28d59887ae2409511086456ef","Twon","2023-01-07 08:34:36","false","Cache keys were missed in last update",35,51,1
"mpusz/mp-units","e1a17ab1f0bf25968fa8c421dc1d9e737a5fc018","chiphogg","2022-07-07 16:33:51","false","Use variables instead of ratio members

This prepares us for a time when we won't _have_ the `ratio` members
(because we'll be using `Magnitude`).",34,45,1
"mpusz/mp-units","a6b6afe438030ffe02bfe326e6c2942020f1a755","chiphogg","2022-01-28 19:06:26","false","Add value and categorization helpers for Magnitude

For each Magnitude `m`, we now support:

- `is_rational(m)` tells whether it represents a rational number.
- `is_integral(m)` tells whether it represents an integer (and
  `is_integral(m)` implies `is_rational(m)`).
- `m.value<T>` represents the value of `m` in the type `T`.

If `T` is integral, we only support `m.value<T>` when `is_integral(m)`.

We also perform all intermediate computations in the widest type of the
same category (floating point, signed, or unsigned).  This means we can,
for example, give first-class support to embedded users who may have
hardware support only for `float`: we can ensure they get the most
accurate `float` value we can compute, without burdening them with a
dependency on `long double` in their runtime code.

We are not yet ready to replace `ratio` as the definition of unit
magnitudes, but we're a step closer.  The next step will be to decompose
a Magnitude into numerator, denominator, and irrational parts, giving us
full bidirectional convertibility with existing `ratio` instances.  Then
we can migrate over in a controlled fashion.",30,40,1
"mpusz/mp-units","7a03692e14cbff55b6b274f35ee0248ceecf6296","chiphogg","2022-04-12 00:32:24","false","Annotate 225'653'407'801 as prime",35,42,1
"mpusz/mp-units","4cd90674d5d446cafe352b742142807c4358c9e4","hofbi","2021-11-15 17:53:15","true","Feat: Round (#313)

* feat: round

* add more constraints for round

* overload round for quantity

* fix clang tidy

* Validate types before return",31,38,1
"mpusz/mp-units","23dd21465dbf458843b44478facdf2934d49878d","dkavolis","2020-10-17 19:50:58","false","rational powers",18,25,0
"mpusz/mp-units","9cd0cb41050f301e6baf26611ba5fb4e990e961f","mpusz","2020-09-10 11:01:38","false","feat: two argument explicit cast support added",15,23,0
"mpusz/mp-units","9e74613a4a47c55f08071d879ebdddd2f864ab16","mpusz","2019-07-24 10:20:06","false","Leading underscore prefix removed from UDLs",4,10,0
"mpusz/mp-units","7ce8173b402f4bc4c4ef85585c676c85ae2d5d6f","mpusz","2023-08-01 10:04:31","false","test: initial version of `quantity_point_test` added",13,58,1
"mpusz/mp-units","cc5a84823708bd8eefc91e11240a54ff29b1f618","mpusz","2021-04-29 11:44:08","false","ci: calling `conanvcvars.bat` for MSVC added",32,31,1
"mpusz/mp-units","c892889901e246cff49bea6c88f2ca268e99cc7a","mpusz","2023-05-14 08:38:08","false","feat(example): `currency` and `unmanned_aerial_vehicle` examples added",48,55,1
"mpusz/mp-units","f5d21a071142fbdd3b684ffb47ef1647d2540a40","mpusz","2022-05-11 09:23:18","false","refactor: :boom: ! `derived_unit` renamed to `derived_deduced_unit`",34,43,1
"mpusz/mp-units","f41eea1cd1d32dbefdfe963c649bdeab609445c0","mpusz","2020-09-06 13:38:18","false","Merge branch 'master' of https://github.com/mpusz/units",16,23,0
"mpusz/mp-units","0f803a1c2e91c49053a2da1adbb08c3512cc2bf2","mpusz","2019-09-30 07:10:38","false","Suppressing non-template-friend compilation warning added to Conan",11,12,0
"mpusz/mp-units","cdb6a4822e3ee91c4a9e6256dd008a21914e3827","mpusz","2019-12-17 08:27:32","false","Installation documentation updated",20,15,0
"mpusz/mp-units","969bf9716ccdf76a4a99833b3f23dc15a552cd0c","mpusz","2023-09-26 17:31:27","false","ci: gcc-12 installation no longer needed in ci-conan",2,60,1
"mpusz/mp-units","794ac2fa67283004158fb378bea8321d34815fe1","mpusz","2023-08-03 09:36:07","false","test: more binary operators tests added for `quantity_point`",14,58,1
"mpusz/mp-units","a39a49c14703b1b626ef12f25e503d9fe075a50a","mpusz","2022-09-02 08:21:58","false","test: VS2019 compilation fixed",30,47,1
"mpusz/mp-units","a79086332490881b040f12a3fe55a2151b069584","mpusz","2021-04-29 06:37:10","false","build: CMake 3.15 does not set default MSVC warning level anymore",32,31,1
"mpusz/mp-units","e5565c7d047ec69f486a44ddf89e2defc0783288","mpusz","2022-05-14 09:29:23","false","docs: typo in the `CHANGELOG` fixed",34,43,1
"mpusz/mp-units","0b053933bd95f9085068fb663b702a067a06ee8f","mpusz","2023-02-03 15:51:26","false","feat: `core.h` header added",41,52,1
"mpusz/mp-units","457175ce7dba12575769594c0703c01065eb9743","mpusz","2022-05-09 17:55:39","true","Merge pull request #349 from JohelEGP/downcast_mode_off

fix: improve downcast mode off",34,43,1
"mpusz/mp-units","28ecc40092399ea159c85e5786582c2e287f120f","mpusz","2023-09-26 11:08:15","false","ci: Conan `settings.yml` file must be created before updating",2,60,1
"mpusz/mp-units","f7fac3a7a53113b8cfcd75f4e6bea9aca633f78f","RalphSteinhagen","2021-07-19 07:45:13","true","Merge branch 'mpusz:master' into master",25,34,1
"mpusz/mp-units","fe70e29bced110392301e3ded1ccd93c8f48b6fa","mpusz","2023-09-26 11:53:41","true","Create codeql.yml",2,60,1
"mpusz/mp-units","c09dbb1756ab8cb9323be4cc163e8c2cb838090e","JohelEGP","2020-09-06 05:33:47","false","test: add missing explicit specifier",16,23,0
"mpusz/mp-units","aa84dcb9efe35a86b76d92171dcbb18a302d7a13","mikeford1","2020-05-30 23:37:19","false","added example and some more units to fps system",17,20,0
"mpusz/mp-units","7cad312b55ddbfd317a26040f9035be0034e4ac6","mpusz","2019-12-23 12:21:48","false","fixed_string refactored",16,15,0
"mpusz/mp-units","70a9e475d01f280412603b242118483b35dcb034","mpusz","2021-05-03 17:55:00","false","build: LA bintray address disabled due to it being EOL",32,31,1
"mpusz/mp-units","2d38b11af51a112cfae7a76a626079f9bf516c0e","mpusz","2023-07-07 18:42:22","false","docs: ""Interface Introduction"" extended with two new chapters",11,57,1
"mpusz/mp-units","3a997e5314782f03efbd60a0bf04c8ce7db8e3aa","mpusz","2021-09-17 07:48:33","false","fix: explicit `fmt` usage added",24,35,1
"mpusz/mp-units","c8ff7f02f10fb931adef8ddacce015619529346e","mpusz","2023-07-09 11:28:07","false","docs: ""Generic Interfaces"" chapter added",12,57,1
"mpusz/mp-units","f64c08bac30849f265646b9d1fe0088d2714d234","mpusz","2023-08-29 14:04:10","false","fix: integral representations allowed for irrational canonical units

Resolves #485",10,59,1
"mpusz/mp-units","27a0fc773b692e32fd4ece07377bb2c69274e169","mpusz","2023-08-26 18:47:34","false","style: formatting changed to make pre-commit happy",9,59,1
"mpusz/mp-units","f9b15ddcd58e7f6e3e2918d13b7e8f28c96a149e","mpusz","2021-01-27 16:12:27","false","build: fmt updated to 7.1.3",27,28,1
"mpusz/mp-units","76b6c2972d320bc90ae3a45cdc0f9f1ea4e71eba","mpusz","2020-09-08 16:45:14","false","test: more unit tests for dimensionless quantity",15,23,0
"mpusz/mp-units","69fac6b695d58c07a112e883583b7483a7fcf7ed","JohelEGP","2021-02-21 20:02:44","false","test: don't support compiling quantity_test.cpp with downcasting off",27,29,1
"mpusz/mp-units","d7a82713d568ed796dcc409472cd84c44e694c68","JohelEGP","2020-12-20 20:13:37","false","refactor: <gsl/gsl_assert> to <gsl/assert>",19,27,1
"mpusz/mp-units","c148fffd956950e7b0fe18edfcc592c16a071bab","JohelEGP","2021-02-21 19:59:00","false","test: compile quantity_point_test.cpp",27,29,1
"mpusz/mp-units","7205dc2cb958528e3e5565d761b2f31803eef19e","mpusz","2018-11-14 21:14:44","false","Strong dimensions support added",2,2,0
"mpusz/mp-units","f18f3c24f817b6b4ea49e1e0d44d3d99e1106a8a","mpusz","2023-08-01 09:58:21","false","feat: `quantity_point` CTAD for `Rep` and `QuantityLike` removed",13,58,1
"mpusz/mp-units","e0101f14d96b6d29a60503be72b707232529d358","mpusz","2022-12-04 14:06:53","false","refactor(example): `avg_speed` example refactored for V2",33,50,1
"mpusz/mp-units","75ca6f1aefc8c9be6e5f51dd1851e01500345daf","mpusz","2022-05-06 16:40:03","false","docs: Conan 1.48 does not set `CMAKE_BUILD_TYPE` in the `conan_toolchain.cmake` anymore",36,43,1
"mpusz/mp-units","af5d5620476d9dcf1b98a02a5d20210fbd98ca3c","mpusz","2023-01-07 09:10:50","true","Merge pull request #419 from Twon/update_codeql_cachekey

Update codeql cachekey",35,51,1
"mpusz/mp-units","68058cfb251f4ca32299bd0d4e9b65e9931cb023","mpusz","2020-12-22 13:37:03","false","fix: Atomic constraints fixed for `safe_convertible_to_`",19,27,1
"mpusz/mp-units","79558a6d7212e20e26b782577fe4ca5989f3ca93","mpusz","2020-09-10 15:14:33","false","refactor: systems defined in terms of SI moved under `si` namespace",15,23,0
"mpusz/mp-units","b982921d271c516af9edb695cf696eef72d10152","mpusz","2021-04-06 13:57:28","false","refactor: References are now guarded `UNITS_REFERENCES` with (ON by default) + examples duplicated to subdirectories

Now References can be disabled to meassure a compile time impact. Also the same examples are now provided in two subdirectories to be able to easily compare the pros and cons of every quantity construction technique.",32,30,1
"mpusz/mp-units","1748aff42bae97bdb417561327b6fed9647b5bdf","mpusz","2020-08-16 13:06:07","false","Common CMake scripts repo regression fixed",19,22,0
"mpusz/mp-units","e2bd12750bda3ceab5b931243bc2bbc21dbae11b","mpusz","2023-06-14 18:13:07","false","Merge commit 'ec04d9c03ddf12e46dca5348d4ca57b526e425f1'",48,56,1
"mpusz/mp-units","a9b482a661894169107e32ee0a7d9f64cef0797d","mpusz","2022-09-22 08:26:55","false","refactor: `magnitude` types are much shorter now

`units::magnitude<units::base_power<long>{2l, units::ratio{-42l, 1l}}, units::base_power<long>{3l, units::ratio{1l, 1l}}, units::base_power<long>{5l, units::ratio{-41l, 1l}}, units::base_power<long>{7l, units::ratio{1l, 1l}}, units::base_power<long>{6310543l, units::ratio{1l, 1l}}>{}` is now `units::magnitude<units::power_v<2, -42>{}, 3, units::power_v<5, -41>{}, 7, 6310543>{}`",30,48,1
"mpusz/mp-units","9d48e6983a2ba62b5666ffd203a6581bdf25c82c","chiphogg","2022-01-08 19:40:28","false","Refactor BasePower struct and concept

Instead of templating on `long double`, we template on ""anything whose
value member is `long double`"".  This is how we work around gcc-10's
lack of support for floating point NTTPs.

To access the base value, we provide `.get_base()` member functions.

The clearest and most direct way I know to express ""is this a base
power"" is via a type trait, which is true only for `base_power<T>`.",30,39,1
"mpusz/mp-units","dd8fb22e6eca80247fdf54c4f0a1dd455765ac8a","mpusz","2022-12-23 17:03:15","false","feat: `quantity` is now a structural type

Resolves #411",34,51,1
"mpusz/mp-units","9054420d08a975cd7484fc3ce53acc1a684db7a2","mpusz","2021-04-01 07:36:55","false","build: Added an option to disable UDLs support

Now it is time to get rid of UDLs from tests and examples and then disable them by default.",33,30,1
"mpusz/mp-units","eaa2ddbf014e9ba3d8fb66ee730cb0a86e9727d4","mpusz","2023-10-20 06:42:22","false","refactor: `quantity` operators constraints refactored",1,61,1
"mpusz/mp-units","82f493f9ceee08df9e5d589546fdf6ecef77d53a","mpusz","2020-04-14 07:39:20","false","Version constraint on Sphinx removed in build.py",13,18,0
"mpusz/mp-units","1a29726d349dfcfd42010e3718421009b93cb39e","mpusz","2022-08-31 08:51:15","false","fix: `math_test` compile-time checks for `floor`, `ceil`, and `round` fixed

Relates to #311",33,47,1
"mpusz/mp-units","b547ba0f65a4a095723076c8dc3f6923a016cc7c","mpusz","2023-06-21 09:07:44","false","docs: CHANGELOG.md re-added as a regular file",14,57,1
"mpusz/mp-units","bb05e3434ea488c805780b46f72e5b9357aa29e8","mpusz","2023-02-09 06:03:41","false","feat: type traits for template template auto parameters added",43,52,1
"mpusz/mp-units","0a470f2617984a7997f00c5388cafb6d7765a77f","chiphogg","2022-01-08 22:29:40","false","Replace make_ratio with as_magnitude<ratio>

It's cleaner to just have the one way.",30,39,1
"mpusz/mp-units","8d6d43b32dc706512902111f04091cdd73934235","JohelEGP","2021-02-17 06:57:59","false","feat: quantity point-like support",26,29,1
"mpusz/mp-units","5dcf87ac28a30c8cd044d158af0308146be59ad2","mpusz","2023-06-16 10:55:27","false","docs: link to the code example updated in README",14,56,1
"mpusz/mp-units","452f1a105db1310c2d3d3c2e9e62283230404b79","mpusz","2020-09-14 06:43:58","false","docs: `luminance` and `luminous_intensity` paths fixed",14,23,0
"mpusz/mp-units","0a6d11cf271fba14ebe63e5c9c9ddc26ad37c9eb","mpusz","2022-02-28 17:25:20","false","Depracated `build_requires(..., force_host_context=True)` replaced with `test_requires(...)`",31,41,1
"mpusz/mp-units","8cd19e40225074f96d59b597a8a1293a7178c981","mpusz","2022-09-12 00:45:41","true","Merge pull request #393 from chiphogg/chiphogg/terminator

Replace compile-time exceptions with terminations",31,47,1
"mpusz/mp-units","f39ae0909bb5c251c13fcfff70c0cededaf91016","mpusz","2020-05-05 18:57:58","false","GitHub license badge changed",15,19,0
"mpusz/mp-units","cec78ec8cb6fc154a56bba643d7c4808d3301bd4","mpusz","2019-05-28 12:33:08","false","type_list related tests added to metabench",2,8,0
"mpusz/mp-units","c3ff6a22d281fd4a7abaf3afe4db5de4721e7c01","hofbi","2022-03-17 14:35:07","false","docs: fix typos in contributing.md",31,42,1
"mpusz/mp-units","3480d309c3af9ab0cf7d9016f9a2abccc94082c0","mpusz","2022-09-09 06:38:16","false","chore: Chip Hogg (@chiphogg) added as a co-author of the library 🎉",32,47,1
"mpusz/mp-units","3bcd80681e6041b8054ee787d80981b91d5bf1be","mpusz","2019-09-06 08:16:19","false","base_dimension is provided as a const& to the exp type",4,11,0
"mpusz/mp-units","53c9d96e9e37238ff287b92744819bd951914d73","mpusz","2023-08-04 12:35:20","false","docs: ""No text output for points"" chapter added",14,58,1
"mpusz/mp-units","aeb82a95960cc494d89029ac62431a5132f1eb88","mpusz","2022-10-02 09:59:01","true","Merge pull request #394 from JohelEGP/llvm16

refactor: make typename optional for Clang 16",30,48,1
"mpusz/mp-units","eea3cbe52d8f69288255e5287915ae2ea6a15759","mpusz","2023-06-14 19:35:21","false","style: whitespaces cleanup to make pre-commit happy",43,56,1
"mpusz/mp-units","e5b748706686091c793eefba7b9507800227a986","mpusz","2020-05-09 07:22:16","false","PT replaced with PF for PrefixFamily",18,19,0
"mpusz/mp-units","2bb8e4e739791e1bf9688e7ea9270a2fa21f66ba","mpusz","2023-04-21 14:22:14","false","test: `quantity` tests updated",46,55,1
"mpusz/mp-units","5cbe322c82e4985f792be89a4ad8569f03f43511","mpusz","2022-11-30 09:11:52","false","feat: `common_reference`, `common_dimension`, and `common_units` now take variadic list of arguments",34,50,1
"mpusz/mp-units","75c3e26a53c18f7aab591c6a80f271ca9bc38f4c","mpusz","2023-02-13 17:18:08","false","fix: `has_associated_quantity` fixed",43,52,1
"mpusz/mp-units","5635f7d199a2eab002c2af3de97167d88f927389","mpusz","2023-06-15 14:01:52","false","fix: `QUANTITY_SPEC` macro fixed",15,56,1
"mpusz/mp-units","833851d1cb98108cc647557dd5e1b89a8aa31ce9","mpusz","2023-09-29 04:31:32","false","test: tests for printing of a symbol of a dimensionless unit with the ratio = 1",2,60,1
"mpusz/mp-units","eef6371ab48dacdab350530d38aa4fd57c32e4fc","mpusz","2019-12-26 13:03:55","false","Missing fixed_string comparison operators added",16,15,0
"mpusz/mp-units","46b378174309142517ee186464218914c22c83ad","mpusz","2022-05-24 12:20:17","false","Revert ""refactor: :boom: ! "" ⋅ "" replaced with ""⋅"" in derived unit symbols""

This reverts commit db09a065ab7a88f28d934ec1f7ac8f477aee176f.",34,44,1
"mpusz/mp-units","24c10c46497d6b098e03889f85932d718c1e9064","mpusz","2020-12-27 11:05:26","false","ci: Ubuntu 18.04 explicitly set for GCC 10.1.0 CI (ubuntu-latest was misleading)",20,27,1
"mpusz/mp-units","9322aa25e471721f22d8ea5f8170a94b80f15a0f","mpusz","2023-05-16 14:41:51","false","Revert ""feat: runtime conversion factors between units support added""

This reverts commit cc8a088013f995fed4e1dd29c5290694a68ac797.",48,55,1
"mpusz/mp-units","9ca15c302363b1b62420693d026a4fbd4315dc65","mpusz","2022-11-11 02:41:28","false","feat: `operator[]` added for quantity",33,49,1
"mpusz/mp-units","03eeea172ad476a5a201804a8c13475f48bb4b85","mpusz","2023-02-01 21:42:29","true","Merge pull request #431 from aostrowski/fix-isort

Update isort to work around build from source bug",39,52,1
"mpusz/mp-units","3fb6262d2c063e3c46ccb399535c4f850b0d8eea","RalphSteinhagen","2021-08-03 08:58:15","true","Merge branch 'mpusz:master' into master",25,34,1
"mpusz/mp-units","94d143ef7e5ebaa9fc3c8c3c178215e120002881","JohelEGP","2022-03-20 13:17:25","false","build(cmake): fix export name of mp-units-system",32,42,1
"mpusz/mp-units","81b1ba316288153c6cd030821e2e43a1c77c226c","mpusz","2019-12-26 08:49:39","false","fixed_string_test added",16,15,0
"mpusz/mp-units","1830735544a20a8276b6fafe1ab0963a8538c05b","mpusz","2020-05-08 19:18:16","false","Unit tests for alias_unit added",15,19,0
"mpusz/mp-units","7423acd6a7099ba658d3887f556466a761687ccf","mpusz","2022-11-08 21:19:12","false","test: negative tests for formatting added",32,49,1
"mpusz/mp-units","60e52805a9a802f4ea80096d37f051b0da823260","mpusz","2020-11-04 17:26:03","false","build: generate_docs Conan option added",19,25,0
"mpusz/mp-units","fc849fe7fee55fcee2f1c2831fd5985bdf5353bb","mpusz","2022-09-07 08:42:34","false","style: trailing whitespaces removed to make pre-comit happy",30,47,1
"mpusz/mp-units","173e1f0554ab41788efc2844239a331bd1fa0584","mpusz","2021-03-19 22:21:00","false","docs: usage chapter fixed",32,30,1
"mpusz/mp-units","462b04358cdd6e86a3c67d6bdd329e0a540f098a","mpusz","2023-06-22 16:16:44","false","docs: mermaid graphs enabled",14,57,1
"mpusz/mp-units","2333c4b3eaa970182185f36edaceae93550e164c","mpusz","2021-11-04 11:09:54","false","build: CMake targets generated by Conan updated",30,37,1
"mpusz/mp-units","78bcb3b0195d4b14c7dd5f4bf163c1baf2dc41e7","chiphogg","2022-04-12 00:33:13","false","Remove troublesome `::ratio` members

For some reason, MSVC seems to want to instantiate these, even though
nobody ever asks for them (as evidenced by the fact that the builds
passed on other architectures).",35,42,1
"mpusz/mp-units","aee44d98be41cb8154d46cfec89170cfd19d034c","rbrugo","2020-03-17 23:59:49","false","Added tests for format types",15,18,0
"mpusz/mp-units","51b6d2f974ef2ab081d229a1f8e5484247195963","mpusz","2020-08-17 18:27:45","false","ms-gsl dependency added to handle Expects (resolves #132)",19,22,0
"mpusz/mp-units","cd0ee9276b41bc28e1648479c4b25cb4864f97a0","mpusz","2023-02-03 14:22:54","false","feat: `quantity_cast` and multiplying by reference now use perfect forwarding of a number",41,52,1
"mpusz/mp-units","7985ea29699c1d9f49a5c89faf0a8a456c692787","mpusz","2023-08-18 16:37:12","false","docs: `auto` replaced with type placeholders in code examples",14,59,1
"mpusz/mp-units","ff21e1e899d57de288c89ee5bcee6f04fa98cac3","mpusz","2020-05-05 19:25:56","false","GCC 10 compilation fixed",15,19,0
"mpusz/mp-units","73a2b30d657abbba3bd0b72bd1bb384577f8564e","mpusz","2020-03-25 21:40:59","false","Quantity of vector tests added",13,18,0
"mpusz/mp-units","7cc34646b9aadc8a287893f4ef93ed99e638575e","mpusz","2021-04-01 17:34:35","false","docs: Compiler Explorer links updated",33,30,1
"mpusz/mp-units","a56696ee746c1fd952c5a0d7cffdded542950ed5","mpusz","2023-02-11 01:16:51","false","feat: leveled quantity specification conversion introduced",43,52,1
"mpusz/mp-units","0de799137514c195503bfb47381089608539cfd1","mpusz","2021-11-15 18:50:18","false","ci: switching to Windows 2022 for MSVC 19.30",30,38,1
"mpusz/mp-units","b318e8d039e508afc0b3d63caba0fa10d49b9d52","mpusz","2020-09-04 21:00:57","false","VS2019 support added",15,23,0
"mpusz/mp-units","e25d4d809610c8109c01e28a17ea1752b673c27d","mpusz","2020-09-08 16:44:04","false","docs: missing file resolved",15,23,0
"mpusz/mp-units","bf35ddb51b0b12074fb753048876e16ea79dd650","mpusz","2023-08-29 12:14:22","false","docs: point origins definitions cleanup in glossary",10,59,1
"mpusz/mp-units","05fecca12cc48e2dc2b53d06592625823839ecd8","mpusz","2022-04-15 15:00:02","false","refactor: `self.copy` replaced by the explicit tool `copy` (for Conan 2.0)",35,42,1
"mpusz/mp-units","a45088b8595274d0d6efc9495d9a3d6d56bc05b0","mpusz","2022-12-23 18:20:34","false","refactor: `quantity_point` refactored for V2",34,51,1
"mpusz/mp-units","7c612eb9b8430fe8b95e4f3a5e2ef51e8efc7152","mpusz","2020-11-04 21:47:56","false","build: documentation generation fixed again",19,25,0
"mpusz/mp-units","f1f877130f857bdcc713e3a61e9bb3dcfb5e22ab","mpusz","2020-09-23 14:33:24","false","build: doxygen updated to 1.8.20",18,24,0
"mpusz/mp-units","ffba2a5e89a31f146f3daf9266b88a03b584bbbe","mpusz","2023-09-26 12:04:26","false","ci: codeql analysis refactored",2,60,1
"mpusz/mp-units","3fcb7c9e9160f986d231ec57b1b275afc1fae34d","mpusz","2019-09-18 12:37:30","false","dim_invert and dim_consolidate cleanup",4,11,0
"mpusz/mp-units","a5d5253159ba713f919ce5d09fc4fec70a8b3c78","mpusz","2020-04-06 12:22:36","false","Merge branch 'master' of github.com:mpusz/units",13,18,0
"mpusz/mp-units","0f776b5b5bd8b5fe2297db423b53e44ab0b469e9","chiphogg","2022-04-06 00:31:18","false","Remove incorrectly included test

We had removed this upstream, but apparently it snuck back in from a merge/rebase conflict.",35,42,1
"mpusz/mp-units","4f759f95e809859f9c71f9a22752ee3956b6f304","chiphogg","2021-12-29 16:44:22","false","Use Magnitude concept where appropriate",30,39,1
"mpusz/mp-units","9365344a607579ee3aefe567e8af5a2c463785b5","hofbi","2022-05-12 12:00:18","false","apply python isort",34,43,1
"mpusz/mp-units","29cba5c68aab1df52d4d2334f120a06fab51cb72","mpusz","2020-06-21 09:22:34","false","Setting of CONAN_RUN_TESTS via travis.yml restored",17,21,0
"mpusz/mp-units","11521a5a96358188965ea25673051480910f8625","mpusz","2022-04-21 19:23:45","false","feat(example): `validated_type`  and `ranged_representation` example types added",36,43,1
"mpusz/mp-units","1a5b4fc85e413d9a5fbcf1222d62f295763a1563","mpusz","2021-04-02 16:56:28","false","refactor: UDLs support switched off by default",33,30,1
"mpusz/mp-units","b4953bb0b5afe1bd14ef0c49b8f0c3c402a7f092","mpusz","2023-06-02 11:51:14","false","chore: `v2_framework` example removed",48,56,1
"mpusz/mp-units","3d536fb82be77443ae163045e357a9c742af0260","mpusz","2022-11-10 08:53:27","false","refactor: Unicode symbols directly provided in the code",32,49,1
"mpusz/mp-units","6db80125135c8528f47b77cb082dcd33dd710af4","mpusz","2023-06-16 14:19:21","false","fix(example): name hiding in `capacitor_time_curve` resolved",14,56,1
"mpusz/mp-units","7c76bae7e38c11cc9f1116acf4bf4b0a81f856d0","mpusz","2023-07-07 11:42:47","false","docs: ""Faster than Lightspeed Constants"" rearranged in TOC",11,57,1
"mpusz/mp-units","77a124a3d9b9f3a0d521603b1e5e514ecb77a268","mpusz","2022-11-30 16:57:27","false","feat: `quantity_of` and `weak_quantity_of` now support references",34,50,1
"mpusz/mp-units","59715fed2257a6b6c7209d3ed943e3f95691c4ad","mpusz","2020-09-07 10:46:29","false","docs: FAQ section extended",17,23,0
"mpusz/mp-units","10600868a2e0dc6785dee5ba19480e1736e09176","mpusz","2023-11-07 07:55:44","false","docs: some docs updated",1,61,1
"mpusz/mp-units","4f769982a5bf600f1e804b388276dc21befefe20","mpusz","2019-12-11 08:32:29","false","TODO removed",18,14,0
"mpusz/mp-units","e62c162610202748fdf2cf0d04d0e38270c07fa6","mpusz","2022-04-23 14:52:06","false","fix: `radioactivity` header compilation fixed",35,43,1
"mpusz/mp-units","a098f97c08d0c616d99153f5cba7d311d3be633f","mpusz","2020-09-23 14:34:13","false","feat: CTAD for dimensionless quantity added",18,24,0
"mpusz/mp-units","2d35fa08939d7fee4b4e21f6964a8d414491f897","mpusz","2023-03-30 11:37:09","false","ci: proper Conan package promotion support added",44,54,1
"mpusz/mp-units","c284b7e25a60a40e69ab65002537dcce77577ef8","JohelEGP","2020-09-09 22:36:56","false","refactor: simplify Prefix",14,23,0
"mpusz/mp-units","cf2370b8fe3e2cedc9725990686c6a975c9f120f","mpusz","2019-05-08 03:03:58","false","Limited number of places where common_type is being used on quantities

For some specific mathematical types different type might be returned from division, mulitplication, substraction, etc.
std::common_type<> does not have an information which operation is being performed. It is much better to just get
the actual result of specific operation.",2,7,0
"mpusz/mp-units","d2e49b25f7b279d698f4cfdb4dc25ce5b41473e5","mpusz","2020-03-17 16:12:01","false","Clang uses the Ranges-v3 concepts",15,18,0
"mpusz/mp-units","f9ffacc713e00c6ea0207796f3eadd2ea4c5eb01","mpusz","2023-09-20 18:13:39","false","feat: `inverse()` math utility added

Relates to #268",2,60,1
"mpusz/mp-units","02d6e104f09f47a22eb5994974e5c7957becada2","mpusz","2022-12-08 13:40:19","false","ci: Gitpod configuration updated",30,50,1
"mpusz/mp-units","464b4467ee5d291ff72e21721d0a48133ae9883b","mpusz","2022-04-24 17:52:58","false","fix: public headers fixed to be standalone",36,43,1
"mpusz/mp-units","1a0a55d3d2423ce78ad53f4057350fcec516660f","mpusz","2022-09-02 18:13:55","false","docs: Angular Units clean up to make pre-commit happy",30,47,1
"mpusz/mp-units","90af5423089b96550df03ee092a99c3728d2498e","mpusz","2021-04-13 18:35:11","false","fix: MSVC build fixed",32,30,1
"mpusz/mp-units","c807ba31be902aa89e8982abb53e59406e10c1d2","mpusz","2023-04-08 17:54:31","false","feat: `quecto`, `ronto`, `ronna`, `quetta` prefixed versions of unit symbols added",46,54,1
"mpusz/mp-units","e7d6b7a9b01cc08dd5dc2c897e079d202b517ea8","mpusz","2022-07-26 10:26:47","false","build(conan): Imports reordered to make pre-commit happy",35,46,1
"mpusz/mp-units","6f48085ea3d6e84081710ce7bd11630a74679c51","mpusz","2020-05-17 09:47:01","false","Development switched to 0.6.0",15,20,0
"mpusz/mp-units","e353bb3436d6efa150f34abf493aa434a3f16b5a","mpusz","2023-02-13 18:07:16","false","refactor(unit test): support for new features added to unit and dimension unit tests",43,52,1
"mpusz/mp-units","b9e7ffc90cc12b184e9cf1c61fe79b69e633af60","mpusz","2020-02-24 13:12:38","false","total_energy fixed for gcc-9",14,17,0
"mpusz/mp-units","8d42ed7eec07d41c53d10de7fa7e3bef2d063a70","mpusz","2018-09-28 21:20:23","false","Type List interface made generic",0,0,0
"mpusz/mp-units","e8669856683961c88d597db09dfc5d6fb25ec511","mpusz","2018-11-14 21:36:02","false","Strong units support added",2,2,0
"mpusz/mp-units","2514b669c9e71bd84fb2feaff4d0fd6fe759a593","mpusz","2018-09-28 21:25:12","false","Type List concept fixed",0,0,0
"mpusz/mp-units","6d66ac566e13fd14692f3fc00b5c530cccb9ec27","chiphogg","2022-06-15 21:11:50","false","Migrate new `lumen` as well",34,44,1
"mpusz/mp-units","faffbefad2c2e9542de2fe2c66bbedfe8788415a","mpusz","2023-02-09 05:09:20","false","refactor: `get_dimension_for()` no longer needed",43,52,1
"mpusz/mp-units","27858f2b33b153cabcbd64fb577149a232e2cc7f","mpusz","2019-04-11 19:56:16","false","my_value toy class refactored",2,6,0
"mpusz/mp-units","3a033781cdac634557ac820c614658f89349b8c5","JohelEGP","2021-02-21 19:41:22","false","test: fix warnings (quantity(_kind)_test.cpp)",27,29,1
"mpusz/mp-units","8fc0c254a64ff9ce766107b3ddaed8541ebf5b05","JohelEGP","2020-09-07 22:33:19","false","style: add TODO comment for when to update",17,23,0
"mpusz/mp-units","417f84258523d2e5f868cf080b7b837328edd501","JohelEGP","2021-09-17 12:58:15","false","fix: constraint recursion for GCC 11",24,35,1
"mpusz/mp-units","badc8568aaf642c1a73c3e83287d3cab70b526ac","mpusz","2020-12-16 18:18:06","false","build: Common CMake scripts are no longer common",20,27,0
"mpusz/mp-units","6c54d08b12b49a8852b07339bd796f62a022e465","rbrugo","2020-03-20 12:49:58","false","Bug fixes",14,18,0
"mpusz/mp-units","cc8a088013f995fed4e1dd29c5290694a68ac797","mpusz","2023-05-16 13:01:15","false","feat: runtime conversion factors between units support added",48,55,1
"mpusz/mp-units","25fee701a019be8fa2c17edeaa12dd71f832f353","mpusz","2023-09-26 16:09:06","false","build: got rid of old clang hacks and range-v3 dependency",2,60,1
"mpusz/mp-units","c30ce61c192848f380ef41e97c035b936e3e2831","mpusz","2022-12-20 09:38:54","false","feat: electromagnetism quantity specifications added",30,51,1
"mpusz/mp-units","75ef2713d6635562d8bd333fdc108c500077a16c","mpusz","2022-11-30 17:03:14","false","fix: missing comma added to `hyperfine_structure_transition_frequency_of_cs_unit`",34,50,1
"mpusz/mp-units","3df415835ef81bcd8644694abdb5dabeaea36045","mpusz","2020-09-14 08:23:26","false","docs: added `sudo apt-get install -y libtinfo5 graphviz` to usage",14,23,0
"mpusz/mp-units","1b92f2c7e0fe6151876444f2c45176f1f28541ac","mpusz","2020-12-09 17:53:41","false","build: Documentation generation cleaned up",20,26,0
"mpusz/mp-units","7046b319dc29a92723eff53aa515f50cf0d00159","mpusz","2022-10-08 11:14:04","false","docs: broken link fixed",30,48,1
"mpusz/mp-units","77717531636679a6752c2dd71411be131c361208","mpusz","2023-05-30 10:06:46","false","refactor: `make_quantity()` forward declaration moved to the beginning of `reference.h`",48,56,1
"mpusz/mp-units","5975e4c1cc3ce6da21c47aa051e61a21c64bb5fd","mpusz","2022-10-19 11:16:59","false","refactor: `named_unit<S, U>` should inherit from `U` to  for a correct inheritance hierarchy",31,49,1
"mpusz/mp-units","736a8bd3c8624d454bae23b9d68bb39cae9adbed","mpusz","2020-02-25 10:55:16","false","""clang-format off"" removed for base_dimension_less",14,17,0
"mpusz/mp-units","0cbfcf2aa608d3743fb5e5e8b5ce47836060e9d3","mpusz","2021-03-19 13:02:53","false","build: Small cleanup of GitHub Actions",32,30,1
"mpusz/mp-units","4d2ae79a055b78b03319b38f99640f4396490c8e","mpusz","2023-06-11 17:13:35","false","test: some more test suites  removed",48,56,1
"mpusz/mp-units","1783d243daa4351d2cdf25c13919f52a70ef5b17","mpusz","2021-05-11 13:03:04","false","fix: quantity modulo arithmetics fixed

Resolves #231",29,31,1
"mpusz/mp-units","8312b6e463cd132a1aa4e2fea8ae89d456bfde60","JohelEGP","2021-06-29 21:04:03","false","fix: factor out requires-expression to concept for MSVC",25,33,1
"mpusz/mp-units","67262e10ef3c8642ae73496964f5af81057dc50b","kwikius","2019-12-13 14:10:09","false","DESIGN.md : I believe that zero ""exponents are elided"" rule is a concept of exponent not base-dimension, so have modified parts where exponent rather than base dimension should apply",20,14,0
"mpusz/mp-units","39109faa1e469272bb9cbed568fc078683236dbb","mpusz","2020-05-10 15:32:47","false","Sphinx epxression parsing errors fixed",16,19,0
"mpusz/mp-units","d97e650cac5b2854cba53794ab6fbc763e1c62c0","mpusz","2023-05-15 10:58:35","false","feat(example): HAE support added to UAV example",48,55,1
"mpusz/mp-units","2dc420c50526933438e03f7ca8a1f3483d6cb876","mpusz","2023-06-08 20:19:34","false","fix: new quantity creation policy for irrational magnitudes forbids creation of `longitude` and `latitude` with an integral representation",48,56,1
"mpusz/mp-units","dbdede8cfcf3df1b77529a7dd3c83c6d3a37b7cd","mpusz","2021-03-15 21:10:19","false","build: minimum VS version fixed in conanfile.py",32,29,1
"mpusz/mp-units","f37ec4c62b708a354de6538f2893378d4ce9cb2f","mpusz","2022-12-16 17:18:14","false","refactor: missing `nodiscard`s added to functions in _unit.h_",30,51,1
"mpusz/mp-units","6c2c8748e70b4a96ba96f37c28cd4f224386374a","mpusz","2022-03-24 08:35:00","true","Merge pull request #345 from JohelEGP/type_list

refactor(bits): remove unused headers in external/type_list.h",32,42,1
"mpusz/mp-units","318b9e260b452c54676a523c7a9a2a6d086ad6ca","mpusz","2023-04-21 14:18:09","false","refactor(example): small refactoring of examples",46,55,1
"mpusz/mp-units","476a68ce8ed2376180c6008ee2649ba498742a3c","mpusz","2023-09-29 09:21:27","false","docs: broken internal URL fixed",2,60,1
"mpusz/mp-units","eac39512c137cd0db6387ae8f436dbece39b61ce","mpusz","2023-08-27 19:40:11","false","docs: ""Introduction"" changed to ""Tag Index"" for examples",9,59,1
"mpusz/mp-units","c00d8990f41ffcd1f90bdbcc65217e1ad8851e56","mpusz","2022-08-02 14:15:59","false","ci: Conan package will be uploaded only either for a 'stable' channel or for a commit on a master branch",34,46,1
"mpusz/mp-units","1f63fdb945c85a4743c1dd32919f9a9092968f1c","mpusz","2020-02-24 19:01:57","false","Printing of a space separator  for unitless quantites disabled",13,17,0
"mpusz/mp-units","707f1816a4a18e1418e473e94b4aa0631e70c5ac","mpusz","2020-12-21 23:17:14","false","docs: CHANGELOG updated",19,27,1
"mpusz/mp-units","4acd38ac8fcfe9219fba346b0c24dee77a291f92","mpusz","2019-09-17 12:52:22","false","Small update to a changelog",4,11,0
"mpusz/mp-units","310f344598c1e2c46303864390f05d0a4d7b3626","mpusz","2020-12-21 23:20:23","false","test: {fmt} dependency check added in test_package",19,27,1
"mpusz/mp-units","03c33a86a6727351b86e53082158698ce624f5a7","mpusz","2021-05-04 11:07:34","false","docs:",32,31,1
"mpusz/mp-units","f2cb24357c87a67b25dd17316cb8033b73074922","mpusz","2021-02-18 18:54:40","false","fix: UDLs cannot be `consteval`",26,29,1
"mpusz/mp-units","c625be5ebea93773e558140a20c1a6f02d419319","mpusz","2023-08-25 17:49:33","false","fix(example): `transform_inclusive_scan` initial value had to be explicitly provided",9,59,1
"mpusz/mp-units","7bad01fd45f2e6041d2e137a3942297f8b29ca60","mpusz","2023-05-16 14:58:16","false","refactor: `Harmonic` concept renamed to `IntegralConversionFactor`",48,55,1
"mpusz/mp-units","70640a1017c11e9bc8af831d632a745a177f9d73","chiphogg","2022-03-11 03:56:57","false","Remove constexpr-incompatible assert()",31,41,1
"mpusz/mp-units","87073856a7f18b365c0670d87b2380942705dd9d","chiphogg","2022-03-12 18:50:01","false","Try upping the basis size further

We are well into a regime of diminishing returns, but we'd better start
by seeing if the easy thing works.  Besides, setting this to 7 trips the
step limit in _generating_ the algorithm!",31,41,1
"mpusz/mp-units","f2ba3cc18a4e36ff3e50300aa8e8d602f749a612","chiphogg","2022-01-28 20:32:47","false","Use `in_range` for integer case",30,40,1
"mpusz/mp-units","f12fde6204297a4f499146e0d5ca492bc0efe0c0","chiphogg","2022-01-08 22:57:10","false","Add some tests",30,39,1
"mpusz/mp-units","32868c97212ce4919d80f3d92f0b6ebc6c5dbb6e","mpusz","2021-09-09 07:01:05","false","build: CMake generator is no longer obtained from an enviornment variable

Use Conan's `tools.cmake.cmaketoolchain:generator` `[conf]` option to set required generator",24,35,1
"mpusz/mp-units","b236c23c8cf967a4e08e43d7732c869e6e4d0dac","mpusz","2023-08-31 17:02:42","false","docs: ""Dimensionless Quantities"" chapter moved up in the TOC",9,59,1
"mpusz/mp-units","8dede0db9f6145c7a0316299bd8e35b73a491004","JohelEGP","2020-12-25 22:19:26","false","feat: unit_constants",19,27,1
"mpusz/mp-units","243238b3fad7d7b75ddf0b4f34914b93db27642e","chiphogg","2022-01-28 20:41:08","false","Add suggested tests",30,40,1
"mpusz/mp-units","d0325da46a5dd681775de2a86f8497d02aba8657","chiphogg","2022-08-10 01:14:12","false","Fix math notation in magnitude doc",35,46,1
"mpusz/mp-units","b04cc5a0cea9ab48170121aed82e910ccaaa0b36","rbrugo","2020-04-04 00:37:48","false","Added magnetic induction",13,18,0
"mpusz/mp-units","fe15572e906665e6ad41f4864b9f1c866d113874","mpusz","2023-11-09 01:30:24","false","feat(example): unit symbols added to the currency example",0,61,1
"mpusz/mp-units","dc4d73a90c0e5c7906350404d619d1dab53437a6","mpusz","2023-11-09 01:36:06","false","fix(example): fixing compilation after the previous commit",0,61,1
"mpusz/mp-units","26c79a7a860dfa5c51006680a9fb30f947d73856","mpusz","2023-10-25 12:18:42","false","style: whitespaces fixed to make pre-commit happy",2,61,1
"mpusz/mp-units","80129b32d78eee570bf645e7a6730b872ec664c6","mpusz","2023-11-09 01:37:16","false","Merge branch 'master' of github.com:mpusz/units",0,61,1
"mpusz/mp-units","d3ad78a9dd3e56fd458d7b5f4018a3317ead646c","mpusz","2023-10-18 14:34:39","false","fix: Fahrenheit conversion ratio was inverted",1,61,1
"mpusz/mp-units","e89861cb3a7a2ad60f8b65390fe9d5b9818058b5","mpusz","2023-10-17 07:35:58","false","ci: Added C++23 builds to the CI matrix",1,61,1
"mpusz/mp-units","542668e8018a60ca61cd9d6e66d234524aa7e0d0","mpusz","2023-08-15 09:18:15","false","test: more chrono tests added",14,58,1
"mpusz/mp-units","7ef8193dfc8ad1b8239f5395268e17a471c30c84","mpusz","2023-04-10 17:46:50","false","fix: modulo operation logic fixed",46,54,1
"mpusz/mp-units","e83b36146509aa020be138ae686978cb9ad87798","mpusz","2022-10-18 14:08:22","false","refactor: `explicit(false)` added for `basic_symbol_text`",30,49,1
"mpusz/mp-units","022783df74ec0eadaa1ebd492f76c1107b586c0c","mpusz","2019-09-13 06:52:22","false","Extra typename usage removed from ratio.h",4,11,0
"mpusz/mp-units","3c5f5f30a424c29b5fe732266c3b40a1c7ff8979","mpusz","2020-09-05 17:18:43","false","CHANGELOG updated",16,23,0
"mpusz/mp-units","ae4499a41057f81a817253054fe35c235896a2a3","mpusz","2023-07-07 11:40:50","false","docs: ""Faster than Lightspeed Constants"" chapter added",11,57,1
"mpusz/mp-units","b6bc9434d0206154d304d5396b2c4a49cad8fa66","mpusz","2023-09-04 10:27:49","false","fix: `quantity.in(U)` fixed to clone a reference from the source type",5,59,1
"mpusz/mp-units","770b9ab6ee7bd815f58acff06d6b609bfafa7676","mpusz","2022-12-23 18:21:35","false","refactor: `basic_concepts` removed",34,51,1
"mpusz/mp-units","0514c57492be38e12d74c0e82afd20bd1bd0561c","mpusz","2021-10-01 09:27:28","false","chore: gitpod prebuilds definition added",26,36,1
"mpusz/mp-units","0f7ae6954f252369ba3654bc0f7be5934cf98870","mpusz","2023-05-22 15:58:04","false","refactor: definitions of derived quantities with equations resulting in `electric_current` fixed",47,56,1
"mpusz/mp-units","6e510b3a2ad37cdd3f9c982c1a164e9179fa16f5","mpusz","2020-09-12 22:11:02","false","refactor: modules-like behavior for systems removed to improve broken compile-time

Reffers to #32",14,23,0
"mpusz/mp-units","f21c7354d0b3da13c13720d0fa3198e185b3d27b","mpusz","2023-03-21 22:17:15","false","fix: explicit deduction guilde for `estimation` is still needed for clang-16",44,54,1
"mpusz/mp-units","6165392d84b95e28d775e9766a5c08116170f714","mpusz","2022-12-27 09:50:20","false","test: `isq_angle_test` added",34,51,1
"mpusz/mp-units","6765054e5d4e045906c13fe9020103c79e343638","mpusz","2019-12-12 14:37:52","false","More CGS tests added",19,14,0
"mpusz/mp-units","974110646a102aa81a7cee05863d74acafbe4302","mpusz","2023-08-25 18:42:48","false","refactor: repeated forward declaration of `make_quantity` removed",9,59,1
"mpusz/mp-units","d18bf2229a5afd86b018e296c4c6878e9b8f3c8e","mpusz","2022-04-24 17:59:46","false","test: standalone public headers tests added",36,43,1
"mpusz/mp-units","b7bab8c7e61fc4ad0d9a843f9bb88959db3666f7","mpusz","2023-09-13 07:14:20","false","refactor: `isq::speed_of_light` renamed to `isq::speed_of_light_in_vacuum`",4,59,1
"mpusz/mp-units","dddc7572aaac48f332427b22d9257c754d2f425c","mpusz","2021-04-07 17:05:02","false","refactor: conversion_factor example moved to the main examples directory",32,30,1
"mpusz/mp-units","ed1b2d2647d7837ee0c85c1914b94f904cb71cbb","mpusz","2021-09-23 17:16:44","false","fix: Some MSVC-specific special cases removed",26,36,1
"mpusz/mp-units","08b7716f5191571aa33484e3adc0a82c34b2782e","mpusz","2022-10-22 18:59:44","false","feat: `std::common_type` support for unit added",30,49,1
"mpusz/mp-units","03d5ff8cb6f844c4239a32bef161a3727c64cb4f","mpusz","2020-11-05 11:25:49","false","docs: supression of Sphinx warnings removed",18,25,0
"mpusz/mp-units","f1eb22468bc96edde1db14f87cabae7bab216a58","mpusz","2021-09-30 20:23:28","false","chore: Conan update step added for gitpod.io",26,36,1
"mpusz/mp-units","88e642ec74b8dbb532e253af19363f9c8b9f6892","mpusz","2021-03-19 06:53:18","false","refactor: `QuantityValue` concept renamed to `Representation`",32,30,1
"mpusz/mp-units","3dba9416cbdf87035a68f4450c57975836364aa0","mpusz","2023-10-31 08:45:42","false","docs: ""Design Overview"" chapter added and ""Concepts"" chapter reworked",3,61,1
"mpusz/mp-units","c1303dce2b686c4e7021b066ec68e59291152e30","mpusz","2023-07-11 13:40:23","false","docs: Tagging of examples added",12,57,1
"mpusz/mp-units","64fcf4c2b6bfca215ad3ad4723782942c312383d","mpusz","2022-08-06 18:11:31","false","fix: Conan does not seem to properly use the `project` prefix for the `-c` parameter

Resolves #384",36,46,1
"mpusz/mp-units","db6c46ad3ae2952e605a91fc163aefa20e46ba8d","mpusz","2022-08-02 07:07:59","false","ci: conanvcvars.bat call fixed",34,46,1
"mpusz/mp-units","002d5b42757c6671bebdb0f1d58c5e0da2bfb3cd","mpusz","2023-05-25 08:34:34","false","feat: `inch_of_mercury` support added",47,56,1
"mpusz/mp-units","bbbb77286c03df3339b6a0b47145a4c618ac6759","mpusz","2021-03-16 11:03:25","false","refactor: `physical` replaced with `isq`

Refers to #249",32,30,1
"mpusz/mp-units","c6a8c672e9d9f8d2bc9048a4fd65c8afbde3f9d2","mpusz","2023-08-30 15:48:19","false","docs: Compiler Explorer URL added to the si_constants example",8,59,1
"mpusz/mp-units","9d55a4a50fdb405782169517e55a5e57d3c61d32","mpusz","2023-06-22 16:17:24","false","docs: ""Terms and Definitions"" refactored",14,57,1
"mpusz/mp-units","938a25c9a3a4a98442ffee71096929b176a3dbe6","mpusz","2022-08-02 08:44:25","false","ci: MSVC compiler paths removed",34,46,1
"mpusz/mp-units","e0aa10e1331f72e8e8c08592eaf78f8895e47701","mpusz","2019-04-05 15:49:32","false","Number concept extended with requirements on comparison operators",2,6,0
"mpusz/mp-units","0f37d0af60ed0fc428c6f0c3b6abf951b4b41cbc","mpusz","2022-08-02 16:36:17","false","docs: Broken links in the documentation fixed",34,46,1
"mpusz/mp-units","9a11c337641b3d6f4b53883a1e48858b0bb628b4","mpusz","2022-11-07 06:27:22","false","feat: Custom `find_first_of` algorithm added",32,49,1
"mpusz/mp-units","f15baf4c2a2a639f55e3f86508ecb4221887c084","mpusz","2023-10-01 03:35:16","false","fix: clang compilation fixed",2,60,1
"mpusz/mp-units","e6bcd5e7e1c136416d1ce6096c550cf75383d213","mpusz","2023-06-22 06:32:44","false","docs: ""References"" page added",14,57,1
"mpusz/mp-units","15e656aba6c921caaf9765717488c1ac4a6764e8","mpusz","2020-01-14 11:50:30","false","clang-format on new examples",16,15,0
"mpusz/mp-units","1d89a251a9935a7181308bf6f8f000c9bbd2bc3d","jansende","2019-10-04 18:21:05","false","Update README.md

Co-Authored-By: i-ky <gl.ivanovsky@gmail.com>",13,12,0
"mpusz/mp-units","407a13c48fad18c767f7b1d5d432b6596294e52b","chiphogg","2022-07-07 16:10:34","false","Add `extract_power_of_10(Magnitude)` utility

This will help with pretty-printing magnitudes by extracting a
reasonable power of 10.",34,45,1
"mpusz/mp-units","2a7f2efa15dc27d5f905eac04ed069a4228339bc","mpusz","2019-12-26 09:20:30","false","hectometre and hectare added",16,15,0
"mpusz/mp-units","5ef0bb9a9fa00ce3aaeb08f19aad905e3b4f64e8","mpusz","2019-12-14 20:12:17","false","base_dimension more constrained and comparison fixed",20,15,0
"mpusz/mp-units","a32866abcf57d720b95eaa0ceeb44c01dae5de81","mpusz","2023-10-04 16:09:08","false","Merge branch 'master' of github.com:mpusz/units",1,60,1
"mpusz/mp-units","fdfba6c9b3adf9578cdaf02547c6c0d7d361f4f3","mpusz","2020-12-16 17:05:17","false","build: Documentation generation excluded from `ALL`",20,27,0
"mpusz/mp-units","cbcc6f46271c5ddd1d072625080ef8bbb7683df6","mpusz","2023-09-13 06:55:06","false","feat: `compare.h` header added with checks against zero

Resolves #487",4,59,1
"mpusz/mp-units","3e30c779a61cd8cd75752d1d55f0997b1facb5d6","mpusz","2019-10-17 08:16:44","false","coherent_derived_unit and custom prefixes support added",13,13,0
"mpusz/mp-units","b559a5f98f755099d30aee4270b4ee01faf6be94","mpusz","2022-05-14 09:24:00","false","fix: explicit `ratio` creation added as a workaround for MSVC",34,43,1
"mpusz/mp-units","a365bca07c70a7d3610c340f494e736c6c4dcdc6","mpusz","2020-12-28 19:18:23","false","perf: `conditional` replaced with constraints in clas template specializations",17,27,1
"mpusz/mp-units","7619a6f831eae9f2cc205e8c5b695ee285a9b452","mpusz","2019-12-08 20:57:06","false","gcc-10 crash fixed",18,14,0
"mpusz/mp-units","48d55f31c6654d64ab572eea056d40ba3d468dc8","mpusz","2021-03-16 09:03:47","false","ci: Changed Conan configuration initialization",31,30,1
"mpusz/mp-units","053c17be0914010385fb0a333626cd5ba08bf033","mpusz","2020-12-21 22:42:28","false","build: CMAKE_TOOLCHAIN_FILE fixed for test_package workflow",19,27,1
"mpusz/mp-units","12e8d83dd2c8982df421cc5af59db7736ca2065e","mpusz","2022-05-12 13:20:45","true","Merge pull request #361 from hofbi/python-checks

Python checks",34,43,1
"mpusz/mp-units","373e70f2b169b3353cec695ea58c7b2b9cf45c2c","mpusz","2019-04-09 11:43:53","false","Conan stable_branch_pattern changed",2,6,0
"mpusz/mp-units","0c5864cc878a901b66dd9a9ce608f10c04403f2b","mpusz","2020-03-01 13:40:54","false","Kalman filter slightly refactored + clang_format",14,17,0
"mpusz/mp-units","b356a53fa489abb1da3339999725c0af1a2afe85","mpusz","2021-03-16 22:40:57","false","build: installation of `mp-units` and `mp-units-systems` fixed",32,30,1
"mpusz/mp-units","fd8d2e672bc3b6eadfdf9b8ebf5627d8955c2673","mpusz","2020-09-14 18:43:37","false","build: VS2019 16.7 minimum dependency clearly stated in conanfile",16,23,0
"mpusz/mp-units","bf1af91a5101e74be67e0d89d394fdf122b2a0d1","mpusz","2023-08-31 16:57:39","false","docs: important admonition added for floating-points being value-preserving",9,59,1
"mpusz/mp-units","4ca200485926bf9a0d7bde0a324559a3c8265a42","mpusz","2019-07-24 09:34:17","false","0.2.0 release description added to release notes",4,10,0
"mpusz/mp-units","1f0dd453eba52d3cac33cdd19a544d356be7e5e1","mpusz","2021-03-15 21:08:12","false","docs: clang support added to docs",32,29,1
"mpusz/mp-units","63d288636fe721fd2b42ad9dc95cca6d38e27809","mpusz","2020-09-14 06:34:45","false","docs: downcasting documentation added",14,23,0
"mpusz/mp-units","1bee3439d3ecfbcedb4d9ef6f8e3764b92bb76cd","mpusz","2023-03-29 18:56:12","false","ci: rebuild of mp-units fixed in the CI",44,54,1
"mpusz/mp-units","e4cd4ea8c8078d669ade5b161def400249db6e3b","mpusz","2019-11-06 20:17:16","false","UnitRep concept introduced",14,13,0
"mpusz/mp-units","1e28c11cfcdd0453d84acb7670087111de2f53f7","mpusz","2023-05-14 10:43:26","false","refactor: `convertible_to(U1, U2)` renamed to `convertible(U1, U2)`",48,55,1
"mpusz/mp-units","3478c462fa67cabcf9d3577361d7031d13fb8c4a","mpusz","2022-08-02 16:35:11","false","docs: Custom pygments cpp lexer no longer needed",34,46,1
"mpusz/mp-units","61b88b919fde5f98f72598d9cdea507a52165d8a","mpusz","2022-11-08 20:57:05","false","refactor: `convertible()` renamed to `interconvertible()`",32,49,1
"mpusz/mp-units","7b186e31cca4089af1bbe15147059870cdb6ae36","mpusz","2019-05-08 15:06:20","false","Minor file formatting",2,7,0
"mpusz/mp-units","1250b9618e0d9b72cd92cb57eef9a291ed98d04a","mpusz","2021-03-15 13:18:49","false","build: Minimum VS version updated in `conanfile.py`",32,29,1
"mpusz/mp-units","7c2072f01f746710dde20ed918975fcf6ae8e5c4","mpusz","2023-06-08 19:49:58","false","test: typographic system tests added",48,56,1
"mpusz/mp-units","11a539cabcb4bd6d6e65f6f9478273e78eb18b4b","mpusz","2023-09-13 06:59:29","false","docs: units composition FAQ cleanup",4,59,1
"mpusz/mp-units","04cbeb841ed32f65c0f6a6948d63917487f6bc47","mpusz","2019-11-09 14:09:30","false","Disabled prefix/postfix increment/decrement operators (resolves #18)",15,13,0
"mpusz/mp-units","8d69101350ac28b6a6c6ae778e7ce0cfe6af0ce8","mpusz","2023-08-26 18:04:48","false","ci: compilers configuration adjusted to currently supported ones",9,59,1
"mpusz/mp-units","4e89392bebbdc95e3c0f1d989b1423c011eab38a","mpusz","2023-01-06 13:31:30","true","Merge pull request #416 from Twon/buildinfo_in_cachekey

Update missed workflows to use new Conan cache key",35,51,1
"mpusz/mp-units","93c05b29384d9ba3ce130b7a5514f1624e0f7656","mpusz","2020-09-07 10:44:00","false","docs: quantity_point documentation fixed",17,23,0
"mpusz/mp-units","3e541fa50a4e73a8a37e477f1d61f0440454558c","mpusz","2020-12-16 21:14:59","true","ci: CMake generator changed to Ninja",19,27,0
"mpusz/mp-units","6975a025706798df19de01a3090fa222aee73fb6","mpusz","2023-05-22 15:54:47","false","refactor: `InvocableQuantities` concept simplified",47,56,1
"mpusz/mp-units","bf5762dbbb18d3047c30a0e062d357d515cce4f8","mpusz","2019-12-26 11:07:08","false","Initial support for printing multiple negative exponents added",16,15,0
"mpusz/mp-units","bcaccccc7aec619b6cc35d527af0ffc4fd255570","mpusz","2020-12-16 16:58:02","false","refactor: `abs()` defnition refactored to be more explicit about the return type",20,27,0
"mpusz/mp-units","f29c57d367bd2da46aa8e64f3d1723857f037244","mpusz","2023-08-25 21:05:36","false","style: formatting to make pre-commit happy",9,59,1
"mpusz/mp-units","3d091f86b894c265a0a10c95fdc80c00c37819b6","mpusz","2023-06-22 18:26:30","false","docs: ""Basic Concepts"" chapter added",14,57,1
"mpusz/mp-units","9436229ed2a3200851c35fff96a55c65a6c8c9ee","mpusz","2023-02-11 01:20:48","false","refactor: the rest of the code refactored for new quantity construction way",43,52,1
"mpusz/mp-units","0d68efdcd74e2b1598ba784b4af2062c3c019a74","mpusz","2019-04-16 08:38:16","true","quantity_cast fixed",2,6,0
"mpusz/mp-units","bbc2255a6ee26cc0dd42fb5b87135cd80a645d9d","mpusz","2023-08-31 17:43:18","false","style: whitespace removed",8,59,1
"mpusz/mp-units","ab66455fb12175e22b229629e0a3c9432264398b","mpusz","2021-05-02 11:03:14","false","fix: haversine formula fixed

Resolves #276",34,31,1
"mpusz/mp-units","3002c5673d2ac05aff6a8840e1610c7bcfb3ba67","JohelEGP","2021-02-21 06:08:08","false","test: compile quantity_test.cpp with -DUNITS_DOWNCAST_MODE=0",27,29,1
"mpusz/mp-units","02d5ab8478e7c840c6c8877d46f81f1f62c0f640","JohelEGP","2020-07-19 19:06:49","false","refactor: avoid always false comparison",20,22,0
"mpusz/mp-units","17d2fb7815d6d11cbd0cd509f69dcedf8a68698e","mpusz","2020-09-05 11:36:16","true","Create CONTRIBUTING.md",16,23,0
"mpusz/mp-units","b76337d5bb181c41f3a4cfb51915379587887f68","mpusz","2023-09-14 10:42:45","false","feat: pre-increment and pre-decrement operators now preserve value category",3,59,1
"mpusz/mp-units","264d6dd9dca264391468b5170b54534ade47ebfd","mpusz","2020-06-29 18:24:32","false","CI on gcc-9.2 disabled (waiting for gcc-9.3 in Travis CI)",19,21,0
"mpusz/mp-units","f375797372f2226e17020d488ef8a46cfa9ebda3","mpusz","2022-09-22 08:24:32","false","refactor: `constexpr` replaced with `consteval`",30,48,1
"mpusz/mp-units","974b809e0bdd4dc6870fb491afaa68df9a5b3a5d","mpusz","2019-10-15 17:38:47","false","UML diagram added to the DESIGN document",13,13,0
"mpusz/mp-units","621faae8bcb63de94ccf6c1d92d285b6220b5f96","mpusz","2023-06-01 06:49:08","false","feat: `sqrt()` and `cbrt()` added for `dimension`, `quantity_spec`, and `unit`",48,56,1
"mpusz/mp-units","e12fb2f52a0b10ce1c1446825d666495897efac4","mpusz","2019-04-10 18:38:34","false","git submodule download added to scm",2,6,0
"mpusz/mp-units","dfba6e8f850213abcae6e8114966db68025ddf42","mpusz","2019-09-09 21:02:07","false","Unit check for positive ratio improved",4,11,0
"mpusz/mp-units","07cb258eff80608f00fa8f8579228315c3e09055","mpusz","2021-03-19 06:35:20","false","Merge branch 'add_symbolrate' of https://github.com/go2sh/units into go2sh-add_symbolrate",31,30,1
"mpusz/mp-units","c0cf9e82ce00d761b968b28448066b5b5246c854","uilianries","2019-11-21 15:00:03","false","Do not use optional for cmake

Signed-off-by: Uilian Ries <uilianries@gmail.com>",17,14,0
"mpusz/mp-units","05934c8b7206aaa991f2d71289cf51ddb2fba33d","chiphogg","2021-12-30 02:37:06","false","Add make_base_power() helper",30,39,1
"mpusz/mp-units","4f018836c6549b84ef29111960f166d5e13478bd","mpusz","2020-11-05 07:37:46","false","build: Ninja installation added",19,25,0
"mpusz/mp-units","2571b369647150611b9a85c7fcd3104634b0450d","mpusz","2022-12-29 18:01:32","false","test: additional checks for dimensionless units added to iec80000 quantities",34,51,1
"mpusz/mp-units","90fddb925d96da475ea9a9ecbe9ca9f0327d9b36","mpusz","2020-05-09 11:12:05","false","Compiler Explorer links updated",18,19,0
"mpusz/mp-units","9bcc8464cc11d2c29c28065e78547d75ef38a2c9","mpusz","2020-12-17 22:22:22","false","ci: Ninja apt package installed and set as a default CMake generator",19,27,1
"mpusz/mp-units","32ea1bd9b46e433457b5f9496b7c7d16c45c928e","mpusz","2023-10-18 19:03:21","false","feat: `common_type` with a raw value is not needed anymore as for a long time now raw values are not convertible to the dimensionless quantities",1,61,1
"mpusz/mp-units","202a2b08237eaf160e50f77be5079b10239504bd","mpusz","2020-05-07 07:25:34","false","Missing dimension concepts tests added",15,19,0
"mpusz/mp-units","0cffcf784936489909441cf66641002091fd1d84","mpusz","2019-09-20 16:36:14","false","downcasting_traits renamed to downcast_traits

- downcasting_traits -> downcast_traits
- downcasting_traits_t -> downcast_traits_t
- downcast_from -> downcast_base_t
- downcast_to removed",4,12,0
"mpusz/mp-units","024f5a9c83604fd78b94e9458c7e36e6adc0e29d","kwikius","2020-01-12 00:27:03","false","change const order
move in,ft,fathom,ft2,ft3,mph from us to international namespace
TODO distinguish units with different names for same values",16,15,0
"mpusz/mp-units","d6d17c6c6ee509958836d5ff88e785ef2ab26991","JohelEGP","2020-05-31 19:07:27","false","refactor: nodiscard to type level",17,20,0
"mpusz/mp-units","4673d89293291c4241813dea604cbeeec421d15d","mpusz","2023-04-21 14:22:56","false","chore: `.clang-format` updated",46,55,1
"mpusz/mp-units","c1385d2a67d616dabc7051541bd1e588b0c9612e","mpusz","2023-05-12 10:20:07","false","style: extra empty line at top of the file removed",48,55,1
"mpusz/mp-units","a97eea95e9be9779c2ed158759d4e644506b052b","mpusz","2022-11-08 00:57:39","false","fix: `expr_divide` fixed for 1 / derived_type",32,49,1
"mpusz/mp-units","fddc3480a9c6e7c2cd8c1cc2edee9ab7f8b74642","mpusz","2022-10-21 21:11:25","false","feat: `copy` algorithm added",30,49,1
"mpusz/mp-units","2b3c9a6afae5e01f099f9a479e4603c540fa7d9b","mpusz","2023-09-13 18:06:17","false","feat: `quantity_point` compound assignment now preserves the value category",3,59,1
"mpusz/mp-units","eb28aa8f8c9168cd5c2d0156d95a8033e8da83b2","mpusz","2023-08-15 09:15:20","false","fix: `point_from()` now returns a point with a proper representation type",14,58,1
"mpusz/mp-units","04e66188bde0c7ca3638fe48fdddb66e72f2f49d","mpusz","2021-09-09 07:20:10","false","fix: HEP compilation issues fixed",24,35,1
"mpusz/mp-units","af9d72efae2f4dd6b4cf02507149f3594a1c9fa0","mpusz","2020-03-10 12:33:11","false","README updated with the link to documentation",15,17,0
"mpusz/mp-units","2c9502a2a9b6e48705052f2bee2e03cb083016d9","mpusz","2023-08-31 17:02:04","false","test: units tests for point origin arithmetics added",9,59,1
"mpusz/mp-units","9452cf5f3ca211c5389acd0f275f7b80b5a5ad14","mpusz","2019-08-06 08:35:43","false","Concepts usage removed from deduced template arguments and partial specializations",4,10,0
"mpusz/mp-units","be678e8ffa4aea9400399432c6d601e3b06926ec","mpusz","2022-04-24 20:23:16","false","build: `add_public_header_test()` added and fixed Windows absolute header path issue",36,43,1
"mpusz/mp-units","3629173df24e492bc53199b66ea7a263268f0f33","mpusz","2021-03-19 06:25:14","false","Merge branch 'go2sh-add_si_prefix_bit'",33,30,1
"mpusz/mp-units","1cec3d48671484702e24c2cc327e2a705d831d0a","mpusz","2022-12-25 16:20:44","false","refactor: _chrono.h_, _math.h_, and _random.h_ move to `utlitity` CMake module",34,51,1
"mpusz/mp-units","d3f20e22a3ab438b32515f03dfba00514ebe7cfc","mpusz","2020-12-22 14:31:02","false","build: Linear Algebra temporarily removed from MSVC build",19,27,1
"mpusz/mp-units","bd7c421e328ec7acf24a7cc7420a02d23b72ec0e","mpusz","2020-05-17 08:43:34","false","linear_algebra switched to 0.6.0/stable",16,20,0
"mpusz/mp-units","636f1e1f9299c72175228a461b547b819d63963f","mpusz","2023-08-25 17:55:36","false","test: conditional compilation set for `constexpr` `round()` usage",9,59,1
"mpusz/mp-units","7b6fc18e20957b85ba964885f46314ce9060d851","mpusz","2022-11-10 08:54:22","false","refactor: `distribution_test` refactored for V2",32,49,1
"mpusz/mp-units","7efd815fe581390f2edefd696ea2cedcfb6cd323","mpusz","2020-02-19 10:02:45","false","Release notes updated again",17,17,0
"mpusz/mp-units","a49ef2d05599fa28be37fa9900477faf468abe88","mpusz","2019-04-11 12:36:54","false","Area support added",2,6,0
"mpusz/mp-units","bb6c942e0c36d54440a5827643cb2d415beee2bf","mpusz","2023-02-09 06:15:44","false","refactor: common_quantity_spec now starts with a check of arguments equality",43,52,1
"mpusz/mp-units","617e60d60e41203a45aad668f158b66646bc4042","mpusz","2023-08-31 16:56:15","false","docs: ""Quantity Arithmetics"" chapter added

Resolves #448",9,59,1
"mpusz/mp-units","92c6b0d1322df60893caae628bfa87d559622935","JohelEGP","2020-05-31 02:05:25","false","test: exclude gcc9 for presumably failing line",17,20,0
"mpusz/mp-units","6fbbdb0e4798d593df64c152a331699eee73fa6e","Twon","2023-01-06 22:45:19","false","Remove trailing white space",35,51,1
"mpusz/mp-units","30d0dbfff848fc3f6450c3f9c48a01ebdcb72d38","Twon","2023-01-06 22:40:08","false","Run on does not have access to environment.  Use matrix for common OS setting",35,51,1
"mpusz/mp-units","89dbc30a92bac5c7566bc81f827d091257a98c86","rbrugo","2020-04-09 17:12:51","false","Added permeability",13,18,0
"mpusz/mp-units","a05c1ca23c7884f54f9c3981e690259bbee37005","RalphSteinhagen","2021-04-08 11:21:37","false","adding missing/required (?) '#defines' for compiler-explorer examples - also in docs",32,30,1
"mpusz/mp-units","89eba3cd666964f07426fbbed6d23c75a2a3b4d5","mpusz","2023-09-13 07:00:21","false","docs: additional code example added to the ""Value-preserving conversions"" chapter",4,59,1
"mpusz/mp-units","df33d923e514a791d63ba7f0082f28bb3f023fd6","mpusz","2021-09-17 11:29:30","false","ci: Ninja set as the default CMake generator",24,35,1
"mpusz/mp-units","6078ed90b09814273dc61fa637315f5727b5f20d","mpusz","2020-03-24 22:18:15","false","Common CMake tools updated",13,18,0
"mpusz/mp-units","6627b0a491023d889ccb2e7211d12ed7a383845d","mpusz","2023-06-02 11:52:00","false","refactor: `glide_computer` and `storage_tank` examples renamed",48,56,1
"mpusz/mp-units","7522b8a9fd20bf45f76abc320d17b1a8b193bc5d","mpusz","2019-09-30 09:08:52","false","Minor design documentation changes",11,12,0
"mpusz/mp-units","5054f45a4a502153428a833cb534597c2dab3217","mpusz","2022-11-08 02:34:02","false","refactor: iec80000 refectored vor V2",32,49,1
"mpusz/mp-units","59a1269174da961fd21fa2bea6c1b964e80ce2e3","mpusz","2023-05-25 08:35:27","true","Merge pull request #460 from tobylorenz/master

Add ""inch of mercury"" pressure unit as US Custom Unit",47,56,1
"mpusz/mp-units","fe6a5da3f44adf35d03c296d21d4f21f4a453f73","mpusz","2019-10-16 15:03:24","false","More units added for energy and power",13,13,0
"mpusz/mp-units","f6332c849fbd0fb76a1fed2ce44e600e663e886f","mpusz","2022-07-26 07:38:04","false","build(conan): `self.info.header_only()` will be removed in Conan 2.0",35,46,1
"mpusz/mp-units","5413bb865b78e40dc9fc966f0600bcfe17cf787f","mpusz","2019-09-15 23:33:20","false","make_dimension metabench test added",4,11,0
"mpusz/mp-units","4b145ea4cf2730bb27474d287334e0fed288a680","mpusz","2019-09-27 21:45:45","false","`Den != 0` added as a constrain on ratio type",11,12,0
"mpusz/mp-units","0ac00534d65f025e7e3bbd2c80d935c451aab2f8","mpusz","2021-04-08 16:54:49","false","feat: equality comparison support added for `reference`",32,30,1
"mpusz/mp-units","66f0442eca76115c4a1ac70642f61bbedaee1a43","mpusz","2023-06-16 14:17:30","false","fix(example): constraints from `creates_quantity` concepts removed",14,56,1
"mpusz/mp-units","50623e492e585ba9c32460658d8cbb96028248a1","mpusz","2020-06-16 15:44:07","false","Option to disable documentation generation added",18,20,0
"mpusz/mp-units","7d370eb4964b53dd1ec9d57dcc82a3065b5d672f","mpusz","2021-10-15 16:21:26","false","refactor: `forward_range` replaced with `input_range`",28,37,1
"mpusz/mp-units","6af61af9354673e23b3d28777ff5f2a5b7a73e1c","mpusz","2021-06-08 16:00:57","false","Merge branch 'master' of github.com:mpusz/units",25,32,1
"mpusz/mp-units","230ccb152a1351e08efe04fb59ab5d87d1c60ab6","mpusz","2023-03-31 14:07:04","false","ci: promotion restricted to a package being built in this CI run",45,54,1
"mpusz/mp-units","4f0271e6f9b73f436c92a6e2e1787b579aa31df4","mpusz","2020-09-08 11:11:58","false","style: :fire: dead code in customization_points.h removed",17,23,0
"mpusz/mp-units","14c1f346641313f505825e08e58cf7796be202de","mpusz","2023-08-23 18:00:32","false","refactor: `QuantityLike` now requires `value` to exactly return `rep`",9,59,1
"mpusz/mp-units","2abe429ba74948b9e62978047c6b47af8c2422bc","mpusz","2019-12-17 21:26:01","false","dimensions_concepts_test added",17,15,0
"mpusz/mp-units","5d06b66316d522ebc1ce323f18bb2ba95507e8b6","mpusz","2020-03-19 13:45:59","false","""Scenarios"" chapter renamed to ""Use cases""",14,18,0
"mpusz/mp-units","6e59e7a9277ae9eefd6c26e48dc87d282b3d23c0","mpusz","2022-03-18 07:20:08","true","Update src/core/include/units/quantity.h

Co-authored-by: Johel Ernesto Guerrero Peña <johelegp@gmail.com>",31,42,1
"mpusz/mp-units","88c4ef07b0ea44750e1e6456850efc040860c68a","mpusz","2020-09-08 18:05:30","false","docs: Minor documentation related issues resolved",15,23,0
"mpusz/mp-units","5efbda75d563d49a1637bae241155140161c2842","mpusz","2022-07-30 08:57:59","false","build(conan): `cmake_layout` import added too early by an accident",35,46,1
"mpusz/mp-units","2b9e9f97801877db4f50c30054df92d6c3120f12","mpusz","2020-12-23 22:26:54","false","test: Unit tests compilation fixed on gcc-10.1",19,27,1
"mpusz/mp-units","6b8cd399d5c70e6e16ad12fcdbac5c8ec236cae4","mpusz","2021-08-10 12:22:47","false","ci: libunwind installation added for libc++ configurations",25,34,1
"mpusz/mp-units","9a9abca81d8035901f9415e949b7ec3a4e5d5ce8","mpusz","2019-10-16 15:04:41","false","Text output support added for quantity",13,13,0
"mpusz/mp-units","fdc31e7cdec682f0c38db07453028402d57ba7c6","mpusz","2021-04-07 11:56:20","false","refactor: example applications refactored to benefit more from references",32,30,1
"mpusz/mp-units","d04dab70028fd1ab832e18e1d1fdbfdff2caa9c4","mpusz","2023-05-22 15:59:37","false","test: more `quantity_spec` tests added",47,56,1
"mpusz/mp-units","240b79f9c358ef7c3b2ffeeb7cf0a551c3674894","mpusz","2019-04-07 06:36:10","false","AppVeyor label removed from README",2,6,0
"mpusz/mp-units","f4ff02f8e5630ce734fc64f9c23a88e0e278a3e9","mpusz","2021-01-06 15:44:32","false","fix: quantity's compound operators fixed to behave like `int`s do",21,27,1
"mpusz/mp-units","1f6f5817ae562aebc37ad6bd68ee8b616859a53a","mpusz","2022-05-12 15:12:00","false","docs: `CHANGELOG.md` updated",33,43,1
"mpusz/mp-units","d4b755b3b7230aff2640577d581ddfa4f504f772","mpusz","2020-05-05 18:56:47","false","CMake project renamed to mp-units",15,19,0
"mpusz/mp-units","258a62edcc630088c781054abda1763d93caced6","mpusz","2023-04-21 14:10:02","false","refactor: quantity hiearchy kinds fixed for some quantity definitions",46,55,1
"mpusz/mp-units","81698f02e5a43547ee074cfb13ec388ea29fed9a","mpusz","2023-09-04 09:16:25","false","feat(example): `validated_type` now properly registers as a scalar type",8,59,1
"mpusz/mp-units","33ca86d86831867e13e6a7b5815490ef2fb87716","mpusz","2020-03-10 12:02:16","false","Fixing deployment once again",15,17,0
"mpusz/mp-units","d380aa3800549cc15bfe90ced0609653a04d1339","mpusz","2023-06-15 14:28:35","false","refactor: clang has issues with CTAD for aggregates",15,56,1
"mpusz/mp-units","10f93b5386b4e1427e6acfb937c0a42c63d8d0d0","mpusz","2020-05-28 18:45:15","false","Compilation on gcc-9 fixed",16,20,0
"mpusz/mp-units","66a37e0f625aa72dfc618842babc47e33d242cb5","mpusz","2023-08-26 18:05:09","false","build: supported compilers adjusted or Conan",9,59,1
"mpusz/mp-units","f5df115acb2a80197afcd0b20b768ce3f36743ed","mpusz","2019-10-05 06:19:41","false",".gitattributes added to unify line endings",13,12,0
"mpusz/mp-units","b5b2c54fe83d971ee30c608209f2a017a9e5a4de","mpusz","2019-11-05 20:05:11","false","Basic std::fmt support added",14,13,0
"mpusz/mp-units","ccbd97e3af7267c5f658519e1b84622b94131792","mpusz","2020-10-06 16:32:26","false","docs: CHANGELOG updated",17,24,0
"mpusz/mp-units","aba980290b9482dcd1a95f1f7ba0be48cdf5b87d","fdischner","2022-01-29 17:56:35","false","ci: explicitly set used xcode version",30,40,1
"mpusz/mp-units","608adf92aeddec1938800a20f3b917c66b2e2739","mpusz","2019-12-17 09:12:17","false","README example fixed",18,15,0
"mpusz/mp-units","ce0fbfa0a16a1236e3360e36ba5aa8237cba4f24","mpusz","2020-03-25 21:07:16","false","quantity cast refactored to match new ratio and Scalar design",13,18,0
"mpusz/mp-units","cee4be2b67dc1b17995f419ad7e34d13cb68a0be","chiphogg","2022-01-10 19:28:02","false","Simplify namespaces and canonicalize formatting

The motivation for the `mag` sub-namespace was to distinguish something
like `mag::product_t<...>` from `dim::product_t<...>`, based on the
idioms of Aurora Units.  However, we have no need for a `product_t` type
trait, since we can just use `operator*()`, so we can eliminate this
sub-namespace.",30,39,1
"mpusz/mp-units","240bdd659c1d164803b071b0c18c72250419aebe","chiphogg","2022-02-21 22:53:08","false","Use intmax for base of integral powers

I used `int` before, because it was simple, and I thought _surely_ it
would be enough.  I mean, who's going to make a unit whose magnitude has
a prime factor bigger than 32 bits?

This brings us to the ""Dalton"", a unit whose ratio-magnitude numerator
is 16605390666050.  The prime factorization of 16605390666050 is
(2 * 5 * 5 * 53 * 6266185157), and this last number is bigger than 2^31
by a factor of 3 or so.

Fortunately, we should have done this from the beginning anyway, because
otherwise there would be numbers we could represent in `ratio` which we
couldn't represent in `Magnitude`, and this should never be the case.",30,41,1
"mpusz/mp-units","a719a8b91233fc03ed5e0940d5bb36d15cc524f1","chiphogg","2022-03-11 03:57:21","false","Try upping the basis size",31,41,1
"mpusz/mp-units","3b0e445b4cef5ca40064a1c42974678ce4d1a803","kwikius","2020-01-10 04:36:20","false","Remove sandbox.cpp from repo
Examples/clcpp_response.cpp : removed debug #defines",16,15,0
"mpusz/mp-units","229d303319e6b644c88dcd90cf25ee2bce566619","JohelEGP","2021-03-17 03:03:20","false","refactor: add portable diagnostic pragmas",32,30,1
"mpusz/mp-units","e30aa9c4a00f6a1bd8a2ff46a78d738ca77ec04f","JohelEGP","2020-09-07 04:57:05","false","refactor: simplify is_specialization_of",17,23,0
"mpusz/mp-units","12c0177633631c031b39678cb01ea02bf9b7c3ff","JohelEGP","2020-08-18 06:56:01","false","docs: fix emphasized lines",17,23,0
"mpusz/mp-units","db041061e095e33c6c8f6d870d02c23e9765b8de","JohelEGP","2020-09-07 04:43:42","false","chore: iwyu",17,23,0
"mpusz/mp-units","6eae368ad45399b455c3fdc66f2b17d87f41eccf","mpusz","2021-10-20 17:53:21","false","build: forgot to commit a CMakeFile for docs :-(",27,37,1
"mpusz/mp-units","195f9c13b9131c2d028a653d199248e7b2fb718f","mpusz","2023-02-13 17:14:46","false","feat: `get_common_base()` added",43,52,1
"mpusz/mp-units","3686397882deac072bb03bb088a7748276e8b62f","mpusz","2023-02-09 06:07:12","false","refactor: minor code cleanup",43,52,1
"mpusz/mp-units","d4278494777abc712e897aed9aab8d799fbcbe94","mpusz","2023-09-27 15:10:20","false","refactor: `in(U)` and `force_in(U)` now return `auto` to provide better diagnostics on clang

When a strong type was returned clang, instead of on a concept check, failed on `detail::make_quantity` used to provide a function return type.",2,60,1
"mpusz/mp-units","a0ae08746f2e21a82415b70e7248605df5707ef2","chiphogg","2022-02-06 21:56:00","false","Restore mistakenly removed comment",30,40,1
"mpusz/mp-units","3b63332f9ad87df72d1d07cdb5eb052819c0ac51","mpusz","2020-12-16 17:46:40","false","ci: ""Ninja Multi-Config"" set as a CMake generator for documenation generator workflow",20,27,0
"mpusz/mp-units","c429bb6d3f18b2324ec55795d95ccb3cd3cd75b3","go2sh","2021-01-01 20:13:48","false","Add symbolrate as alias unit for frequency.",18,27,1
"mpusz/mp-units","dd6db61ea9407fc7850083e7d608793122dd6640","yasamoka","2020-03-25 07:06:45","false","added ASCII symbol for micro SI unit prefix",13,18,0
"mpusz/mp-units","424f0512c13132aff77ec84f24589f233c5e0ae4","oschonrock","2020-02-22 01:44:00","false","hack fix?!",14,17,0
"mpusz/mp-units","ad48d29ed990f9e0bbc1c895c6f534e58295fbd6","fdischner","2022-01-28 03:31:25","false","docs: add Apple clang 13 to list of supported compilers",30,40,1
"mpusz/mp-units","1b924ffbc1d1861577bb6e9c954892001e73d303","mpusz","2023-02-13 17:59:36","false","fix(example): Kalman filter examples now use a correct quantity of time",43,52,1
"mpusz/mp-units","0d33926a74fa0a1d235692a4dac457d54c5747c3","mpusz","2023-02-13 17:29:03","false","feat: specifying an associated quantity for a derived unit support added",43,52,1
"mpusz/mp-units","af4615e4668aca4d4267a15438f5bdb78915865b","mpusz","2023-08-24 17:17:57","false","test: `quantity_point_test` compilation enabled",9,59,1
"mpusz/mp-units","630daf4e266f017b0a808e1d3ab954dfaea31880","mpusz","2022-11-08 02:34:39","false","fix: `compressibility` definition fixed",32,49,1
"mpusz/mp-units","ffbbd3848c3e64c6c9c5f682a395f4cb9771a753","mpusz","2023-10-25 12:14:26","false","docs: titles added to some important admonitions",2,61,1
"mpusz/mp-units","6f0f6b2213d32c48eb1a4285cffde00907b477e9","mpusz","2023-06-08 15:41:48","false","feat: `make_quantity()` and `op*(Representation, Unit` are now correctly using quantity constructor constraints",48,56,1
"mpusz/mp-units","7160caa597eb9417e736682f8952bc6d755d185d","mpusz","2023-02-13 18:01:30","false","refactor(example): `avg_speed` example don't need a `quantity_cast` anymore",43,52,1
"mpusz/mp-units","5f859f332eba9080d0c70601156769b6d3a024a3","mpusz","2020-11-05 07:31:33","false","build: documentation generation made a separate workflow",19,25,0
"mpusz/mp-units","8543ab65d19c7ed3d08573f012d14cb722536dda","mpusz","2019-10-19 18:51:20","false","pow<0> support added",14,13,0
"mpusz/mp-units","b4bb7227b90976e69128ab2bad8a879ce6c737b9","mpusz","2023-09-27 15:06:08","false","feat: `UnitCompatibleWith` added and applied to `in(U)` and `force_in(U)` functions",2,60,1
"mpusz/mp-units","0522bae972c56fa5a57ce7f28f3536576eeacba7","mpusz","2022-05-11 09:40:19","false","refactor: :boom: ! `unit` renamed to `derived_unit`",34,43,1
"mpusz/mp-units","a356db749ef8651d6b8c48cf732673286a0faa39","mpusz","2023-09-20 18:32:59","false","docs: `inverse()` added to ""Other maths"" chapter",2,60,1
"mpusz/mp-units","8644df8a98cab5a42aaf5b63ad9211bf78be47e3","mpusz","2023-01-03 13:23:30","false","Merge branch 'master' of github.com:mpusz/units",35,51,1
"mpusz/mp-units","bdbf2c37f85283449edfb3e11ec87762f8439035","mpusz","2023-03-29 14:42:34","false","chore: Conan 1.X temporary files removed from .gitignore",44,54,1
"mpusz/mp-units","4c2e288017156470a607012fe55e0c4ac98ce730","mpusz","2023-08-01 15:26:00","false","feat: explicit `this` interfaces added for getters in `quantity` and `quantity_point`",12,58,1
"mpusz/mp-units","9734fb02e247e074d0d224f2d823ba33b362cc6c","mpusz","2020-09-08 18:02:07","false","docs: ""Reference"" section of the documentation disabled as it crashes Sphinx",15,23,0
"mpusz/mp-units","79545d84dd2d179c47a5d7c494558ef9e85ce23e","mpusz","2019-11-16 17:31:12","false","Small refactoring of `foot` and `inch` definition",17,14,0
"mpusz/mp-units","d7582ff344f851f90c7b83d3dffe6b7caa4aba65","mpusz","2021-04-29 10:56:13","false","ci: generator setting for a `CMakeToolchain` added in test_package",32,31,1
"mpusz/mp-units","24b284fcbbd0467935494441da775fc458395b35","chiphogg","2022-03-10 23:41:36","false","Add tests to support claims in comment",31,41,1
"mpusz/mp-units","8f49561242bbddf0d76cc077d8312e84027b069c","mpusz","2020-09-09 18:50:58","false","refactor: the default dowcasting mode changed from AUTO to ON",14,23,0
"mpusz/mp-units","695ba340921542bebfb409182ce71400402980fe","mpusz","2019-11-06 21:28:34","false","Revert ""Uploading of Conan dependencies disabled""

This reverts commit 37ca5f710202bddaed2d369f0f5f6167ac0c8bb2.",14,13,0
"mpusz/mp-units","ea4a67b226b876be5be79082bdfe92161ad3b5d3","mpusz","2023-05-12 09:49:20","false","build: `build_context_activated` no longer needed for doxygen",48,55,1
"mpusz/mp-units","ba1f58af76cc16313cd671ac246ffec1702b5d05","mpusz","2023-06-21 16:05:21","false","refactor: All the macros refactored to have `MP_UNITS_` prefix",14,57,1
"mpusz/mp-units","4ff96170aa3475d4140e75137827492afea9ed77","mpusz","2020-10-06 17:21:47","false","build: workaround for gcc-10.0.1 added",17,24,0
"mpusz/mp-units","660e62c0a635c2d7e05580e507fba06612415456","mpusz","2023-04-03 17:23:08","false","refactor: `chrono_test` refactored to V2",45,54,1
"mpusz/mp-units","9e34050e2336822a84d686c3e1e1be85b51852e6","mpusz","2019-12-11 07:22:12","false","fmt and catch2 updated to the latest versions",18,14,0
"mpusz/mp-units","9e22c7b0c7929315c148866323db99b5511e3236","mpusz","2022-03-21 19:43:45","false","chore: Gitpod configuration fixed",32,42,1
"mpusz/mp-units","68203b6a9f63c2a6bc050bf69337efd00003af7e","mpusz","2021-05-10 16:11:53","false","test: additional tests for FPS unit text symbols added",28,31,1
"mpusz/mp-units","d20fa9c9efa43cca39547aba494421257715769f","mpusz","2019-11-16 18:56:03","false","""Adding custom representations"" chapter added to DESIGN",17,14,0
"mpusz/mp-units","e525c0c8928fa235cad8ae2b1a84c3270d40096c","mpusz","2022-04-19 16:57:06","false","refactor: `knot` text symbol changed from `""knot""` to `""kn`""

Relates to #357",36,43,1
"mpusz/mp-units","512406e900f03eb42435b47bc55c34eff953029f","mpusz","2021-04-06 14:30:26","false","build: got rid of global options for `references` and `literals`",32,30,1
"mpusz/mp-units","5793cb8d0c8abdfe9a300528d3bd21b6e3ffb3a2","mpusz","2021-04-29 10:54:43","false","ci: got rid of Ninja in CodeQL action",32,31,1
"mpusz/mp-units","034d44eb3f260c09e620711530eaf169c617e8c6","mpusz","2023-06-13 14:35:43","false","test: more concept tests added for dimensionless quantities",48,56,1
"mpusz/mp-units","c2e91d41c4708fe6c3930778f010951a072afeff","mpusz","2023-06-05 09:09:02","false","fix: commutativity of a `common_unit()` fixed",48,56,1
"mpusz/mp-units","d9d9d9d3b74ec9ce3a584301f64758cc4ae55c24","mpusz","2023-06-21 09:29:22","false","feat(example): `storage_tank` example extended with custom quantity types",14,57,1
"mpusz/mp-units","a2a50622a4204e662ef0f88dc92fe10bfac3fe15","mpusz","2022-05-13 16:35:25","false","style: `test_package/conanfile.py` reformatted to make pre-commit happy",34,43,1
"mpusz/mp-units","40f6ae2da7bf8fca17431c53fe5f0fc194a1da15","mpusz","2023-04-05 15:24:08","false","refactor: `quantity` refactored + `quantity_test` updated to reflect and test changes",46,54,1
"mpusz/mp-units","23da1299d6b8d8137a063dc1fcd4b8d1086e52f0","mpusz","2021-03-13 18:53:09","false","build: CMake scripts cleanup",32,29,1
"mpusz/mp-units","02bf37abc43d28ae654b9907df38541754e0d126","mpusz","2022-08-10 09:20:29","false","build(example): Disabled Kalman examples 6-8 for AppleClang (example 5 enabled)

Resolves #382",34,46,1
"mpusz/mp-units","768f400cc3b18e47f991d39b1f893cfbc945ddce","mpusz","2022-05-23 07:56:45","false","test: quantity CTAD tests enabled only for the newest compilers",34,44,1
"mpusz/mp-units","624b7c7404d7fead5ed70bd600625806eee24c6a","mpusz","2023-08-24 17:14:23","false","fix: some fixes revealed during clang compilation",9,59,1
"mpusz/mp-units","ca7762177fd07e41596409076c1ed1a5a2dda25a","mpusz","2021-03-19 06:01:12","false","refactor: `quantity::value_` renamed to `quantity::number_`

Refers to #259",33,30,1
"mpusz/mp-units","eec4312e012668db5ee040228083d42a72b92a43","mpusz","2023-01-03 13:27:44","false","style: clang-format applied to last commits to make pre-commit happy",35,51,1
"mpusz/mp-units","5d73cd0730735d8dea9b93db8f10f34d8cbcc081","mpusz","2023-07-10 14:53:49","false","feat: dimensionless quantities with a unit `one` are not special anymore",12,57,1
"mpusz/mp-units","6ebbc110726a97dc3d1df689f43aed79ba0f5e74","mpusz","2021-01-27 16:10:14","false","build: catch2 updated to 2.13.4",27,28,1
"mpusz/mp-units","9ec5c7760203483f2d4e1919a50463121dbd09cc","rbrugo","2020-04-09 17:33:00","false","Added molar heat capacity",13,18,0
"mpusz/mp-units","4b4cc70764c8920bbcd6fe12bbf7c86bf821e1cd","rbrugo","2020-04-07 21:35:45","false","Added luminance",13,18,0
"mpusz/mp-units","a306472a6b1ac57a47b4df3b2909d092072bea9e","chiphogg","2022-01-12 00:44:10","false","Reuse callables in pairwise_all tests",30,39,1
"mpusz/mp-units","834d1fa09d2e93197ac5d9b053aa5fad999e36b7","oschonrock","2020-02-20 22:15:05","false","extending the range of operator* for incoherent units with large num/den
this improves the situation for #55 (doesn't solve it outright)
motivating examples which now work are:
1q_mi * 1q_mi * 1q_mi
1q_au * 1q_au
tests added and docs updated",15,17,0
"mpusz/mp-units","21d20ed56d7869ae730b6fbab1d34428330b6c92","mpusz","2021-03-17 16:43:14","false","ci: Chocolatey dependencies caching added

Resolves #256",32,30,1
"mpusz/mp-units","4e3daf3f02bfcdfa3310403bbbc2f6b1edccfce4","mpusz","2023-02-13 17:42:48","false","fix: quantity construction in `random.h` fixed",43,52,1
"mpusz/mp-units","4174f184f3a40cb802270d5a07d5b839a277d030","mpusz","2020-03-18 10:21:54","false","""Conversions and Casting"" chapter done",15,18,0
"mpusz/mp-units","7cd168377f39b5acf7bb2d1e1370b5737780891a","mpusz","2022-07-30 12:30:16","false","build(conan): Conanfile fixed after the last wrong commit",35,46,1
"mpusz/mp-units","018d95e9350ea9c4f35fb2997915a9a628d9be27","mpusz","2020-06-29 18:31:39","false","Dimensions concepts definitions refactored",19,21,0
"mpusz/mp-units","54df464b1dcb935102c263fb0c831d79fad27782","mpusz","2020-06-16 15:42:39","false","Conversion issues fixed in si_fps_test",18,20,0
"mpusz/mp-units","0a906450a20be9bd7961156e61d7a86ae23bb4c0","mpusz","2020-03-24 21:56:11","false","Custom representation tests moved to a new file",13,18,0
"mpusz/mp-units","034f239f9698983aa1e015c8cf72000ce7e0f2cc","mpusz","2020-03-19 13:44:56","false","PrefixType renamed to PrefixFamily + units hierarchy PNG fixed",14,18,0
"mpusz/mp-units","b5ffc8fe25df6de74b3cfbfccc1d9bf19915da74","mpusz","2020-09-13 09:36:37","false","docs: Compiler Explorer links updated",14,23,0
"mpusz/mp-units","31bf975e11adb417057fecaf88d0589578ddfd17","mpusz","2021-03-30 11:23:06","false","Merge branch 'master' of github.com:mpusz/units",33,30,1
"mpusz/mp-units","9d4ea8a8bf7073c0611a2ec1697c6cc51875e5bd","mpusz","2021-04-29 18:57:36","false","ci: test_package configure and build moved to one step",32,31,1
"mpusz/mp-units","ae92b497756e843129d6e1ff5920b616cc1e38c5","mpusz","2023-08-23 14:46:15","false","refactor: `op[U]` for `quantity` and `quantity_point` replaced with `.in(U)`

Resolves #469",13,59,1
"mpusz/mp-units","761919c1be1dda50db1f6d95339577eedcf24b27","mpusz","2023-02-09 19:25:18","false","feat: added new SI prefixes based on CGPM 2022 Resolution 3",43,52,1
"mpusz/mp-units","56fd5c04ae0296ea88cbcdbaf0272a2cf3d89502","mpusz","2020-12-21 22:07:25","false","build: cmake_paths generator added for documentation generation",19,27,1
"mpusz/mp-units","95028d10a72ff88afdd6123ebd527fac12ee0ff0","mpusz","2019-10-17 16:22:51","false","gcc-10 enabled",14,13,0
"mpusz/mp-units","a9db3ec3fca46d958c2d352e261e522b4221c689","mpusz","2020-12-29 12:48:15","false","refactor: Documentation and explicitly deleted operators provided for `one_rep`",17,27,1
"mpusz/mp-units","e49e6c40ae7c9af17939b366171bb13aff592e89","mpusz","2023-08-23 12:52:09","false","feat: `absolute()` member function removed from `quantity_point`",13,59,1
"mpusz/mp-units","37ca5f710202bddaed2d369f0f5f6167ac0c8bb2","mpusz","2019-11-06 21:28:34","false","Uploading of Conan dependencies disabled",14,13,0
"mpusz/mp-units","2e1a0173769d27ccafa9757e41dd2cd75ca4ff1b","mpusz","2023-09-13 14:21:57","false","refactor: `quantity::_value` data member renamed to `numerical_value_`",3,59,1
"mpusz/mp-units","eea770a2e1def45bb0438bb6107059c9a2e8fead","mpusz","2021-01-04 08:45:10","false","test: `#if COMP_GCC >= 10` removed

Resolves #197",22,27,1
"mpusz/mp-units","2bcc5fa4e555e9d034498fcb78f01845262b7be4","mpusz","2019-10-15 09:29:25","false","Small quantity formatting cleanup with clang-format",13,13,0
"mpusz/mp-units","7a5df94deb6a762dcad9225254175c28360fc744","mpusz","2020-05-11 09:09:26","false","Documentation deployment switched to gcc-10",16,19,0
"mpusz/mp-units","4120fd408bce26173a4a53b06fd6685186804a37","komputerwiz","2020-09-10 22:52:04","false","Fix typo in 'day' time unit declaration

Output formatted in days (e.g., `quantity_cast<si::day>(some_time)`) had the right scaling, but the wrong unit (`h` instead of `d`)",14,23,0
"mpusz/mp-units","0c5ae082d5417c4f14cbf7d2ccfdd687a7b54d23","chiphogg","2021-12-29 12:51:44","false","Add magnitude with product, inverse, quotient

For now, all templates are unconstrained; we hope to clean that up
later.",30,39,1
"mpusz/mp-units","6c5d763fbb07e712460caa04992ccd0e2d9af9bc","JohelEGP","2020-08-18 02:27:26","false","refactor: nodiscard to functions",18,22,0
"mpusz/mp-units","17ce8d3dc8f8a46331ea1d4b57598c699dda1142","yasamoka","2020-05-07 17:15:47","false","replaced back unit test with one using exponent",15,19,0
"mpusz/mp-units","7b8ad8e37cdb2c3a4c1342d257ecb65b5e539d9f","yasamoka","2020-04-17 03:42:35","false","changed hectare to an alias_unit",13,19,0
"mpusz/mp-units","dfb9042e9d93de479e714e75ef68eb0b38ef9cff","oschonrock","2020-02-15 21:17:52","false","promo text",17,17,0
"mpusz/mp-units","2e26eed59d8afd07f3023f5341243050f556938e","mpusz","2023-09-13 17:59:49","false","feat: `numerical_value_ref_in` disallowed for rvalues",3,59,1
"mpusz/mp-units","2b2f62d03839d3d9107cd0f1ff1911becdd453dc","mpusz","2023-09-12 14:33:02","false","feat: `force_numerical_value_in(U)` added",4,59,1
"mpusz/mp-units","0a4f99259df18c0a481532ba552f73c897567837","mpusz","2021-09-17 11:56:30","false","Merge branch 'master' of https://github.com/mpusz/units",24,35,1
"mpusz/mp-units","8c54bbdc9a811fdd662aaca568892a6e0b33350d","mpusz","2023-06-16 07:26:34","false","refactor(example): `hello_units` example changed to better reflect the code in README",14,56,1
"mpusz/mp-units","3a4eb9143c203ff8592ff942f0152f4f2d05f12a","mpusz","2023-01-07 11:21:40","true","Merge pull request #420 from Twon/update_codeql_cachekey

Update codeql cachekey",35,51,1
"mpusz/mp-units","6accefbc16d10b2292b075106046e4f406574dcf","mpusz","2020-10-06 17:50:00","false","docs: basic concepts and custom representation types documentation updated",17,24,0
"mpusz/mp-units","596fd5d4ea67b0b5cecdb801966000b34a9dba26","mpusz","2023-08-30 16:42:07","false","docs: ""numerical value"" definition added to the ""Glossary"" chapter",8,59,1
"mpusz/mp-units","5ca185640836caa1caa5f900f53f854385f7dc0b","mpusz","2023-06-16 10:54:45","false","fix(example): `value_cast` prefixed with a namespace in `conversion_factor` example",14,56,1
"mpusz/mp-units","9a130d9b5b6ab1893fd83a89718b17d441600974","JohelEGP","2020-09-09 05:52:40","false","test: percent to unitless conversion",13,23,0
"mpusz/mp-units","9ca65240c86d18e3d3d177149f87a2d47ed5a702","mpusz","2020-09-08 18:36:45","false","docs: MSVC constraints moved to Visual Studio",15,23,0
"mpusz/mp-units","b4121707df7f08d63e5f8cdcb8f092a58e4a5acc","mpusz","2020-06-22 17:41:34","false","`length_3d` added in glide_computer",19,21,0
"mpusz/mp-units","dcad3b6a56c3e7964ba28beeaa91497226eac350","mpusz","2023-06-15 14:26:16","false","refactor: alternative `mag_pi` implementation provided as a workaround for clang",15,56,1
"mpusz/mp-units","d465d47803c5cd4be51f62f378730c18b2f0a690","mpusz","2019-12-08 15:09:00","false","range-v3 dependency removed for gcc-10",18,14,0
"mpusz/mp-units","144f6951c09ee721167cc3a37518d20a52c0587f","mpusz","2022-03-17 22:59:48","false","style: all files refromatted with clang-format",31,42,1
"mpusz/mp-units","bf954cfcaff69df920f184b657ad4e2120a74327","mpusz","2023-09-13 08:44:50","false","docs: `q.force_in(U)` documentation added",3,59,1
"mpusz/mp-units","a62c388d050dbd09a5f4927e4cd91e3effce739f","mpusz","2022-12-23 15:29:39","false","refactor: `make_quantity` helper not needed with the new syntax",34,51,1
"mpusz/mp-units","daf97a3a8608207cf41a3b24a7815f5bbef7180f","mpusz","2022-09-08 17:11:45","false","feat: initial very dirty version of V2 framework",31,47,1
"mpusz/mp-units","8ccee4d13da44912fa2dc67d5d7b17f9bd2559be","mpusz","2020-11-04 17:30:28","false","build: `uses` and `run` keys in one step error fixed",19,25,0
"mpusz/mp-units","ebccabc94c691fce4ba80d990f68b44e9cc31b5a","mpusz","2023-02-07 06:34:59","false","refactor: `DerivedDimension` definition simplified",43,52,1
"mpusz/mp-units","33f14f39f3f72cfefd8b2575ea561fac01b59df1","mpusz","2019-12-06 11:56:44","false","math_test enabled",18,14,0
"mpusz/mp-units","86e1f058e734a7ca851ef2da7289ee3ccaabf4d4","mpusz","2023-05-22 15:52:59","false","feat: `common_quantity_spec` extended to properly work with kinds derived from the dimensionless",47,56,1
"mpusz/mp-units","c3e7c11117a5656115b07e0e29f1a6549f167443","mpusz","2021-09-02 19:42:07","false","Merge branch 'RalphSteinhagen-master'",24,35,1
"mpusz/mp-units","ddb6e6a90a14974a8987e18f494387fc316c8024","mpusz","2021-09-17 07:47:59","false","fix: missing algorithm header added",24,35,1
"mpusz/mp-units","25682397bd276a3b2ab94740c8757a5721ed89ff","mpusz","2022-12-20 11:52:12","false","docs: comment for `magnetic_flux_density` fixed",30,51,1
"mpusz/mp-units","0354c56ac2cc0f29f3ba9eb5c745ad355b50848f","mpusz","2020-01-31 16:03:35","false","clang-format applied to a downcasting header",18,16,0
"mpusz/mp-units","5152db638238016600a0d11c20473c029e768276","mpusz","2022-12-17 15:18:14","false","test: ISQ quantities specification tests added",30,51,1
"mpusz/mp-units","f4ccb9c7fc04a156c78b66c5976630afc9f2e844","mpusz","2021-04-29 11:46:09","false","ci: `VISUAL` renamed to `MSVC`",32,31,1
"mpusz/mp-units","7fc88facd6ad9580ffcdc45d04667246bbcc3df9","mpusz","2023-06-19 12:01:36","false","feat: `arcminute` and `arcsecond` support added",14,57,1
"mpusz/mp-units","db35f05d68c67a827ce65b0ebb58b5bbde9fcc53","mpusz","2023-06-13 14:42:08","false","test: more conversion tests added for dimensionless quantity specs",48,56,1
"mpusz/mp-units","9a7a55b87393b6298764707c66ee74ec211b6bec","mpusz","2023-01-05 09:39:23","false","test: test's text output fixed after unit ordering change",35,51,1
"mpusz/mp-units","80d67163c8dd3ffe8532777758bd489c0e1ccdf5","mpusz","2020-05-17 10:04:57","false","linear_algebra updated to 0.7.0/testing",15,20,0
"mpusz/mp-units","0ea6ef08007567528d3ff5ac5766cf5cac362754","mpusz","2020-12-27 10:54:04","false","Another attempt to restore the GCC 10.1.0 build",20,27,1
"mpusz/mp-units","aca82085682f9d3956cb70978f1df5fb3885f88b","mpusz","2022-10-20 12:06:22","false","test: dimension unit tests cleanup",31,49,1
"mpusz/mp-units","594f92241aa07768ee98dced8a4354374857b04f","mpusz","2019-12-26 09:23:42","false","tonne added",16,15,0
"mpusz/mp-units","2b93580eb4353a6af5e354fe4eaa8921340994c4","mpusz","2022-03-23 11:00:29","false","chore: Gitpod configuration fixed for impish",32,42,1
"mpusz/mp-units","7bf06e2b91fb3b3ac9cbf40a5dd2b3fbd9ade17a","mpusz","2021-11-15 15:52:22","false","fix: `const_iterator` replaced back with `iterator` in `formatter`",31,38,1
"mpusz/mp-units","7e844ef7739c523111437793e0795b3c8c2f3552","mpusz","2019-11-04 06:30:22","false","Construction from a single character added to a fixed_string",14,13,0
"mpusz/mp-units","c43871578e30725b390a0f139588f2858a19482e","mpusz","2019-05-28 12:35:25","false","type_list refactored",2,8,0
"mpusz/mp-units","749684c8ee872956d74e596295c5869972bd11d5","JohelEGP","2020-09-09 06:23:49","false","style: fix name numbering",13,23,0
"mpusz/mp-units","d7ee8f23a836f16194e221eb30bd2d0233cc8c0a","mpusz","2022-01-25 12:30:01","false","build: Conan finally fixed gsl-lite

Relates to #318",30,40,1
"mpusz/mp-units","d7261c8f7624fc2a3dc4d0f9cb704556a5369b6d","mpusz","2023-09-04 10:30:14","false","fix(example): `treat_as_floating_point` specified for `validated_type` and `ranged_representation`",5,59,1
"mpusz/mp-units","d65393b4e2dfdb05509da6d06aed34642b38d0b2","mpusz","2023-04-08 17:49:51","false","refactor: `quantity_spec` casts functions renamed",46,54,1
"mpusz/mp-units","cf3408a3c890562c4e11608792424a53c59a2614","mpusz","2023-02-02 13:56:29","false","refactor: implementation cleanup + support for units as references started",42,52,1
"mpusz/mp-units","10a1c06dfa1d36c4a300436eaafd8c3df9cbf5b5","mpusz","2022-04-15 15:01:47","false","fix: `includedirs` added for components as there will be no defaults in Conan 2.0",35,42,1
"mpusz/mp-units","112cce1c6521831ec0b0f996c4958432cf5cfb13","mpusz","2020-12-29 16:29:30","false","fix: unused argument in `iroot_impl` compile error fixed",17,27,1
"mpusz/mp-units","649252d691b7ace8a44e22d5519e2029df16935b","mpusz","2022-11-10 04:33:39","false","refactor: `system_reference` moved to a dedicated header file",32,49,1
"mpusz/mp-units","bb4fe5040dfb0197522c29d57072e60be6e8af74","chiphogg","2022-01-03 20:20:05","false","Factor out logic into `pairwise_all()` helper

We could move this somewhere more generic if we want.",30,39,1
"mpusz/mp-units","b8073b79d0d4b5c61a469f4ae01443ff4058913b","yasamoka","2020-03-26 06:23:13","false","replaced ASCII part comparison with assert ensuring same comparison result as for standard part",13,18,0
"mpusz/mp-units","7a79a443433e97f870727549b22bd26ec7c38bbe","Twon","2023-01-06 11:17:52","false","Move the cachekey to using build information for identiciation.",35,51,1
"mpusz/mp-units","ddbbb8ac5547d5a818aa1b79e56548d72f82c14b","JohelEGP","2021-03-18 21:17:25","false","style: remove braces from value",35,30,1
"mpusz/mp-units","45cf2dcf885428013cf2635c3a3d4279105173a6","JohelEGP","2020-09-06 02:39:25","false","test: remove outdated comment",16,23,0
"mpusz/mp-units","0566158e91579494ae7e5cbf2fcd7288f6381d87","chiphogg","2021-12-29 16:38:56","false","Add concept for magnitude",30,39,1
"mpusz/mp-units","ead398f812cc263a097135c183929b00a0498510","JohelEGP","2020-05-31 02:55:07","false","fix: default-initialize with zero()",17,20,0
"mpusz/mp-units","eee4f7d49c9fe7b9b79d830766d5d69538301c9a","JohelEGP","2022-03-10 00:23:21","false","refactor: remove unused header",31,41,1
"mpusz/mp-units","146f1d1c83abbd98beca8e82e04db62fc135e51e","JohelEGP","2022-03-28 14:17:46","false","fix: improve downcast mode off",33,42,1
"mpusz/mp-units","daa00c2f08cdd5f828b833078b1a4c7b9924bbac","mpusz","2021-09-17 11:56:27","false","build: linear_algebra examples disabled for gcc-11.1.0 due to ICE",24,35,1
"mpusz/mp-units","816c86a81a4a22fef7390bd04dc1572c8c73941f","mpusz","2019-04-10 17:17:21","false","cmake install and find_package removed from conanfile

find_package() does not really work well for header only libraries",2,6,0
"mpusz/mp-units","7d70e6b1ce633b94cd5ac689ac0796c5764c00f9","mpusz","2019-08-06 08:44:25","false","Predefined dimensions moved to a dedicated directory",4,10,0
"mpusz/mp-units","f5df68253ea89954f684c308db52f1840947981a","mpusz","2020-03-27 14:21:05","false","symbol_text refactored",11,18,0
"mpusz/mp-units","7006dfcafb0e564838207d02435fd7e779b5da44","mpusz","2021-11-05 22:55:24","false","build: Sphinx documentation install step refactored",30,37,1
"mpusz/mp-units","b00cff8ec8b8c80eee3ffcc7d422859e65121d59","mpusz","2021-05-11 17:38:14","false","refactor: `quantity_point` construction now relays only on a construction of a `quantity_type`

Relates to #221",27,31,1
"mpusz/mp-units","4c127797da038fb7184e31e7656646dc25d00912","hofbi","2022-03-18 13:34:59","false","check: run pre-commit on all files",32,42,1
"mpusz/mp-units","6e8ca7267846625be8ed2a8694d1d59fe121e8e5","mpusz","2022-10-18 15:45:32","false","refactor: dimensions design cleanup",30,49,1
"mpusz/mp-units","fbbb28fdfdd175fcddd6035f64972b4b3df435b6","mpusz","2019-11-16 17:30:44","false","`measurement` example added",17,14,0
"mpusz/mp-units","c6a5d9e222dad307e477176ce49cd6636c290437","mpusz","2020-09-23 14:38:40","false","fix: broken requires expressions fixed",18,24,0
"mpusz/mp-units","b2beac4ac0f7f02e0df604c6f07ed5dd3a31b804","mpusz","2023-09-26 11:22:15","false","ci: clang-17 support disabled until Conan supports it",2,60,1
"mpusz/mp-units","f6db4435e6dba20edd52bd438df7ea42a7cbf072","mpusz","2021-04-29 15:17:33","false","ci: `cmd` shell set for MSVC",32,31,1
"mpusz/mp-units","51ffbadf7474f2599d81fe2d01e3a545d4b1bfc4","mpusz","2020-09-04 20:11:24","false","gcc-9.3 compilation fixed",15,23,0
"mpusz/mp-units","2293bec95037138f2c22ffb850afacfb85aa5f11","mpusz","2022-09-02 15:09:58","false","docs: Info added on how to use CMake Presets on an older cmake version",30,47,1
"mpusz/mp-units","3ce9a5ba67a9fa980f5a58ccf5da383cebd59ee8","mpusz","2021-01-06 18:00:10","false","refactor: Not needed parnetheses removed",21,27,1
"mpusz/mp-units","842f2eaf2739c550dfb76121fa05fbc2fc6b285b","mpusz","2022-05-22 17:47:11","false","feat: `quantity` CTAD guide added",34,44,1
"mpusz/mp-units","5df447f91234c607c02224f76e8d6a5d27a19351","mpusz","2021-03-18 07:17:45","false","docs: usage updated",35,30,1
"mpusz/mp-units","4bb51586dcb3c23d20f16f933f01838d771a129d","mpusz","2020-09-08 11:09:34","false","refactor: got rid of gcc-9 backlog

BREAKING CHANGE: gcc-9.3 no longer supported",17,23,0
"mpusz/mp-units","622b3e3cbd21506d53fba4d97204fac6ab108aef","mpusz","2023-01-28 10:11:07","false","test: `unit_symbol()` tests moved to a dedicated separate test file",37,52,1
"mpusz/mp-units","9efa8b471104e98be797b3387645c3599eea06f8","mpusz","2020-11-05 16:51:04","false","docs: `conan build ..` added to usage",18,25,0
"mpusz/mp-units","c42b5c049874acdbbb2ef45ac0b97287f6bd5017","mpusz","2021-03-14 15:50:24","false","docs: `CMAKE_BUILD_TYPE` is not needed as CMakeToolchain will provide it anyway",32,29,1
"mpusz/mp-units","de4fefde3f93980fa00d980874922597aaba3f43","mpusz","2023-06-13 06:14:01","false","fix: `pow()` fixed for quantity specs and units",48,56,1
"mpusz/mp-units","f147da202e220bb6f3bc95ae7e97bcf405de8481","mpusz","2019-10-17 10:44:39","false","Multiply symbot in a printed unit changed to '⋅'",14,13,0
"mpusz/mp-units","9f1a42bc7ff987d6a6beb60bc183a0330557c277","mpusz","2023-08-24 17:19:55","false","refactor: `glide_computer` renamed to `glide_computer_lib`",9,59,1
"mpusz/mp-units","016984f1b325d18f266fb26afd903965a590d45d","mpusz","2022-12-27 11:20:23","false","feat: about half of IEC 80000 quantities support added",34,51,1
"mpusz/mp-units","04927107e6988c6c129a92b61ae37f9779df3b5b","mpusz","2020-11-05 14:06:11","true","Create codeql-analysis.yml",18,25,0
"mpusz/mp-units","74056fd6daa90a35959c54534c14554188f14148","mpusz","2022-04-24 20:57:34","false","build: `clang-tidy` is not ready yet to be officially enabled in the project",36,43,1
"mpusz/mp-units","70586138d9590076a3b46b12133956cf97dcfc41","mpusz","2022-03-31 19:48:47","true","Merge pull request #346 from JohelEGP/prime

refactor(bits): remove unused header in prime.h",35,42,1
"mpusz/mp-units","d6f9ae03081bcd94567cb93e8044d4ef087c3c4e","mpusz","2021-03-17 21:38:24","false","ci: Chocolatey caching removed

Relates to #256",34,30,1
"mpusz/mp-units","02f6f36aeb3bf79bcc9605446fbc078e34cb2db5","burnpanck","2022-12-31 11:45:55","false","one more attempt at fixing the MSVC failures",34,51,1
"mpusz/mp-units","7e4ab4206f7c693c40cdcc90ecae1e970621fd34","chiphogg","2022-02-06 21:53:05","false","Remove `.value`; provide free function only

This is a cleaner interface.

I also checked all of the commented-out test cases.",30,40,1
"mpusz/mp-units","af8eec11022230756896f430740eebf0237e6fb6","chiphogg","2022-04-09 17:41:08","false","Implement ""common Magnitude"" of two Magnitudes",35,42,1
"mpusz/mp-units","b616e5821646db2d8995b0fc95c41205754a9315","chiphogg","2022-04-06 01:40:17","false","Give up on implicit conversion

I don't understand what MSVC is complaining about, and it may end up
being easier to just make the conversion explicit.",35,42,1
"mpusz/mp-units","6a9dcb30def15d28b499c65c6dccca08a9be78ba","chiphogg","2022-07-07 19:00:38","false","Migrate explicit-`exp` inputs",35,45,1
"mpusz/mp-units","c805a9390f67543bc1d7d639dfa898248fbe8250","chiphogg","2022-04-12 00:40:42","false","Implement suggestion",35,42,1
"mpusz/mp-units","cc8fcb3d76d4753e7bad99375b9af7b364e28361","mpusz","2020-03-09 19:18:51","false","pip requirements set to the latest versions",15,17,0
"mpusz/mp-units","7c9e35dcd68e221cfc4e8181bf08c0fa9e4b647d","mpusz","2021-03-13 18:55:18","false","refactor: `explicit` usage unified accross the library",32,29,1
"mpusz/mp-units","5a72983c47ec78996945f0185ed9cf6e5d79a850","mpusz","2020-03-01 13:50:01","false","Removed an old TODO comment",14,17,0
"mpusz/mp-units","4be96e76a02402792deda02adfcf9d939b7b0506","mpusz","2021-04-29 18:14:01","false","ci: calling conanvcvars.bat fixed",32,31,1
"mpusz/mp-units","752408449f5749fb61ec0aa7eccd0a524735c8d0","mpusz","2023-08-18 16:35:41","false","feat: `PointOrigin` arithmetics support added",14,59,1
"mpusz/mp-units","37bb680aff95971e988085cd7941fbd0dcd7ef69","mpusz","2019-04-10 17:26:57","false","test_package fixed",2,6,0
"mpusz/mp-units","dad9b4f166b1764b1d21e357d8a681b6db897631","mpusz","2021-02-20 16:19:43","false","fix: user-provided CTAD guides fixed

Resolves #227",26,29,1
"mpusz/mp-units","73636cbb8e5822a311c4165d3db37b369b711676","mpusz","2020-09-06 13:36:04","false","Invalid test removed",16,23,0
"mpusz/mp-units","bbb5c248f0eb550005c87be02553c00fb2514a7d","mpusz","2021-04-01 07:37:44","false","docs: Broken links fixed",33,30,1
"mpusz/mp-units","ef862c9f6986be0b39da6094dbc6415cf4f72425","oschonrock","2020-02-22 11:27:29","false","include what we use and use system header syntax
don't show 10^0 when den != 0",14,17,0
"mpusz/mp-units","92b7a15d6f567854209dd2ab33cc15b04bb62caf","chiphogg","2022-01-08 19:04:19","false","(partial) Switch base_power to NTTP

Apparently, gcc-10 does not support floating point NTTPs, so we'll need
to reimagine the approach.",30,39,1
"mpusz/mp-units","7cda52af55502fb4ab337bdd154613ecde08f060","chiphogg","2022-03-01 02:30:13","false","Merge branch 'master' into chiphogg/intmax",31,41,1
"mpusz/mp-units","6872117bae6bf63de8ab86e89c3875f53675fa85","chiphogg","2022-03-19 17:35:20","false","Replace `reduce` with bespoke implementation

If _this_ isn't `constexpr` compatible, I'm going to propose removing
support for the MacOS clang build.",32,42,1
"mpusz/mp-units","c677264e44eef0b2698dfc196963bcfc13bd2422","Twon","2023-01-06 16:49:48","false","Syntax fix",35,51,1
"mpusz/mp-units","6f665b2074c492b47431a3fa4fc6aca7cc9de5af","mpusz","2022-05-11 17:33:29","false","style: `ci-conan` reformatted",34,43,1
"mpusz/mp-units","fddde2615707f099fc4cf6c213f2f98df800e00c","mpusz","2022-05-11 18:20:55","false","fix(example): clang-14 compilation fixed",34,43,1
"mpusz/mp-units","c1d23b41c1aad1ae479eab04c2a74d35bfbcffdb","mpusz","2022-09-01 08:47:36","false","refactor: `pi`-based magnitude renamed to `mag_pi`",30,47,1
"mpusz/mp-units","f4c89fc8a23e2648158d43cad83c00ba46d13a29","mpusz","2021-09-30 18:58:34","false","feat: Initial gitpod support",26,36,1
"mpusz/mp-units","dd7bc664c3e53133ba02803d0137f71b44fd5898","mpusz","2023-06-29 14:09:19","false","docs: `make_quantity` example added to ""Quick Start"" chapter",11,57,1
"mpusz/mp-units","fbf3ef8c4fe7aace836ec50ce25361183b620e13","mpusz","2019-12-12 12:17:31","false","Most of concepts moved to a new file + quantity.h split to smaller pieces",19,14,0
"mpusz/mp-units","7bcc97f77a880ecf781259821bb97c91f4fa6d84","mpusz","2020-09-13 15:07:12","false","docs: systems documentation reverted",14,23,0
"mpusz/mp-units","1899f7803f4d29bad4645a5a7569e0f2357379da","mpusz","2023-02-24 08:36:27","false","ci: GitHub workflows updated for Conan 2.0",44,53,1
"mpusz/mp-units","d0eceefe800b719d7b25fbb969ed26bc9ba84f5e","mpusz","2022-09-06 21:45:47","false","refactor: dead ratio code removed",30,47,1
"mpusz/mp-units","83edb46de831130471295198c2f555b970b74d04","mpusz","2019-11-10 18:51:25","false","coherent_derived_unit symbol synthetizing fixed",12,13,0
"mpusz/mp-units","657ad3c4f04f7c51236f9b29c63c13941a86a560","mpusz","2020-03-11 08:32:40","false","QUIET flag set for Doxygen",15,17,0
"mpusz/mp-units","f3bcdc4ad2981c9975b225787d07463e1609ca94","mpusz","2021-03-16 09:27:59","false","docs: Project's dependencies updated on the Usage page",31,30,1
"mpusz/mp-units","1f27646d4cf51ee23944357406e39abacab374bd","mpusz","2021-06-27 09:31:54","false","extended is_quantity<T> to support quantity-derived classes

N.B. inheritance is preferred to composition/delegate class to avoid duplication and also inherent the various required operators ('+','-',..., '+=', ...) for details see discussion #271",26,33,1
"mpusz/mp-units","8d1eb4c41595cc8ef7ab6d7af327c622b6737d1f","mpusz","2019-12-14 11:23:47","false","derived_dimension code split to a few smaller files",20,14,0
"mpusz/mp-units","8ca2b25349e6e5bc044ed10e7ea6ed0fcfb223ab","mpusz","2021-04-07 17:07:25","false","fix: torque literal fixed + experimental_angle example refactored",32,30,1
"mpusz/mp-units","7a730fde582d5ebe4092d11b58a3d823d8524e50","mpusz","2023-06-05 17:36:22","false","refactor: `constant_unit` abstraction removed and replaced with regular `named_unit`",48,56,1
"mpusz/mp-units","ee2abaf9f78e11d511a2b351ae2d2261a7eeaeec","mpusz","2023-06-13 06:18:19","false","test: `pow` and `sqrt` checks added for fractional exponent quantity",48,56,1
"mpusz/mp-units","80a13b1a945cab836d7060ac3fcad0df3fdf50cd","mpusz","2019-12-17 11:29:19","false","US system isolated from SI",18,15,0
"mpusz/mp-units","94e9b22caa6fea4bae956d2731bfb55795e77659","mpusz","2020-12-16 21:20:05","true","'.github/workflows/documentation.yml' added for the workflow",19,27,0
"mpusz/mp-units","bdf488db0430fd05a71bed06d514c9966db7e1f9","chiphogg","2022-01-12 00:34:57","false","Remove unnecessary forward declaration",30,39,1
"mpusz/mp-units","cb86cd2bcd8ea96f842142b1b98906fe21cf56dc","mpusz","2020-09-15 06:55:35","false","fix: regression in quantity::op<<() for the case of std::setw() fixed",16,23,0
"mpusz/mp-units","3d20dfef91f0656b2c2ff8c76b10be8cc63a4804","mpusz","2023-06-18 08:28:51","false","refactor: `unit_symbol_separator::dot` renamed to `half_high_dot`",14,57,1
"mpusz/mp-units","4ee09113ebe3399d78fff867371f106e6a99a78b","mpusz","2021-09-10 11:12:12","false","Merge branches 'master' and 'master' of https://github.com/mpusz/units",24,35,1
"mpusz/mp-units","3b67f6e746c69ad94eee3c5a5f2e85f027b4258d","mpusz","2023-03-31 07:36:39","false","ci: `promote_package` job now correctly checkouts the code",45,54,1
"mpusz/mp-units","e367afed71f506655a6cb5892357ecbe6e64ab97","mpusz","2020-09-09 18:31:03","false","Merge branch 'downcasting_2.0'",14,23,0
"mpusz/mp-units","943dba6562d24845e57838530efcaeff5924fe94","mpusz","2020-12-16 21:15:31","true","ci: CMake generator changed to Ninja",19,27,0
"mpusz/mp-units","0fc05850c867ea47ab3e6712a6eec98b45e261fd","mpusz","2022-12-23 15:27:12","false","refactor: trigonometric functions refactored for `isq::angular_measure`",34,51,1
"mpusz/mp-units","64a8b32b8f0d04c115f820024a1851d97305c780","mpusz","2020-05-13 11:11:07","false","Remaining examples added to documentation",16,19,0
"mpusz/mp-units","5781791a2848e8f189e64f9efc9d26490c764a87","mpusz","2021-04-14 18:20:47","false","refactor: `format_global_buffer()` added",32,30,1
"mpusz/mp-units","ddba9760eb51a9e1a910d1bfd988bf8f5cfce6f2","mpusz","2020-11-05 12:06:20","false","docs: ISO C++ standardization note updated",18,25,0
"mpusz/mp-units","5f7b285c8c75bc0c4ac835729b55d57d6891d683","mpusz","2021-10-14 13:14:40","false","build: `linear-algebra` Conan repo is no needed anymore",27,37,1
"mpusz/mp-units","590044b9f2e0e974b32530ba74cf80f86b008835","mpusz","2021-03-19 11:56:56","false","build: set `CXX` as a language for `test_package` CMake project",32,30,1
"mpusz/mp-units","2b760b5d4675c6eee3c58e9f64e76955ccc79ef1","mpusz","2022-12-20 16:29:31","false","refactor(example): kalman filter 1-5 examples refactored for V2",30,51,1
"mpusz/mp-units","4bcf2cd149f12c232967a333a2bf97c166ac64c0","mpusz","2023-10-15 09:51:45","false","docs: `gravitational_potential_energy` equation fixed on a graph",2,61,1
"mpusz/mp-units","a2b99d7ac636847c6a76f65167b7a0295bf1e9f4","mpusz","2020-12-23 20:10:42","false","ci: pure_c set to True for conan-package-tools",19,27,1
"mpusz/mp-units","b9802e5df1c322b4b25f32b01c51a5c1399f8114","mpusz","2023-06-30 16:27:10","false","fix: conversion between quantity points fixed",11,57,1
"mpusz/mp-units","125ecc56c82f269b79ce5575b54a9c8c905c73a0","mpusz","2019-04-07 06:33:13","false","units package renamed to mp-units/mp::units",2,6,0
"mpusz/mp-units","2c29af9670fb6a28cc96b5b1fbddbb35f64a4bf1","mpusz","2019-12-07 17:33:55","false","Custom unit and data tests enabled",18,14,0
"mpusz/mp-units","cacd3ae543b1718d9fa8004b8a23a9dc13e6189c","mpusz","2020-09-06 13:35:52","false","Non-zero denominator contract added for ratio",16,23,0
"mpusz/mp-units","139fd0b71869752e975eaf758244a7593f917716","mpusz","2020-12-23 20:37:04","false","ci: `if` branches fixed in a GitHub Actions",19,27,1
"mpusz/mp-units","f66703721634cf09f7ff2a79e54c3a45ad75aada","mpusz","2023-02-13 17:37:27","false","feat: associated quantities provided for units in various systems",43,52,1
"mpusz/mp-units","5251a8a2413d9b6416bfe97a500214963e46875d","mpusz","2021-03-23 18:42:08","false","fix: Unused `<functional>` header removed from `basic_concepts.h`",32,30,1
"mpusz/mp-units","d24363af98abd52cdfb041f414fe98a2ecedd479","mpusz","2020-09-10 09:26:41","false","Revert ""refactor: squared units use `*2` now instead of `sq_*` prefix""

This reverts commit dcc2d24c8ef4e488efa0634fb7f0e0d54dcec0c8.",15,23,0
"mpusz/mp-units","4abef7b245baa7ff34b166ae6fa9bfe08e94ede9","mpusz","2023-10-21 06:17:55","false","refactor: duplicated forward declaration of `quantity` removed",1,61,1
"mpusz/mp-units","326050cfee44c09ee621738e3f365fbf4f9585a1","mpusz","2020-12-28 16:40:29","false","docs: quantity_io.h described in docs",17,27,1
"mpusz/mp-units","008dec79ea367c188f5257cecf8ece32363790a5","mpusz","2020-12-28 13:34:27","false","refactor: si.h usage limited",17,27,1
"mpusz/mp-units","9125c1bf2e4dc531b62b6840e84cbed965ef861e","mpusz","2020-06-27 17:15:57","false","Merge branch 'master' of github.com:mpusz/units",20,21,0
"mpusz/mp-units","fb602a449731fcdd6734646c5446a4f95eb78fcd","chiphogg","2022-01-12 14:47:40","false","Try fixing ""unreachable code"" warning on MSVC 14.2

This doesn't show up on any other compiler, including MSVC 14.3, so I
think it's just a compiler bug.  Cursory googling suggests perhaps that
some older versions of MSVC have immature support for `if constexpr`.",30,39,1
"mpusz/mp-units","90a862e8acee63ec3d0a95ad9a71f19271e40932","mpusz","2023-10-18 15:40:33","false","docs: YouTube video link updated to the C++ on Sea 2023",1,61,1
"mpusz/mp-units","9d50534a1fd42efa305ffc9a44fbeb9a6cef6eef","mpusz","2019-05-08 21:10:06","false","Updated to cmcstl2/2019.04.26",2,7,0
"mpusz/mp-units","1068f7d182bf517781e4ef3c9540afd3b8804d87","JohelEGP","2021-03-18 17:40:49","false","refactor: use values rather than types for reference

Addresses https://github.com/mpusz/units/pull/261#discussion_r596661260.",35,30,1
"mpusz/mp-units","4c9c651a9ed0c6fd72ba6c6ca7b339b1aa1e1b07","sohamroy19","2021-10-13 21:50:52","false","Replace naked pragmas with defines",27,37,1
"mpusz/mp-units","3d5aed3969f97f1638358ccb1391999480351c58","RalphSteinhagen","2021-04-08 11:57:32","false","removed obsolete '#define UNITS_UDLS 1'",32,30,1
"mpusz/mp-units","e036d9bb558e47b73134ffd496c41d912edf073c","mpusz","2020-09-09 18:56:08","false","docs: downcast mode documentation added",14,23,0
"mpusz/mp-units","f2f1d030ff81d6af6a4ea43914e7ac6eeea50aa5","mpusz","2020-12-21 21:38:27","false","build: Conan toolchains support added",19,27,1
"mpusz/mp-units","1bcb1ea65325ca61ec5055768c3df01916f523b3","mpusz","2019-04-06 21:38:43","false","cmake/common updated",2,6,0
"mpusz/mp-units","58f21e7e1c825e285c5e06083c4bf88faa24b37b","mpusz","2021-04-16 17:03:30","false","docs: Quantity Construction Helpers chapter updated",32,31,1
"mpusz/mp-units","c46ea4460f27d8fad6f6f705e86aea6ddbb161c6","mpusz","2021-03-15 17:47:21","false","build: compiler warnings handling refactored for clang",32,29,1
"mpusz/mp-units","c4359d7ebdcfaee97a329fb25c41e5ff1223495b","mpusz","2020-11-05 11:16:48","false","ci: Path filtering applied to documentation workflow",19,25,0
"mpusz/mp-units","d820cfe6cf5899dde06ced6a9f447450b604f416","mpusz","2023-06-30 16:28:01","false","feat: `zero()` static member function added to `quantity_point`",11,57,1
"mpusz/mp-units","43f475fb80d0a3238e943374416ef0c0c28fdb70","rbrugo","2020-04-06 23:46:23","false","Added absorbed dose",13,18,0
"mpusz/mp-units","172fa74239d3c331e0b805e58f310da1792b9d40","mpusz","2020-02-12 08:50:07","false","gigaelectronvolt added",16,16,0
"mpusz/mp-units","c1cf800bd1937d2f97dffc0b6751b9aef4e8564a","mpusz","2021-05-09 12:43:32","false","build: PROGRAM, QUIET, and REQUIRED options added for `enable_iwyu()`",33,31,1
"mpusz/mp-units","05a307564a44e92a90f69bafd57f4c6420b8a218","mpusz","2023-08-25 20:16:40","false","refactor(example): gcc-11 ICE on the previous code",9,59,1
"mpusz/mp-units","c061b7ae95b433eda2ce1940250e96c9c041276d","mpusz","2021-09-30 23:34:15","false","chore: gcc-10 support added",26,36,1
"mpusz/mp-units","03e064fccd9b96cfa34509af2b4f2358b4861e3c","mpusz","2022-10-18 20:57:02","false","feat: `equivalent` support removed",30,49,1
"mpusz/mp-units","0180b34c84e09ca5513b8b38c4d04ce1272f0133","mpusz","2020-09-07 09:12:58","false","refactor: unknown_coherent_unit moved to the end of a unit.h",17,23,0
"mpusz/mp-units","35e6253fb863bd07d562ef5d8f417d988612ce17","mpusz","2021-02-18 19:17:10","false","refactor: UDLs switched to use `gsl_ExpectsAudit` (checks enabled only in a Debug build)",26,29,1
"mpusz/mp-units","dd39dd4f6e35fe6f8ca92929492c8eb91065322b","mpusz","2021-03-14 15:50:28","false","Merge branch 'master' of github.com:mpusz/units",32,29,1
"mpusz/mp-units","5a74cd66ba03752d7057c4f3b361c3ebae4e7d76","mpusz","2023-09-29 10:47:02","false","feat: interoperability with other libraries redesigned",2,60,1
"mpusz/mp-units","c1c07b697a7ff5870729d40cc7b318817238b9ce","mpusz","2020-03-10 18:10:54","false","Custom C++ highlighter added to Sphinx",15,17,0
"mpusz/mp-units","354447bb73358a01c07bd321831c40c9c56d9099","mpusz","2023-06-14 17:46:06","false","docs: 0.8.0 release date set in CHANGELOG",48,56,1
"mpusz/mp-units","8a6906fa3812988c8ad7e809f14479e97dfc1b47","mpusz","2019-04-10 17:51:39","false","Additional checks added to configure() method in conanfile",2,6,0
"mpusz/mp-units","46ed9b10c95ade992259a217f696f4ee171a4434","mpusz","2019-04-10 17:45:08","false","Appveyor support added",2,6,0
"mpusz/mp-units","eb1e06eb95525ee092f492abe44afd80dc2010f6","mpusz","2023-05-11 15:59:12","false","build: the remaining Conan dependencies added",48,55,1
"mpusz/mp-units","099927468074a6fc13d9437f86c0211781c1d109","mpusz","2023-09-30 02:34:46","false","Update src/core/include/mp-units/quantity_point.h

Co-authored-by: Johel Ernesto Guerrero Peña <johelegp@gmail.com>",2,60,1
"mpusz/mp-units","299032a7e8bcdb3491c88260afa25df8d8e1e469","mpusz","2023-05-24 20:42:11","false","refactor: conversion from `quantity` to `quantity_point` is now explicit",47,56,1
"mpusz/mp-units","bb5c02e09e91d76d0a809690656da75d92bdbb9f","mpusz","2022-08-01 08:03:55","false","fix: Quantity inversion operation fixed

Resolves #367",34,46,1
"mpusz/mp-units","bf3815a5ee02a400c20302ed395dcad1dcff0c77","mpusz","2020-12-23 21:28:46","false","test: Uniform distribution tests fixed",19,27,1
"mpusz/mp-units","febc95d3192973cbd126d0cdcdfbea59aa35933d","mpusz","2023-04-21 14:02:21","false","build: Library version set to 2.0.0",46,55,1
"mpusz/mp-units","c745bebffd26aa680b3ccb5ce1fc61e156e62855","mpusz","2020-02-24 14:15:46","false","type_list_join added",14,17,0
"mpusz/mp-units","d69e223b0c71980c9f3a7dd551e0bd60bdb8d082","mpusz","2022-11-08 02:14:02","false","refactor: `quantity_cast` on quantities refactored for V2",32,49,1
"mpusz/mp-units","caae7675d6b181bd1948678dd92822f9a98a8340","mpusz","2020-09-11 21:32:41","false","docs: documentation updated with recent changes",14,23,0
"mpusz/mp-units","71c4bc2761afcbd1faa5406541b36425b256c08b","mpusz","2020-06-19 17:37:52","false","Small quantity_point refactoring",17,21,0
"mpusz/mp-units","6bc54819f3e979608273ac01ccf07147481a81e0","mpusz","2022-09-15 17:49:37","false","fix: :boom: `standard_gravity` removed from `si2019` namespace as it is not an SI defining constant",30,47,1
"mpusz/mp-units","09457e9b8fbec0419ca81ae178b67226b9143360","mpusz","2019-04-05 15:49:59","false","Minor changes to README",2,6,0
"mpusz/mp-units","1b2d77af41b51f215a7d402c9c03eec263db8e29","mpusz","2023-01-28 10:00:50","false","feat: quantities of the same kind can now be added, subtracted, or compared to each other",37,52,1
"mpusz/mp-units","2e2259e6502f54839ded302720486d92d107ba18","mpusz","2020-09-14 11:33:54","false","docs: Conan windows support issue documentation added",15,23,0
"mpusz/mp-units","f69cc29cacb36dae2dd156136c1c2975b2275797","mpusz","2020-09-13 10:23:56","false","docs: conan stable package badge updated in README",14,23,0
"mpusz/mp-units","0682404c08e232bf819aa825ef5264c4c9ea3a59","mpusz","2019-03-07 20:23:50","false","Requirements section added to README",2,5,0
"mpusz/mp-units","e7bebac2a74eb6f1d7ac5627fc13378f67e19b64","mpusz","2022-10-23 08:47:12","false","feat: `power<Num, Den>()` support added for dimensions and units",30,49,1
"mpusz/mp-units","1a2c215578575cd1dfa2d32e46ceba370f02413b","mpusz","2022-09-09 09:46:08","false","refactor: derived dimensions now can be used in the equations but will not be visible in the final type",32,47,1
"mpusz/mp-units","e9387c4014f04708fff7bea2d083681c993b13f9","mpusz","2023-10-01 14:42:55","true","Merge pull request #495 from mpusz/interop

feat: interoperability with other libraries redesigned",1,60,1
"mpusz/mp-units","11c43e041240536d6942cdc3bf5e3737fb54b77c","mpusz","2022-08-10 07:47:33","false","build(example): Kalman examples 5 and 6 disabled for AppleClang

Resolves #382",35,46,1
"mpusz/mp-units","017e88ca28b8d8a91df6b8e8f83617cd3dfbf060","rbrugo","2020-04-07 22:20:37","false","Added heat capacity and specific heat capacity",13,18,0
"mpusz/mp-units","3cd77de2e9a41e25e87f5c2e9b35abe644ac8037","rbrugo","2020-04-05 17:18:28","false","Added conductance",13,18,0
"mpusz/mp-units","c88dc6904b5162b05a7fb72c551798a74d2dc469","rbrugo","2020-03-17 12:21:41","false","Reused `specs` field instead of `precision` and `type`",15,18,0
"mpusz/mp-units","746ac178e4adc8b733f8901a54ebe8e605dc01cc","JohelEGP","2020-08-18 02:23:11","false","docs: mention quantity_point where appropriate",18,22,0
"mpusz/mp-units","5f135d11bbc47180a039848021ae8b37b12b1dfb","JohelEGP","2021-02-21 20:59:13","false","fix: check requirement early",27,29,1
"mpusz/mp-units","270485e9b6466bd42bc5c75365b2a49036ad66f3","JohelEGP","2020-05-31 03:25:57","false","test: remove redundancy",17,20,0
"mpusz/mp-units","72046b0fe7dfc3572a9286aeaa4432d0109e1e9a","JohelEGP","2022-03-09 02:12:21","false","refactor: drop `static` from `constexpr` globals",31,41,1
"mpusz/mp-units","1280b7d4bea677ce04284bffacee1ec31f6c687b","oschonrock","2020-02-20 18:02:21","false","fix fmt test typos for accidental find/replace mistakes during 1m => 1q_m
changes",17,17,0
"mpusz/mp-units","15138286e5863a67b1853668e7978dee220e71e8","rbrugo","2020-04-07 22:36:44","false","Added thermal conductivity",13,18,0
"mpusz/mp-units","44cccfc743bde1810346bcd7263b9b7a96ce089c","chiphogg","2022-04-09 15:39:29","false","Address review comments",35,42,1
"mpusz/mp-units","7617e3c374277a2b3515313813833acf2c0ace2a","mpusz","2019-12-17 08:14:31","false","Installation documentation now used 0.5.0",20,15,0
"mpusz/mp-units","efc4ecf84a4366187f494f1e175561d0c48fbc9b","mpusz","2021-09-30 21:44:59","false","fix: It seems that CMake does not like when symlinks and real paths are mixed in configure step",26,36,1
"mpusz/mp-units","c33f6f2d5923887590af303eca886c201bbf1dc5","mpusz","2020-03-19 08:23:27","false","ostream width, align and fill added",15,18,0
"mpusz/mp-units","85403895304f30cd5a6e0e994a1e4810b52aa799","mpusz","2021-05-11 17:36:07","false","fix: `op%` fixed for the same argument types case",27,31,1
"mpusz/mp-units","e0263c554dd0056b64360abab738f95013d8d5e3","yasamoka","2020-03-26 08:29:32","false","added ASCII character validation; added ASCII-only superscripts, scientific notation, dot product",13,18,0
"mpusz/mp-units","7fb8b456bc2e087c87a73d6d3554748b38ec2525","JohelEGP","2020-09-08 02:25:35","false","refactor: simplify dimension_unit",17,23,0
"mpusz/mp-units","7fd6913b732d6226ff50f86a7a9269213465b611","chiphogg","2022-07-07 19:19:08","false","Replace `exp` with `0` everywhere, and remove it

This lets us remove a ton of special-casing throughout the codebase, and
just generally makes things a lot simpler.

We also remove the ability to take rational powers of `ratio`, including
`sqrt` and `cbrt` helpers, because these are intrinsically ill-defined.

Fixes #369.",35,45,1
"mpusz/mp-units","bc8632ee273811611ffd16c8b73b501c3e8ba3bc","JohelEGP","2020-09-09 22:35:43","false","fix: Prefix",14,23,0
"mpusz/mp-units","dee1055ecd8d7c9ee83da40b95d86ce22bb776ae","mpusz","2020-03-11 08:33:12","false","Data UDLs refactoring missed in README",15,17,0
"mpusz/mp-units","a0f85cadc9d6a4e560ca4d828b627313738a9cfc","mpusz","2020-11-04 20:57:05","false","build: GitHub CI updated",19,25,0
"mpusz/mp-units","9c8deb618738a97e7f33f0017f3051e0ab6042ba","mpusz","2021-04-07 17:09:00","false","refactor: capacitor_time_curve refactored for references",32,30,1
"mpusz/mp-units","42527d2bfb1e18e5be22b00fb736cc74223c24a0","mpusz","2023-09-10 12:17:34","false","fix(example): `measurement` now properly propagates `treat_as_floating_point`",4,59,1
"mpusz/mp-units","297b71efcfdda2d878dbc958932083ed5c0a2296","mpusz","2018-11-11 01:10:30","false","Concepts usage improved",2,1,0
"mpusz/mp-units","86b917781699f1538e08a45269b9bb1afc2bef7a","mpusz","2020-05-28 18:19:05","false","Specialize common_type to satisfy comparison concepts (resolves #113)",17,20,0
"mpusz/mp-units","cfc90f4aac3409d8ebc5cd84e73c052b1759477d","mpusz","2020-10-06 16:17:52","false","refactor: :boom: basic_concepts, `quantity` and `quantity_cast` refactored

BREAKING CHANGE:  ScalableNumber renamed to QuantityValue

Resolves #107",18,24,0
"mpusz/mp-units","829952132aa35d3089f7b26845a81ef8def9fb3f","mpusz","2021-03-19 08:16:48","false","ci: test_package fixed again",32,30,1
"mpusz/mp-units","5373826448cbc1eed7d91f68af6e58b3cce81688","mpusz","2020-12-21 20:34:07","false","build: Secrets are not available in GitHub Actions run after Pull Request",19,27,1
"mpusz/mp-units","f6c6ed6ae408f5c7cc9acc0fd186e24fabed28d9","mpusz","2020-05-17 10:07:09","false","Conan badge in README updated to 0.5.0/stable",15,20,0
"mpusz/mp-units","44b54c290d4ccbade8b679e88a580c0b56493045","mpusz","2020-09-06 10:36:49","false","test_package fixed",16,23,0
"mpusz/mp-units","b9dd6ab4407b6621c57f1a899be8287fbd2e8bd5","mpusz","2019-11-16 17:29:56","false","`my_value` compilation fixed",17,14,0
"mpusz/mp-units","80d869e13d79a9c8c5d2471c9d7f263c8a2903da","mpusz","2023-09-24 17:43:58","false","docs: workind in one of the comments fixed",2,60,1
"mpusz/mp-units","8d0b643bb3a5dcec64c1d71052231f977ca29ecd","mpusz","2022-05-11 09:10:15","false","refactor: :boom: !`named_derived_unit` removed as it was not used",34,43,1
"mpusz/mp-units","f462109aa3da1d596c7f457332e6cb184e798599","mpusz","2022-11-08 02:22:02","false","fix: `TYPENAME` added to dimension.h",32,49,1
"mpusz/mp-units","b864461636057cb3da72b09e6ab0068cfa883f57","mpusz","2019-10-18 13:34:46","false","Prefixed units support redesigned",14,13,0
"mpusz/mp-units","41995464f01652da3a9efe88565f92396e055d64","chiphogg","2022-01-08 23:13:48","false","Fix magnitude constraints

I got my requires expressions/clauses mixed up.

Unfortunately, this means we can't just shove all the ""implementation
details"" down to the bottom of the file.  Oh well.",30,39,1
"mpusz/mp-units","e9272ac1088d72001ce38d0585c1280add85452b","yasamoka","2020-03-24 04:59:25","false","added ASCII-only format output support",13,18,0
"mpusz/mp-units","4c9ada5f932d7c660ad047bc23901e13944e7fa7","hofbi","2022-03-27 14:06:18","false","check: use cmake format config file",33,42,1
"mpusz/mp-units","92ff1ecc07e43c322c531af1d495ff1ea2539cb4","mpusz","2023-05-12 10:29:48","false","fix: MSVC 14.3 complained about shadowing a symbol of second with local variable `s`",48,55,1
"mpusz/mp-units","d35e9e33b85e241084a1eca310fa12eba59082ad","mpusz","2023-01-14 20:12:40","true","Merge pull request #424 from chiphogg/chiphogg/badge

Fix badge image links",36,51,1
"mpusz/mp-units","9c436812f5336debf2bdda291993b8a149857c35","mpusz","2019-10-04 06:29:24","false","Documentation cleanup",14,12,0
"mpusz/mp-units","7a368ab3e44c6351415ee720f7c9c808a3449489","mpusz","2022-05-22 17:50:36","false","fix: `hyperfine_structure_transition_frequency` fixed to properly initialize `Rep` type",34,44,1
"mpusz/mp-units","cf7dab42c364b12497c3e5c1e9542d6d48128bc3","mpusz","2020-05-11 10:38:50","false","doxygen link resolution failure fixed",16,19,0
"mpusz/mp-units","accd113ad2c57a06df1cdb2049a06bd57cfad456","mpusz","2020-09-12 19:22:23","false","fix: got rid of terse syntax to make it work under MSVC",14,23,0
"mpusz/mp-units","2434bb86e07fec23f1e2fced35871990182774ba","mpusz","2019-04-09 21:09:21","false","conanfile fixed",2,6,0
"mpusz/mp-units","9bfe75ebf642c616792aad1c71529fb88d65aa97","mpusz","2022-10-22 19:05:14","false","feat: `harmonic_` concept enabled",30,49,1
"mpusz/mp-units","32779e01f0eb92470b41a7d569dd79608646c551","mpusz","2020-09-05 22:00:06","false","Build system refactored to be comatible with ConanCenter",16,23,0
"mpusz/mp-units","7c43d27a21c060f90bd0ea46293460f1a00ce6db","mpusz","2023-01-04 19:50:20","false","ci: there is no clang-12 on jammy",35,51,1
"mpusz/mp-units","024c5e8e9af74bcce799968de688c76703c96ddb","mpusz","2021-04-17 10:06:33","false","docs: Got rid of IWYU pragmas from `hello_units`",32,31,1
"mpusz/mp-units","730f4da1367c9c0698091e934c7783156973644e","mpusz","2023-08-01 20:07:24","false","test: various origins tests added for `quantity_point`",14,58,1
"mpusz/mp-units","6893ff4efcfba757d3a34e707ebd798a668d1812","mpusz","2019-09-30 07:06:42","false","common_type<my_value<T>, my_value<U>> used in a unit test refactored",11,12,0
"mpusz/mp-units","5dcfa7077ef772e4d0f70e937d65dc6d3ae75bde","mpusz","2022-07-26 08:02:15","false","docs: Dependencies chapter updated",35,46,1
"mpusz/mp-units","4ceb1de52ccfeb2bd3fa05bda667591af1511d83","mpusz","2020-11-05 14:45:21","false","ci: CodeQL fixed",18,25,0
"mpusz/mp-units","e19b9e93e9b61a63a03a554296c39d016dfced27","mpusz","2021-11-15 16:41:02","false","test: forgot to change the other preprocessor check as well",31,38,1
"mpusz/mp-units","9da39070ed00bfc60885b50ad244eae7742e9298","JohelEGP","2021-03-18 22:36:44","false","docs: update for reference<D, U>",34,30,1
"mpusz/mp-units","3801152dc725488737f8127b5f9642728a76d3e5","mpusz","2019-09-15 17:06:46","false","ratio metabench tests updated",4,11,0
"mpusz/mp-units","046669fedcd7a96380d99997b4e869c87c9734c5","mpusz","2019-10-18 19:24:16","false","gcc compilation error disabled (looks like a bug in a compiler)",14,13,0
"mpusz/mp-units","eaaee2e3056daafd63cd79a97275de5b6da5d013","mpusz","2022-12-19 19:44:18","false","refactor: `total_energy` example refactored for V2",30,51,1
"mpusz/mp-units","0807f1eca020a3b38e43c0153ab856224a7ea58a","mpusz","2023-03-05 08:16:23","false","ci: `conan remove -f` is no longer in Conan 2.0",44,53,1
"mpusz/mp-units","0765fb26a2801d5bf09a69a2fbae86e28b6b79f7","mpusz","2022-05-12 08:55:48","false","fix: MSVC complains that an address of NTTP is taken here",34,43,1
"mpusz/mp-units","3710b249f3e478537f200903d6f16aed94eca77e","mpusz","2022-06-16 17:02:22","true","Merge pull request #355 from chiphogg/chiphogg/switch-to-mag

Use Magnitude instead of ratio in unit implementations",34,44,1
"mpusz/mp-units","7da63eedfda836561302f992ff25485f2506d7b1","mpusz","2019-11-02 12:57:55","false","quantity refactoring",14,13,0
"mpusz/mp-units","0702a005a7b3c81bd97997c9a4371ef9799acb5e","mpusz","2020-12-21 23:28:35","false","Revert ""test: {fmt} dependency check added in test_package""

This reverts commit 310f344598c1e2c46303864390f05d0a4d7b3626.",19,27,1
"mpusz/mp-units","fbe2e686eb7c44df04f1ed2dc8ac70c840b4b673","hofbi","2022-03-22 17:34:05","false","check: enable cmake-format in pre-commit",32,42,1
"mpusz/mp-units","23a62531bd6be16fbbbeb14d5e719a2d0ffd68b8","hofbi","2022-05-12 12:00:10","false","add python import sort",34,43,1
"mpusz/mp-units","a6614cace2dc02dbb51fd592f2f7c30b40762dba","rbrugo","2020-04-07 16:45:15","false","Sorted si.h header",13,18,0
"mpusz/mp-units","36bee5a8c33f798b3dc7ffa51271eb853857a8e5","yasamoka","2020-03-26 22:19:56","false","fixed dot product symbol",12,18,0
"mpusz/mp-units","211ba6a5b314f120cf520be8a3f52fce23cba214","mpusz","2023-10-23 07:21:37","false","docs: a representation type in a dimensionless quantity FAQ fixed",1,61,1
"mpusz/mp-units","58e1eefd3b4a18fd3daeee31bb80fb3708998bdd","mpusz","2018-11-15 04:29:01","false","Inheritance hierarchy helpers for dimension and unit made more descriptive",2,2,0
"mpusz/mp-units","312dbf4f81b02e0b54b66cd12c85f63af61958a1","mpusz","2018-09-28 14:47:37","false","Units library moved to concepts world",0,0,0
"mpusz/mp-units","ef6f9374602bb8202f52273d45ef2b76f38991d6","chiphogg","2022-01-08 22:18:33","false","Clean up and reorder file",30,39,1
"mpusz/mp-units","28d8a7c4b183608719b3b1355b25d8e5f019d540","chiphogg","2022-08-10 23:38:50","false","Update documented prefixes",34,46,1
"mpusz/mp-units","71f38222ea190005e32c4f750cf31610b8444ed2","mpusz","2019-12-11 15:16:05","false","Implicit conversions fixed",19,14,0
"mpusz/mp-units","d534d2c62ed1f62f601b5976e66ce8baa49c8e86","mpusz","2020-12-29 15:33:52","false","docs: `one_rep` and Unit Constants documentation added",17,27,1
"mpusz/mp-units","a7711cb3017277725f075050e40956f1566b7ac8","mpusz","2023-08-27 18:19:26","false","refactor: `quantity::value()` refactored to `quantity::value_ref_in(U)`",9,59,1
"mpusz/mp-units","15833669d8e978a084964b16f45692e213e96bf2","rbrugo","2020-04-07 02:20:17","false","Fixed text formatting for current density in unit test",13,18,0
"mpusz/mp-units","c346ee123a8a8cc7134b43b77862d9586a772c84","burnpanck","2022-12-13 17:03:20","false","add missing throws in format.h; undo change to core.h",30,50,1
"mpusz/mp-units","4951e30fdd370daf05f553caa47c6c30eb418fc6","mpusz","2022-05-11 14:42:26","false","build: catch2 updated to 2.13.9",34,43,1
"mpusz/mp-units","6ba2362af98b07466ed361901e985b49eada1b07","kwikius","2020-01-10 04:50:10","false","example , clcpp_response : clean up comments",16,15,0
"mpusz/mp-units","42072cc7c574d4b5b0072f00fe14c846e0f62e56","hofbi","2022-05-12 11:58:32","false","apply python format",34,43,1
"mpusz/mp-units","596161cca57c138e0c2ffb9d343c25a990cc616d","rbrugo","2020-04-09 16:55:58","false","Added permittivity",13,18,0
"mpusz/mp-units","1cbab1c7b96ae17324740d0d7ed40e55de565a0c","rbrugo","2020-03-20 11:36:30","false","Unit tests now conform to the new grammar",14,18,0
"mpusz/mp-units","d551e089a902962e70687edebda874ea74eed20d","mikeford1","2020-06-24 09:50:11","false","added mil udl",18,21,0
"mpusz/mp-units","4c9a2c5c5ca61f8ac9e6e9196807cc284f1b4d2c","chiphogg","2022-01-28 19:52:35","false","Remove unsupported consteval

I had been using ""consteval plus exception"" as my way to get
""static_assert, but for parameters"".  Since consteval doesn't work, then
I can't _guarantee_ that the functions won't be called at runtime.
However, I still think throwing exceptions is better, because it will
cause the desired compiler errors on every configuration.  (`assert`
often gets compiled out.)

Very much open to suggestion here.",30,40,1
"mpusz/mp-units","efeacca9eed8e9e54556dbe4c0261352fe00c3ed","JohelEGP","2021-02-06 02:40:22","false","fix: restore user-warnings within the library implementation",27,28,1
"mpusz/mp-units","9a49df7222f22df308dfa1e6614932c729627af3","mpusz","2020-09-08 19:17:09","false","refactor: :boom: `Scalar` concept renamed to `ScalableNumber`

Resolves #114",15,23,0
"mpusz/mp-units","9a32c8bc2cf49593863e6a9ee4a7a3396f651fba","mpusz","2020-03-17 14:32:23","false","""See also"" note added to ""Library Directories Structure"" chapter",15,18,0
"mpusz/mp-units","e61bfafd298f0077d194a473d3b2bf489caac26c","mpusz","2022-12-22 20:28:03","false","fix: `consteval` replaced with `constexpr` for `quantity_spec::operator()`",34,51,1
"mpusz/mp-units","a9c190a7bf7be31895608fd6598e79ff8234da7d","mpusz","2022-12-27 11:51:28","false","test: iec80000 unit test added",34,51,1
"mpusz/mp-units","04a2e1672ffcc66f500d35cd1419cb89f7237650","mpusz","2021-03-15 21:21:25","false","ci: libc++-abi installation added",32,29,1
"mpusz/mp-units","2d51b2f2332681b2db19a9c3a7b633ede1c76739","mpusz","2020-09-11 16:12:07","false","fix: wrong integral type used for `exponent` values fixed",14,23,0
"mpusz/mp-units","878c99ad878627a4834f45eda7074979a744147c","mpusz","2020-11-04 17:27:51","false","build: GitHub Actions based CI added",19,25,0
"mpusz/mp-units","d4976caf1d9d510de903151506fc894ad33595c3","mpusz","2019-11-16 17:28:13","false","`operator-` constraints fixed",17,14,0
"mpusz/mp-units","5e36dd6167a931c2af795752c30f065245b53f28","mpusz","2022-09-08 19:08:06","false","fix: `expr_consolidate` fixed for two the same powers",32,47,1
"mpusz/mp-units","57993f1ef18004e373e4907634d8887a5c3f23c1","mpusz","2020-05-05 18:58:23","false","Unused readthedocs badge removed",15,19,0
"mpusz/mp-units","197d45d463885a6834eddb4adf2266057fe4968d","mpusz","2020-03-11 16:41:13","false","Sphinx RTD theme zipped",15,17,0
"mpusz/mp-units","f55eacfa8576071be91e4d490167502eeb55a25e","mpusz","2020-06-21 08:37:45","false","glide_computer example added",17,21,0
"mpusz/mp-units","c786ae1e47c5ae6d947f72cad3dedc43ae3256d9","Twon","2023-01-06 17:07:17","false","Whitespace fix",35,51,1
"mpusz/mp-units","774dd916868d86969fb6f8b6be7ab5e1e4618dea","fdischner","2022-01-24 03:44:53","false","Add tests for FPS cubic yard",30,40,1
"mpusz/mp-units","79f81bfe39ef1bd45cef4fdf13ebd9fea55d9e16","kwikius","2020-03-11 18:27:12","false","example, kalman filter : use constexpr std::array rather than std::vector for measurements and track,
to make it harder for compiler to complain about existence of first element.",15,17,0
"mpusz/mp-units","2384276ae0111aee252dbec5acc18d30607d88cc","chiphogg","2022-01-28 20:44:29","false","Only test pi if float is smaller than long double",30,40,1
"mpusz/mp-units","8d9680d2b4c96d8fbb6ad75b9843efd169e0f89d","mpusz","2020-05-08 20:57:01","false","si_length group removed from systems.rst",15,19,0
"mpusz/mp-units","21f3041bfb6729c674bfbd4c45e107728279f9e2","mpusz","2020-02-20 20:16:33","false","Runtime test execution added to Conan",16,17,0
"mpusz/mp-units","82b18fc44cd171fa8cdf77e4ba6e4e6403a791d4","mpusz","2023-05-02 19:39:25","false","feat: `is_kind` support added to `quantity_spec` definition",46,55,1
"mpusz/mp-units","7a9800a8fa45539c21bcac141723e08a28477555","mpusz","2023-06-15 08:26:37","false","build: `fmt` updated to `10.0.0`",15,56,1
"mpusz/mp-units","0ad78fe7532892cf4c596defcfcfefa75e685570","oschonrock","2019-12-28 10:37:18","false","small changes based on code review",17,15,0
"mpusz/mp-units","58106618ac04fd84ae8b37fb145be13213f0c75b","mpusz","2019-09-19 00:34:54","false","ratio_pow and ratio_sqrt fixed + unit tests added",4,12,0
"mpusz/mp-units","e2a2076c8da201e97cd769ec14054bd4326847a9","mpusz","2022-12-23 17:01:51","false","style: quantity header cleanup",34,51,1
"mpusz/mp-units","30532ca4e8a3e73ecdeaa5d95c3ae7c4008f1a72","mpusz","2021-03-19 08:30:24","false","ci: another trial to fix test_package",32,30,1
"mpusz/mp-units","c351b81dd4f3b08c71cb249c603529f826e31bd6","mpusz","2020-08-17 19:58:27","false","doxygen updated to 1.8.18",18,22,0
"mpusz/mp-units","5bd7852ae569daf34e5d70fdcd57a433f7368f40","mpusz","2021-10-15 15:43:58","false","build: `UNITS_USE_LIBFMT` support improved",28,37,1
"mpusz/mp-units","ec1dace1f9b69911a7515d90ba5d269aa49f14c9","mpusz","2022-10-19 11:15:02","false","feat: `PrefixableUnit` concept introduced",31,49,1
"mpusz/mp-units","5ee4c5346a98fe501306a9cdb93b4178f79585ae","mpusz","2023-08-30 16:22:30","false","test: test_tools.h file cleanup",8,59,1
"mpusz/mp-units","0d3740cc87cf1917df39b03a8a681d8965c481bd","mpusz","2021-02-26 13:25:01","false","refactor: `earth_radius` moved to cpp file",30,29,1
"mpusz/mp-units","af996aaed31d004e5e59eebdd71286bc34530c3b","mpusz","2020-08-17 19:56:58","false","catch2 updated to 2.13.0",18,22,0
"mpusz/mp-units","17036cb2d08a292a59a889ab04eccbbaa6850494","mpusz","2022-10-22 17:27:39","false","feat: unit symbol text output support added",30,49,1
"mpusz/mp-units","6d11e72fc951f518e23400a6d3e98d1785968671","mpusz","2021-03-19 07:45:40","false","ci: test_package extended for different compilers and OSes",32,30,1
"mpusz/mp-units","1f2e57a5752d556f64b7390aca7410f83e26362e","mpusz","2023-02-09 05:14:17","false","refactor: `interconvertible` renamed to `convertible_to`",43,52,1
"mpusz/mp-units","52ce2b21f78c2dba443a6d934cbd8f1d667454d3","mpusz","2023-06-23 13:03:04","false","refactor: `iostream.h` renamed to `ostream.h`",14,57,1
"mpusz/mp-units","781e331ff0a613af199606d6e37f99a120a9b121","mpusz","2020-03-24 22:29:47","false","See Also note in conversion in casting chapter updated",13,18,0
"mpusz/mp-units","01755d66ce69c0c02a7a8a78e90cb1735e3ad34d","mpusz","2023-05-16 12:05:01","false","fix: forgot to commit a constructor for dimensionless quantities",48,55,1
"mpusz/mp-units","642663a6764dc9be7f3b1c2fb2e2a021f10934c5","chiphogg","2022-08-04 18:29:44","false","Merge branch 'master' into chiphogg/docs",35,46,1
"mpusz/mp-units","ec9d2445ff475fc7ce251f008fe17098dbd2a4cd","uilianries","2019-11-20 19:41:09","false","Revert cmake file from SRC folder

Signed-off-by: Uilian Ries <uilianries@gmail.com>",17,14,0
"mpusz/mp-units","fea072aeb5ec95f706c5a62e1b5cb67281e764c8","mpusz","2020-05-29 08:07:01","false","warnings.cmake refactored",16,20,0
"mpusz/mp-units","065323c7d78233e2b3d6ed1735dbd75e018d7b8f","kwikius","2020-02-22 11:56:18","false","1d aircraft α-β filter ( kalman filter tutorial  from https://www.kalmanfilter.net/alphabeta.html#ex2 ) converted to mpusz/units",14,17,0
"mpusz/mp-units","fa27e0c175f78dec5802f5547ee2ee63352ccf36","mpusz","2021-03-16 09:16:09","false","ci: Conan config fixed again",31,30,1
"mpusz/mp-units","ec21cfc734234a0182781d9344c2d7274d89c24e","mpusz","2020-05-14 09:49:01","false","Systems documentation added",16,19,0
"mpusz/mp-units","f94a7b92ea42c3af726b546ff79e6a30d50e46b8","mpusz","2019-04-05 15:46:01","false","GSL preconditions added (to be replaced with C++20 Contracts)",2,6,0
"mpusz/mp-units","a8a77ff4ae1dff5f548251bd657434cdd7f20858","mpusz","2023-06-23 17:14:44","false","docs: documentation style changed to a wider format",14,57,1
"mpusz/mp-units","46f1a00f4b0fc217cc71c3ac3557ecaeb57369a2","mpusz","2023-06-12 09:10:46","false","Revert ""test: `custom_rep_test_min_expl` updated for V2""

This reverts commit 2b2f381ad5482d70f93e26141c0db52722b46568.",48,56,1
"mpusz/mp-units","d53a5337f3f78b23111dc5bbca99a099a81b26ce","mpusz","2020-02-24 18:16:28","false","Total energy example extended with Natural Units",14,17,0
"mpusz/mp-units","af0c8c1cdf7780e1c053f15171366e9ebecd1a78","mpusz","2019-10-05 05:30:32","false","Appveyor CI disabled",13,12,0
"mpusz/mp-units","01e1040d5baa63e26f8acd8534c3b5f8e648874e","mpusz","2020-09-08 16:43:19","false","docs: CHANGELOG updated",15,23,0
"mpusz/mp-units","ffd3af42d25c5f2359cad4aaa68af22a2d4ff374","mpusz","2020-05-05 19:26:30","false","Standard vs Unicode formatting unit tests refactored",15,19,0
"mpusz/mp-units","b2f33c6dfa85d70372cf9945e82ce65220b3d133","mpusz","2019-10-18 22:08:25","false","Example and test package code changed to use text formatting",14,13,0
"mpusz/mp-units","8a35dcc73fcd5483e6be6be7575096a28576ebf9","mpusz","2022-08-02 15:17:51","false","ci: CI scripts updated to use Conan configuration properties",34,46,1
"mpusz/mp-units","fa5419b7920ef0bf90f564b58bcb4a350a55581e","mpusz","2023-10-04 16:14:57","false","fix: unused parametrs identifiers removed",1,60,1
"mpusz/mp-units","5668257fe1db6cc0722024a9948d475432f8dbe0","mpusz","2022-02-28 18:23:34","false","build: Conan geerated target renamed to `wg21_linear_algebra`",31,41,1
"mpusz/mp-units","5d23567bec3a576790a6f26cfc0bb600fd5d8c0c","mpusz","2022-09-15 18:00:13","false","feat(example): `experimental_angle` example replaced",30,47,1
"mpusz/mp-units","531c3bab7a76cb318e3701652acd07ff0eab0c24","mpusz","2020-09-09 18:55:36","false","build: conanfile downcasting definitions fixed",14,23,0
"mpusz/mp-units","9923e76a7fea51a4bed5a542cf5ae2d578122b61","mpusz","2021-02-16 18:19:44","false","docs: kind.rst renamed to kinds.rst",27,29,1
"mpusz/mp-units","1957e4424c603bd6a59dc0fb0ddacd83bddcf931","mpusz","2022-08-03 15:09:15","false","docs: TODO comments cleanup in mixed system unit test files",34,46,1
"mpusz/mp-units","043410d2f8dbec33a9fb25bdecee6200e08421ca","mpusz","2022-12-20 10:20:47","false","feat: ISQ quantity names conflicts resolved with inline namespaces",30,51,1
"mpusz/mp-units","07687f9ef61690615fa6734db1155531b9b13a0d","mpusz","2022-12-25 16:14:54","false","refactor: _generic/dimensionless.h_ removed (units added to _unit.h_)",34,51,1
"mpusz/mp-units","8740857a47a8f61d5ca861e1c16140bf4b5f70f9","mpusz","2021-09-16 18:24:27","false","build: fmt updated to 8.0.1",24,35,1
"mpusz/mp-units","6193854f313febef65fc71d953ec60b5f3671dff","mpusz","2022-03-10 18:29:23","true","Merge pull request #333 from chiphogg/chiphogg/intmax

Use intmax for base of integral powers",31,41,1
"mpusz/mp-units","f96d61b7698a5ecd41d4a91d29b24a9ca177405c","mpusz","2021-03-16 09:13:17","false","ci: Configure Conan step fixed",31,30,1
"mpusz/mp-units","858b1e625b352a62d4f54fbafcec2e87b1d416f3","mpusz","2023-02-13 18:38:33","false","test: tests for new features added to references test",43,52,1
"mpusz/mp-units","f74da4335b264beadb2f3cd937ba84abc6f9cb66","mpusz","2023-09-13 16:28:49","false","refactor: `quantity_point::q_` renamed to `quantity_from_origin_`",3,59,1
"mpusz/mp-units","707b39f0c442513764317f7a0c1b84ae49b14db8","mpusz","2022-09-01 14:19:51","false","build: catch2 updated to 3.1.0",30,47,1
"mpusz/mp-units","de15e21ee5537f10caa8011b82b82082c9d5391d","mpusz","2019-09-18 16:31:58","false","Version updated to 0.4.0",4,12,0
"mpusz/mp-units","257d86185ac1c437191307eb0104b68ee52f24f6","mpusz","2020-05-09 11:12:35","false","Compilation Errors chapter added to FAQ",18,19,0
"mpusz/mp-units","f5e6d052ad0174b6bcbcac4942636aa608964be9","mpusz","2022-06-09 11:50:41","false","fix: MSVC compilation error workaround",34,44,1
"mpusz/mp-units","6635ea95a442d60111b5c6fd16a18155d7c631ed","mpusz","2023-08-26 18:27:26","false","ci: use gcc-11 for CodeQL analysis",9,59,1
"mpusz/mp-units","237640cad8e0ae883b2ceabc1c9f6e7c57ebcc45","mpusz","2023-04-21 13:49:51","false","refactor: `ratio` refactored to use `conteval` + _ratio_maths.h_ removed",46,55,1
"mpusz/mp-units","fe998e1eab82cba9585e1740868b4ef5b64b0727","oschonrock","2020-02-23 15:37:32","false","better sqrt_impl
MUCH bigger range (although still not quitre max -- see comments)
no recursion
make this example possible: https://godbolt.org/z/tDFkfR",13,17,0
"mpusz/mp-units","8fccfd2d68f6a69726bb5e0ed2c61d312d94d951","mpusz","2021-10-20 07:49:23","false","docs: quantity arithmetics moved to a separate chapter",27,37,1
"mpusz/mp-units","8a87061c3a28780f4ddb55321b162a771c5fcbb5","mpusz","2022-09-02 18:09:50","false","docs: Angular Units chapter added",30,47,1
"mpusz/mp-units","a01c811f5f885a925d1e6865751fef56f7dc82d9","mpusz","2020-01-09 09:03:41","false","Square and cubic UDLs renamed",17,15,0
"mpusz/mp-units","ec4221d4a6b8eef7a03f77ae09986c6c9927f9e0","mpusz","2020-11-05 08:02:53","false","docs: Ninja installation removed + docs generation fixed",19,25,0
"mpusz/mp-units","134f137a2fe59a9e56ea7180468eb1b98b0e6096","mpusz","2019-04-10 16:19:55","false","cppstd support added",2,6,0
"mpusz/mp-units","6b4220100fd2a4ed7826468f3655ab317d9d0afa","mpusz","2019-12-08 15:24:29","false","quantity_cast refactored

- new version with ToD added
- <ToU, Rep> version removed",18,14,0
"mpusz/mp-units","813403c8f0b37d82ebf1ae5bf8704e541f0e133a","mpusz","2021-03-19 07:41:11","false","build: `range-v3` dependency fixed",32,30,1
"mpusz/mp-units","c2cae80914fda6de8e585ac5f52cb02611869574","mpusz","2021-05-04 08:56:31","false","build: :boom: Linear Algebra is now hosted on its [Artifactory](https://api.bintray.com/conan/twonington/public-conan)",32,31,1
"mpusz/mp-units","bd5a476babaaa8ad03aedccae2f36dbf249b2005","mpusz","2022-05-11 20:52:03","false","fix: `pow<>` requires a `ratio` as a template argument

Thank you @Nostracodus and @TartanLlama!",34,43,1
"mpusz/mp-units","3d2c613dcbb9bf18fe2dafdc8872747ebdd80ffd","mpusz","2019-11-16 17:29:32","false","`quantity` operators `*` and `/` constrains weaken to one `magma`",17,14,0
"mpusz/mp-units","a6284aa2937008f16f2447db9c9c851750f98416","mpusz","2023-09-13 08:43:08","false","refactor: some `value_cast<U>(q)` replaced with `q.force_in(U)`",3,59,1
"mpusz/mp-units","26474375a9f0720caae6d92c219f4bc6c389a9ac","RalphSteinhagen","2021-08-28 06:47:53","true","Merge branch 'mpusz:master' into master",24,35,1
"mpusz/mp-units","1bc6fdece9c0139d9beeaa2f99baa8c7fe643e93","mpusz","2023-08-24 17:21:17","false","fix: clang compilation workarounds added for magnitudes",9,59,1
"mpusz/mp-units","a6434e6b602b3ca05103848ccc94da04cf850ac9","mpusz","2023-06-05 09:12:34","false","test: some checks from the old `v2_framework` example moved to proper unit tests",48,56,1
"mpusz/mp-units","5cb6d9309994155225ba95a536443e3048638ab7","mpusz","2020-06-29 18:31:47","false","Merge branch 'master' of github.com:mpusz/units",19,21,0
"mpusz/mp-units","70a90b4ae07d5dab739f773bf6c4cac05338eb39","mpusz","2019-09-10 16:59:23","false","config.h support removed as it causes issues with compiler-explorer",4,11,0
"mpusz/mp-units","059c4f4eea779d367337477cc1029f7241055c77","mpusz","2023-08-15 09:17:52","false","fix: `quantity` construction from `std::chrono` types fixed",14,58,1
"mpusz/mp-units","b44a683678e6a5cb9d169aff71793ab926235c13","mpusz","2021-09-17 06:44:30","false","ci: gcc-11 support added to `CMake Test Package CI`",24,35,1
"mpusz/mp-units","ccb06bc0c4685f473df3643e97bc0f44cb8aec2e","mpusz","2023-04-10 16:17:34","false","fix: CTAD from raw value restored for quantity_point of `dimensionless[one]`",46,54,1
"mpusz/mp-units","1c857868bb562faaca6934791ff4878c9c9fdde3","mpusz","2020-01-14 11:23:06","false","Some length unit fixed + whitespace cleanup",16,15,0
"mpusz/mp-units","571bf47b95d85245ece42ee784d85f503686b76d","mpusz","2023-08-01 10:01:12","false","test: `quantity_test` cleanup",13,58,1
"mpusz/mp-units","507d5bc446dc0921e6b77a96f33c9f9d895c7182","mpusz","2023-09-10 12:17:59","false","fix(unit test): `vector<T>` now properly propagates `treat_as_floating_point`",4,59,1
"mpusz/mp-units","14d18a9d3ad1ed56f73f890b406cf69420c32c7b","mpusz","2023-08-31 17:00:35","false","style: order of operators changed",9,59,1
"mpusz/mp-units","0caf998df13c3bde5fd2ca8cc10bb50f978a25bb","mpusz","2022-12-22 20:28:49","false","refactor: `reference::operator()` return type constraints improved",34,51,1
"mpusz/mp-units","c00d98d6e1be95c4f34dae15ff62de3cb843d457","mpusz","2020-09-14 08:22:46","false","build: disabled `-qq` for apt-get in build.py",14,23,0
"mpusz/mp-units","4dfed87010224470ee7d3052c206abbf1081f31e","mpusz","2023-05-11 16:01:12","false","docs: some typos fixed",48,55,1
"mpusz/mp-units","a8508f124c9d50921499a4b1606137bfd06d1931","mpusz","2020-06-16 17:36:49","false","New deduced units and FPS system documentation added",18,20,0
"mpusz/mp-units","f70d6d0be17dbb0181a6a3aa7eb5302421a10e6a","mpusz","2020-05-10 07:43:06","false","Common CMake tools updated",17,19,0
"mpusz/mp-units","852c6e90fb2c74614202acb4591764a0163c5b88","yasamoka","2020-03-27 00:48:55","false","added [[maybe_unused]] attribute to char parameter in ASCII validation function to allow release builds to compile",12,18,0
"mpusz/mp-units","46761ea2f7fcc93376d28d780a51ab65789f226b","JohelEGP","2020-09-05 23:58:22","false","refactor: *_instantation_of to *_specialization_of",16,23,0
"mpusz/mp-units","fb88a441c973f74e61a06271891a3f1752d2d6c9","JohelEGP","2020-05-31 18:48:45","false","fix(gcc9): wrong use of Concepts TS terse syntax",17,20,0
"mpusz/mp-units","4e74617e2a9394e83188b4bed23b81645939e897","mpusz","2018-10-19 11:02:58","false","Number concept used for representation",0,1,0
"mpusz/mp-units","df2616927d88c8ef66cf712176b77da7a8369db2","mpusz","2023-10-20 19:21:07","false","refactor: `quantity` operators refactored",1,61,1
"mpusz/mp-units","dc85dd84b99fbd0b63d2277ef6fda3ade505987d","jansende","2019-09-29 22:07:16","false","Made quantity_cast more versatile

- One can now change the unit type without changing the representation type.
- One can now change the representation type without changing the unit type.
- Had to implement std::common_type<my_value, my_value> to still compile
  integration tests. (It implicitly converted to another representation
  before.)",11,12,0
"mpusz/mp-units","6bf09aa646502ab268d17125d517e2045fb05cc9","JohelEGP","2021-01-04 22:36:26","false","feat: quantity_kind and quantity_point_kind",22,27,1
"mpusz/mp-units","1a3e29ebbbff7c2184aaa6f07680f997e8340f8c","mpusz","2023-01-04 19:47:29","false","docs: trailing whitespace removed from glossary docs",35,51,1
"mpusz/mp-units","2198c8a4035d7e393d91d596fc6d4379f809a017","mpusz","2022-03-10 20:43:04","true","Merge pull request #334 from JohelEGP/ratio_maths_unused_header

refactor(bits): remove unused header",31,41,1
"mpusz/mp-units","cacbea1d4c719c1a9e62a8aa10be8d8f3d8d0172","mikeford1","2020-06-29 15:01:40","false","corrected copy-paste error in mole definition",19,21,0
"mpusz/mp-units","ef1451daf5864b1f9f60345e5f2ba303cbe51b35","mpusz","2023-08-26 18:50:17","false","docs: typo fixed",9,59,1
"mpusz/mp-units","09e118380cb1646b64676df7f1920496b92832c3","mpusz","2019-12-28 18:22:27","false","Electronvolt and dalton support added",16,15,0
"mpusz/mp-units","32a65a74059ca2059d7b1d38782ce0226b1d488c","mpusz","2019-09-18 12:36:52","false","Support for derived dimensions in exp added",4,11,0
"mpusz/mp-units","4d965d7f4733952ceb8d8e8ffd4972609304e09f","mpusz","2021-02-15 14:01:56","false","fix: :boom: `dim_torque` now properly divides by an angle (instead of multiply) + default unit name change

Resolves #220",29,29,1
"mpusz/mp-units","c3b9d5ececb948459371fd0728ede2e72eaba9d6","mpusz","2021-04-29 06:35:58","false","build: conanfile.py modernized",32,31,1
"mpusz/mp-units","89c8c58073d9959f50279bab28207c8f8d2b8406","mpusz","2020-03-26 16:09:26","false","Chapter titles casing unified",13,18,0
"mpusz/mp-units","2c8c6c2e98485a07b2fb2f6df4de2a2511c994c6","mpusz","2021-05-09 13:52:20","false","refactor: quantity cration helpers are not opt-out rather than opt-in

Resolves #277",34,31,1
"mpusz/mp-units","66fc90655885b0f1acba931f222ac56bac37da26","mpusz","2021-11-04 10:17:22","false","docs: `CITATION.cff` file added",30,37,1
"mpusz/mp-units","3750fa63f2e634d718672e25d81de979ba124d33","mpusz","2023-03-30 11:57:21","false","ci: `promote_package` job condition issue workaround",44,54,1
"mpusz/mp-units","9bebf316a77f2e85d7607f0ee61eace259a32803","mpusz","2019-12-11 07:27:12","false","gcc-9.1 build fixed",18,14,0
"mpusz/mp-units","0f4b23f0ac2710d361e45254f2d4842e92ab92bc","mpusz","2023-06-22 18:41:55","false","docs: more stub pages added",14,57,1
"mpusz/mp-units","24fd9777c7b8305715f9eebd206ed9fa51dd69d2","mpusz","2020-12-24 10:07:38","false","ci: Branch fixed",19,27,1
"mpusz/mp-units","1cb9d35d66ae23e84de1d6f784b5e17271df2843","mpusz","2022-09-01 09:27:56","false","fix: `radian_per_second` unit symbol fixed",30,47,1
"mpusz/mp-units","7ee0e3ff90c515daf59dc13f608e6c0802e70755","mpusz","2021-03-16 22:02:43","false","docs: ISQ systems reference fixed",32,30,1
"mpusz/mp-units","7ed4f19ef3a924d3ffd4bcc73ac84f8aef8ce6b1","mpusz","2020-09-08 09:10:33","false","refactor: :recycle: `exp_*` operations on exponents renamed to `exponent_*",17,23,0
"mpusz/mp-units","518c52cda15dbef63dd0712a26c9cce8a3fa92e2","mpusz","2020-02-02 14:37:51","false","Base unit for SI mass fixed",18,16,0
"mpusz/mp-units","9a96235e6c0606319fb970ce555e0ed164a08891","mpusz","2019-11-10 16:55:16","false","Synthesizing unit symbols in deduced_derived_unit support added (resolves #13)",13,13,0
"mpusz/mp-units","6a17eec09c79be222ca342195dbd5e7053cf3de9","mpusz","2023-06-21 09:21:59","false","ci: fetching the `gh-pages` branch added to the documentation GitHub Action",14,57,1
"mpusz/mp-units","ba6c3788978b1f7044568c5737bd60d0018ab5e5","fdischner","2022-01-27 00:16:05","false","refactor: use libc++ version to determine range-v3 use

Allows using AppleClang where __clang_major__ does not match the
llvm/libc++ version.",30,40,1
"mpusz/mp-units","b88843f6b212bb6a784ccb9f142d274c4e1bdbb0","mpusz","2022-12-19 14:26:40","true","include headers twice to check for header guards",30,51,1
"mpusz/mp-units","6531d188d1cc4231ade091b50819bdce671bcb86","mpusz","2022-03-18 07:20:43","true","Update src/core/include/units/quantity.h

Co-authored-by: Johel Ernesto Guerrero Peña <johelegp@gmail.com>",31,42,1
"mpusz/mp-units","b7628a17521e59b8be7d38b8796e61656a7ced3f","mpusz","2023-02-14 11:28:34","false","feat: initial version of quantity_spec conversions implemented",43,52,1
"mpusz/mp-units","8dcdc7bdacca24e8e7451f3196b692fc1ed7e181","mpusz","2022-10-23 20:19:44","false","fix: printing of symbols with fractional powers fixed",31,49,1
"mpusz/mp-units","3b22826a7956a18f12d8d1a5f46dcb87c9dd042f","mpusz","2020-05-09 11:12:39","false","Merge branch 'master' of github.com:mpusz/units",18,19,0
"mpusz/mp-units","26ec17ceb24f6b3c85176f1cceb78e019ff6b159","mpusz","2022-12-27 09:56:13","false","refactor: `experimental_angle` example renamed to `strong_angular_quantities` + cotes angle fix",34,51,1
"mpusz/mp-units","18620044c55ab45de465e6bb063a8d4cf066a4a1","mpusz","2020-02-17 14:56:06","false","All UDLs are now prefixed with `q_`",16,17,0
"mpusz/mp-units","9d41fb33ef90ed03005c1947ada0f4543feda485","mpusz","2023-06-08 15:34:19","false","fix: `RepSafeConstructibleFrom` argument value category fixed",48,56,1
"mpusz/mp-units","08ceb4c8db48a677b09476cfed5a5a048ed6f2dd","hofbi","2022-05-12 11:58:16","false","add python formatter",34,43,1
"mpusz/mp-units","23d44c1b4a372dee70b6ad06858ab7d600a084a9","oschonrock","2019-12-28 13:12:39","false","implementing our own (very limited) std::pow functions
integer and float treated separately
perhaps not ideal, but not obvioius what would be clearly better",17,15,0
"mpusz/mp-units","dcfd7a5a6274f95a1317797eb581f3d1b92464c7","mpusz","2022-12-19 19:46:21","false","docs: `degree_Celsius` confirmed to not have SI prefixes",30,51,1
"mpusz/mp-units","4705382c17d08cdd05770f081f4a2cbb299f955e","mpusz","2023-08-26 17:43:09","false","test: a few checks trigger a bug in clang so they were disabled from compilation on this compiler",9,59,1
"mpusz/mp-units","1a5f22f5c85eaad105f27e07cb0eedc6161aeb99","mpusz","2023-05-30 10:04:32","false","test: concepts test added",48,56,1
"mpusz/mp-units","2b5eb30cd4af30186e21ed6cccde7e6208a4ce4e","mpusz","2019-11-14 09:53:32","false","P1813 compilation errors fixed",16,14,0
"mpusz/mp-units","1d822d0ea4294cdb2447ef0472b4263e9df65c35","mpusz","2023-08-15 09:21:07","false","test: `relative_point_origin` construction simplified",14,58,1
"mpusz/mp-units","331024a1996763207fc7e70c791d3164d9bfc573","mpusz","2021-11-11 06:45:46","false","refactor: simplified formatting of `latitude` and `longitude`",31,37,1
"mpusz/mp-units","625f452daaaf39fd6177e98890058db4556e5cc2","mpusz","2021-03-15 20:11:26","false","build: libc++ support added",32,29,1
"mpusz/mp-units","56679498b7b463e0362ce665aeacee996caf21e4","mpusz","2019-09-30 09:29:45","false","Conflict between conan and conan_package_tools python packages resolved",11,12,0
"mpusz/mp-units","e622529fd99fa0cc6d5a107b3f55e848afb54803","mpusz","2020-05-11 10:06:37","false","Deployment preparation removed for gcc-9",16,19,0
"mpusz/mp-units","909d9a7089db8ac59edc2ca2d2e0f65d77021bb0","mpusz","2023-10-17 06:59:25","false","feat: `basic_fixed_string(const CharT*, std::integral_constant<std::size_t, N>)` constructor added",1,61,1
"mpusz/mp-units","4a563d8711e943fe4b66a630b99dd9cbaa1ffff4","mpusz","2020-03-24 22:27:11","false","Measurement example added",13,18,0
"mpusz/mp-units","dbcbdbcef519547e8a62ffc2249c8b815d220431","mpusz","2023-06-05 17:42:48","false","docs: comments cleanup in tests",48,56,1
"mpusz/mp-units","9c6798b978b71c7f07344ed69945fc68c0c50f8a","mpusz","2020-11-04 21:23:49","false","build: Conan deployment variables are not fixed anymore",19,25,0
"mpusz/mp-units","c6d195fc13b45a52936842bee196ad19e7d27403","mpusz","2021-04-16 17:03:36","false","Merge branch 'master' of github.com:mpusz/units",32,31,1
"mpusz/mp-units","e2099ed95b9c8b00803d2b9f5288319e9251c0da","mpusz","2019-05-07 14:59:02","false","CI scripts switched to gcc-9",2,7,0
"mpusz/mp-units","0bd7951175bd3ef39926cc73f58bf930a10a8d81","mpusz","2019-12-17 08:14:05","false","Design documentation updated",20,15,0
"mpusz/mp-units","bacb92e5d39a90414d5070b557c9835bf1f781b6","mpusz","2020-12-21 21:15:56","false","build: UNITS_DOWNCAST_MODE handling in CMake refactored",19,27,1
"mpusz/mp-units","ff02658a56da4ece05a0db897bd2a7edce626746","mpusz","2019-11-03 10:11:16","false","fixed_string fixed",14,13,0
"mpusz/mp-units","7774466c1c0e1f2412a25e89f55b1469841478d5","mpusz","2023-06-16 11:54:22","false","fix: clang-17 specific compilation fixes (partially contributed by @JohelEGP)",14,56,1
"mpusz/mp-units","becca905e7952d3e929898b9e382f3d60342309f","mpusz","2023-09-18 08:42:15","true","Merge pull request #484 from mpusz/mpusz/issue477

Renaming of accessor functions",3,59,1
"mpusz/mp-units","306bf10836cd53fb595f8d0c10f6289ebee55a31","mpusz","2020-12-16 17:45:16","false","ci: ""Ninja Multi-Config"" set as a default CMake generator",20,27,0
"mpusz/mp-units","0adb50ab0e94a2295d817e0b8f79537f30b557e3","mpusz","2019-04-15 16:24:29","true","merge_dimension_t helper template arguments fixed",2,6,0
"mpusz/mp-units","b614a8c8871be57885f1aa60f285f926e24cf3c3","mpusz","2022-09-09 13:22:35","false","refactor: all dimension types now have `_dim` as a suffix",32,47,1
"mpusz/mp-units","561773da7eadc345c120c3e3fafa9f46394a11db","rbrugo","2020-04-06 19:50:10","false","Added catalytic activity",13,18,0
"mpusz/mp-units","59d9cd14079a0acaf0283635e1057eabbe329901","chiphogg","2022-03-11 03:50:08","false","static_cast for first factor",31,41,1
"mpusz/mp-units","94bd2a23cae7006460dd544956c716e204edbb0c","mpusz","2023-09-26 16:25:03","false","build: got rid of old gcc hacks",2,60,1
"mpusz/mp-units","4a01f056580376b79e01bd723278a50d22fa6017","mpusz","2023-05-09 16:00:57","true","Merge pull request #455 from dbraeckelmann/patch-1

Fixed typo in storage_capacity.rst headline",48,55,1
"mpusz/mp-units","915ca82a0b9ad7daaee009016dbe0a8a66a3cf7d","mpusz","2022-12-20 16:23:29","false","refactor: `__cpp_explicit_this_parameter` implementation of `number()` added",30,51,1
"mpusz/mp-units","0417507b498d65c885540e048fcb9ae890ed6460","mpusz","2023-02-09 05:49:19","false","refactor: math refactored to the latest library state",43,52,1
"mpusz/mp-units","4c98c55cca8d31ecd803fab6be4e193aa657256e","mpusz","2023-06-08 19:53:14","false","test: angstrom test added to IAU",48,56,1
"mpusz/mp-units","1eee6cbe93df4571d27fb28c603e90edfb53628b","mpusz","2020-09-15 05:30:27","false","docs: CHANGELOG updated",16,23,0
"mpusz/mp-units","3d081d37e681b67c28cec1d03d465d880aae7dbc","mpusz","2020-12-28 17:42:03","false","perf: `std::is_same_v` replaced with `units::is_same_v`",17,27,1
"mpusz/mp-units","4d1e225d9e05a7d9a3b0e55f551844fd771e9472","mpusz","2019-11-09 14:16:37","false","UnitRep renamed to QuantityRep",13,13,0
"mpusz/mp-units","14952dfbf494872f722653e1897942825ba54d6e","mpusz","2022-11-11 00:42:44","false","refactor(unit test): `speed_of_light_unit` renamed to `speed_of_light_in_vacuum_unit` in `unit_test`",33,49,1
"mpusz/mp-units","a9204e2473d510552c19a01abe186e5b7daaa600","mpusz","2023-08-23 15:15:32","false","refactor: `number()` and `number_in()` renamed to `value()` and `value_in()`

Resolves #423",11,59,1
"mpusz/mp-units","ce583d40e00157236f387b0c1e2f9557a5fe0af6","JohelEGP","2020-09-09 06:22:34","false","style: name parameter after what's being tested",13,23,0
"mpusz/mp-units","71e3dba69a12f79f577e9ee0b6792d9fbad853c8","mpusz","2020-09-04 20:48:36","false","symbol_text refactored",15,23,0
"mpusz/mp-units","fa2bdd1e08d4abfc4cf45d568ef8566e43db3f21","mpusz","2019-10-15 19:20:01","false","More 'todo' -> 'TODO' changes",13,13,0
"mpusz/mp-units","69dcfd2e6dda3350e69d7c417f66095872621626","mpusz","2019-12-28 18:00:19","false","Bitrate UDLs fixed",17,15,0
"mpusz/mp-units","da11f41529e695b04073abd0042e2d23f535de63","mpusz","2019-09-19 04:26:30","false","Unit test for mixed units added",4,12,0
"mpusz/mp-units","51f3739e46c277c6d6d1bef8cfdfe81fbbe4bfa4","kwikius","2020-05-14 16:27:49","false","example linear_algebra : change deduced type of iterator index to unsigned type",16,19,0
"mpusz/mp-units","4622979ed9f5455d7cc338e383cb3f36efd30f80","JohelEGP","2021-03-18 17:23:46","false","refactor: make the interface of reference more visible",35,30,1
"mpusz/mp-units","4cb1122ff4e325abb2586fcc79c9e4cc4cd871f5","JohelEGP","2020-09-10 03:27:37","false","fix: require equal exponent ratios for DimensionOf when UNITS_DOWNCAST OFF",14,23,0
"mpusz/mp-units","4efed3c6d439a6104548f8d1264357bc2b3f306a","JohelEGP","2021-12-13 09:01:16","true","refactor: update Clang 14 to not require range-v3 (#321)

* Revert ""refactor: update hacks for LLVM 14""

This reverts commit d142844de71ccfcbc0a19387021e0e50d7b65de1.

* refactor: update Clang 14 to not require range-v3",32,38,1
"mpusz/mp-units","1c64e9f4a2d1640cec5448d1c5d7e5530f6728c1","JohelEGP","2020-08-22 20:06:51","false","refactor: remove Expects macro",15,23,0
"mpusz/mp-units","fbbddb9e7b24e9c726626d53cbd77e175800664d","JohelEGP","2023-03-04 18:28:37","false","refactor: update hacks for LLVM 17",44,53,1
"mpusz/mp-units","79ef21b2a5c432031d854a6f3f54bda7c3211e9a","mpusz","2022-09-22 08:23:41","false","refactor: `power::ratio` renamed to `power::exponent`",30,48,1
"mpusz/mp-units","12200f6f404256f26ded99c4c94d24871cd46a29","mpusz","2019-10-01 14:29:13","false","operator% constrained to integral types only (resolves #16)",14,12,0
"mpusz/mp-units","6b98671a9f84542f2691bc1d43f7cd0fabfb10c8","mpusz","2022-10-03 13:16:23","false","Merge branch 'master' of github.com:mpusz/units",30,48,1
"mpusz/mp-units","d1473bfde7f4206ef76647d1c20f1676c6d1b64c","mpusz","2021-04-29 09:24:52","false","ci: fixed setting Ninja as a default generator for Conan",32,31,1
"mpusz/mp-units","c73ba84ad35145fd887ce25352ed772a3378b876","mpusz","2020-02-24 18:15:46","false","Natural Units support added",14,17,0
"mpusz/mp-units","8ed82dfe96a70111d0dc53ffd1b0aec443779ece","mpusz","2023-06-13 14:32:52","false","refactor: `DerivedFromQuantityKindSpecOf` introduced to remove code duplications",48,56,1
"mpusz/mp-units","fc7b0e44e23aca48d180dcb8ca09e64d68876417","mpusz","2021-03-19 22:04:52","false","feat: :boom: !`data` system renamed to `isq::iec80000` (quantity names renamed too)

Relates to #253",32,30,1
"mpusz/mp-units","15dd7462ecf6b88d623a4f6aadbb79211f2c0fb9","mpusz","2019-04-05 15:45:09","false","upcastable renamed to upcast_base",2,6,0
"mpusz/mp-units","b9f2b7fe9d5fddab51ff6306cbc064c288cf3e06","mpusz","2022-12-23 18:21:01","false","refactor: `std::chrono` support refactored for V2",34,51,1
"mpusz/mp-units","997d5f22f1dd94e064ce7295125d4962f9fee292","mpusz","2020-06-22 19:35:24","false","glide_computer example documentation updated",19,21,0
"mpusz/mp-units","9ab8136c982f76d824648bb51a291871cd736a11","mpusz","2023-06-13 11:52:14","false","refactor: `has_unit_symbol()` added",48,56,1
"mpusz/mp-units","c2f9a62e34d8df569bc9c814fac4c7b633a326a6","mpusz","2021-02-16 18:16:30","false","docs: CHANGELOG updated",27,29,1
"mpusz/mp-units","0021e66651fa22c77ac7c8cfac67464b8fb4b6e3","JohelEGP","2020-09-08 02:28:25","false","style: complete section name",17,23,0
"mpusz/mp-units","ffc429a4b8d399e51cb2af8ab18ab52d535ad83f","mpusz","2020-09-23 14:48:51","false","docs: basic concepts UML diagram updated with quantity point",18,24,0
"mpusz/mp-units","c8bbaec67a772a53e28b32e61fb36559d69ebdb3","mpusz","2020-12-23 20:15:24","false","ci: New CI GitHub action added",19,27,1
"mpusz/mp-units","669007bc66b4c73e8085342ed778a0f4159a3757","mpusz","2023-06-16 06:39:49","false","build: repo URL fixed in conanfile",14,56,1
"mpusz/mp-units","99f4c92230fd1ce5a7c4b861ade0007ff077b854","mpusz","2020-03-09 18:48:02","false","""docs"" added to conan export_sources",15,17,0
"mpusz/mp-units","8b534c8d8b0ef02af3c9d011c491f3407b12f400","mpusz","2022-08-31 10:56:08","false","feat: degrees and rotations support added

Resolves #370",31,47,1
"mpusz/mp-units","e7fff94d7c5c6f09e3ec6fc35e0051785ee28798","mpusz","2022-11-30 17:36:16","false","refactor(example): `hello_units` refactored",34,50,1
"mpusz/mp-units","a954f5d924b459398de74ab8f2336b5adc75697d","mpusz","2021-04-05 15:19:14","false","build: Conan testing version is now hosted on Artifactory

Bintray is going to be EOL soon",32,30,1
"mpusz/mp-units","019e4cb1435041b7985fed5861537b7757ee8da2","mpusz","2021-04-01 12:04:07","false","docs: Usage examples updated to prefer references rather than UDLs",33,30,1
"mpusz/mp-units","1afdf99dad673ae6f2271d48a0f502ffd5cb3545","mpusz","2020-05-07 07:05:26","false","Conductance concept definition fixed",15,19,0
"mpusz/mp-units","35036ae4d84e074446cbec8abe0372e221dff317","mpusz","2020-09-07 10:45:56","false","docs: quick start example updated with fmt

Compiler Explorer finaly does not time out of fmt library :-)",17,23,0
"mpusz/mp-units","25483cc29f0b1bf116a7774aba11b77cfed81765","mpusz","2021-04-29 12:39:47","false","ci: set default shell for MSVC to be able to run conanvcvars.bat",32,31,1
"mpusz/mp-units","52e7f57c69e8df9afcfcf7c8fdef726dc40ab12f","mpusz","2020-03-25 15:30:08","false","Measurement example updated",13,18,0
"mpusz/mp-units","97da55edfa40f43f24c653b744b5e25df773e14f","mpusz","2022-12-29 17:59:10","false","refactor: the rest of the systems refactored for V2",34,51,1
"mpusz/mp-units","ab3f75d3e0b3a941376eab053184831e73eb8bbe","mpusz","2023-08-25 07:32:57","false","refactor: `make_quantity_point` declaration moved to a concept header file",9,59,1
"mpusz/mp-units","163a2502ad417e07ff45005af68f7fa7b4a10fe1","mpusz","2021-11-16 09:51:04","false","fix: account for an empty string in VS2022",30,38,1
"mpusz/mp-units","ca3d111579bef372a293f6edb5cb91f4395f5f9b","mpusz","2021-10-20 18:18:15","false","fix: CTAD test disabled for most of the compilers",27,37,1
"mpusz/mp-units","9d3a1445513cc2cbbf8040d70cdcc5da07c1353b","mpusz","2022-09-09 13:18:49","false","test: a few more tests added to the framework v2 example",32,47,1
"mpusz/mp-units","b67fc482508c9eb480a166b5046735783528d724","mpusz","2023-07-07 18:43:06","false","docs: URLs added to the ""Introduction"" chapter",11,57,1
"mpusz/mp-units","9370c61022a918c4efabda78ecab7cf6298dad37","mpusz","2023-07-10 10:34:46","false","docs: proper link to ""Dimensionless Quantities"" chapter added in FAQ",12,57,1
"mpusz/mp-units","cf14032dcea30996627c7128e208d15ca5c696c4","mpusz","2021-04-07 09:54:35","false","refactor: `custom_systems` example moved to the parent directory",32,30,1
"mpusz/mp-units","5af82e3162fb1a174b2a5e1a064d9356633e69de","mpusz","2023-08-23 13:42:55","false","refactor: `point_from` renamed to `point_for`",13,59,1
"mpusz/mp-units","c610b049047bc1ce3d6c04b1337b241862cbfdb3","yasamoka","2020-03-26 06:52:48","false","StandardCharT is now char if only one symbol is provided",13,18,0
"mpusz/mp-units","df290a74f0c63c63176d7c42b90065aa1eee4c42","chiphogg","2022-08-11 15:56:10","false","Remove shadowing declaration of `pi`",34,46,1
"mpusz/mp-units","50a0e0dc814732a6197cf524dfaa9c194a854864","hofbi","2022-05-12 12:07:09","false","add flak8 check",34,43,1
"mpusz/mp-units","234b1cf15b7cc2ae3e762b51a9510ddc2da8cef9","mpusz","2019-04-07 07:44:56","false","build.py fixed",2,6,0
"mpusz/mp-units","031da7df42cc756a91a5fe9d70c119c73c1cf3a1","kwikius","2020-05-21 08:57:37","false","si angle header : fix wrong literal return type so now returns an angle rather than a length!",16,20,0
"mpusz/mp-units","6d105729229a0e88d164fae1cc101998f8f963a6","mpusz","2023-06-14 06:14:43","false","refactor: concept cleanup",48,56,1
"mpusz/mp-units","5250afac577adbdac02c33ad9017eba0cb0b0105","rbrugo","2020-03-20 12:09:06","false","Removed no longer valid tests",14,18,0
"mpusz/mp-units","142e5d98cb8027e1a8c003f0cd49c05606fa55a9","rbrugo","2020-04-07 00:02:17","false","New si.h header",13,18,0
"mpusz/mp-units","14f00ef7759279e89bc7f5459c224b2a08672d11","rbrugo","2020-04-05 14:49:19","false","Added inductance",13,18,0
"mpusz/mp-units","63f3dd2be6bef9824c0a2c563c80bdbf3b2000ca","mpusz","2022-03-22 09:04:49","true","Merge pull request #344 from JohelEGP/quotient_remainder_theorem

test(static): simplify quotient_remainder_theorem test cases",32,42,1
"mpusz/mp-units","6f1832ceb3d3d862936f551a190184d3e39375bc","mpusz","2023-08-25 18:27:38","false","feat: `BaseQuantitySpec` concept removed as it had no use",9,59,1
"mpusz/mp-units","dedf56b598c4e1eb04daad9989b514715592039b","mpusz","2020-12-22 13:36:11","false","test: chrono unit tests fixed to use implementation-specific representation type",19,27,1
"mpusz/mp-units","e0327adb47068d4ca543c0e08270d1e70622b799","mpusz","2019-04-04 08:34:58","false","Copyrights added to conanfile",2,6,0
"mpusz/mp-units","166dd1e94424f6bf0d9c201ed03249c1fb16dba5","chiphogg","2022-03-19 15:55:34","false","Work around numbers with very large first factors

We introduce the `known_first_factor` variable template.",32,42,1
"mpusz/mp-units","e3346dd8bf2993df3310372e912c36c0fe4bbbaf","bourumir-wyngs","2023-08-06 09:43:43","false","Fix ""control reaches end of non void function"" error.",15,58,1
"mpusz/mp-units","92b7069c35bba592743c1132c4c2eccfa9c59c6c","mpusz","2023-09-26 16:55:02","false","ci: clang-17 enabled",2,60,1
"mpusz/mp-units","ba37c37abdadd17fb3159c1781ba4ae325c7ba87","mpusz","2021-01-06 18:06:09","false","fix: MSVC compilation fixed",21,27,1
"mpusz/mp-units","9d64b75afebd7e9c81ac17005847e08aa992836c","mpusz","2023-09-13 06:58:17","false","docs: basic examples refactored to not use `auto`",4,59,1
"mpusz/mp-units","84c16b27bb8cbccaeb33ed7e7c6ef9797fd4107e","mpusz","2022-12-27 09:49:47","false","refactor: `cotes_angle` renamed to `cotes_angle_constant` + `cotes_angle` constant introduced",34,51,1
"mpusz/mp-units","60d9a9036ae30a54b3223c0b62fc44221fa71e09","yasamoka","2020-03-25 05:22:10","false","added more operators; added tests",13,18,0
"mpusz/mp-units","16ad71a31a84bb184a903cde1e6fd4adb0563115","mpusz","2023-06-13 06:21:07","false","test: more tests for `pow` added for units and quantity specs",48,56,1
"mpusz/mp-units","8c6237fd82a0a89c502cc04279bfa52fd7e49187","mpusz","2020-08-17 19:54:06","false","range-v3 updated to 0.11.0",18,22,0
"mpusz/mp-units","8d711cdf8ef9d6b05c7327a681b6359c5701e0fd","mpusz","2022-09-08 17:21:47","false","fix: hello_units reverted to the original state",32,47,1
"mpusz/mp-units","36b0495ae352657959bc6f8988e2f379f7ae79b5","mpusz","2020-05-14 10:41:13","false","Changelog updated",16,19,0
"mpusz/mp-units","05da8b6153c815281a96e74179ac77db70b63066","mpusz","2022-12-27 11:50:47","false","fix: `storage_capacity` definition fixed",34,51,1
"mpusz/mp-units","f2163aa098d8afac37d298bcf3443a22972c3689","mpusz","2020-01-28 07:38:23","false","Conan package id fixed to header_only",18,16,0
"mpusz/mp-units","d8367d31b85548bce4960fc3f2e08a9042ce7107","mpusz","2021-03-15 21:29:05","false","ci: libc++ installation added as a separate CI step",32,29,1
"mpusz/mp-units","7c4e5d086a1c7bd84b6c76078a58fa227cbed909","mpusz","2019-10-01 18:08:01","true","Merge pull request #17 from jansende/patch-2

Optimized floating point unit conversions",13,12,0
"mpusz/mp-units","067076143eee33a163ce9cdf2b53c0386fca1c74","mpusz","2023-06-02 08:57:04","false","fix(unit test): `detail` namespace applied to `BaseDimension` concept",48,56,1
"mpusz/mp-units","c7d7c7d49fd4a510b05423a9e78759999c23dc68","mpusz","2022-12-29 18:00:15","false","refactor: `isq_angle` refactored after consulting with Paul Quincey",34,51,1
"mpusz/mp-units","f9e1404e02edb986c4fd0efc7dae622db3978da8","mpusz","2023-06-08 20:01:40","false","style: formatting updated to make pre-commit happy",48,56,1
"mpusz/mp-units","272a8d8b5cbdcc25e745a76240b94b364b347b31","mpusz","2023-06-12 08:39:18","false","refactor: `QuantityConvertibleTo` checks reordered to limit type truncation on conversion warnings",48,56,1
"mpusz/mp-units","90c9daa27fcb4b9a649681efb307630ce1709c48","mpusz","2021-04-06 20:21:21","false","build: gsl-lite updated to 0.38.0",32,30,1
"mpusz/mp-units","d78508a02ff9b13f3090b4c5489babffccf2359b","mpusz","2019-04-09 20:31:09","false","Refactored units definitions, added the remaining SI base units, refactored header includes",2,6,0
"mpusz/mp-units","221883bb25e3191da3a15d127fdbb81d92a9d1f7","mpusz","2021-03-16 22:05:45","false","build: core library and each system separated to dedicated CMake targets

Refers to #249",32,30,1
"mpusz/mp-units","721f859dcaca2f044a3a2daac47b04a43debe751","mpusz","2022-12-19 14:50:58","true","Update cmake/TestHeaders.cmake

Co-authored-by: Johel Ernesto Guerrero Peña <johelegp@gmail.com>",30,51,1
"mpusz/mp-units","21f85fc4fe571eda8aaca6371b4f152fbc47fbcf","mpusz","2020-03-19 08:35:18","false","""Text output"" chapter finished",15,18,0
